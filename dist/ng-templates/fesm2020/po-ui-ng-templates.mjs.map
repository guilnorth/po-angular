{"version":3,"file":"po-ui-ng-templates.mjs","sources":["../../../projects/templates/src/lib/utils/util.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/literals/i18n/po-modal-password-recovery-literals.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/enums/po-modal-password-recovery-type.enum.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery-base.component.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/enums/po-modal-password-recovery-modal-content.enum.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery.service.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component.html","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery.component.html","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery.component.ts","../../../projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery.module.ts","../../../projects/templates/src/lib/components/po-page-background/po-page-background.component.html","../../../projects/templates/src/lib/components/po-page-background/po-page-background.component.ts","../../../projects/templates/src/lib/components/po-page-background/po-page-background.module.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/enums/po-page-blocked-user-reason.enum.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user-base.component.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user-contacts/po-page-blocked-user-contacts.component.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user-contacts/po-page-blocked-user-contacts.component.html","../../../projects/templates/src/lib/components/po-page-blocked-user/literals/i18n/po-page-blocked-user-literals.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user-reason/po-page-blocked-user-reason.component.html","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user-reason/po-page-blocked-user-reason.component.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user.component.ts","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user.component.html","../../../projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user.module.ts","../../../projects/templates/src/lib/components/po-page-change-password/po-page-change-password-base.component.ts","../../../projects/templates/src/lib/components/po-page-change-password/literals/i18n/po-page-change-password-literals.ts","../../../projects/templates/src/lib/components/po-page-change-password/po-page-change-password.service.ts","../../../projects/templates/src/lib/components/po-page-change-password/po-page-change-password.component.html","../../../projects/templates/src/lib/components/po-page-change-password/po-page-change-password.component.ts","../../../projects/templates/src/lib/components/po-page-change-password/po-page-change-password.module.ts","../../../projects/templates/src/lib/services/po-page-dynamic/po-page-dynamic.service.ts","../../../projects/templates/src/lib/components/po-page-dynamic-detail/po-page-dynamic-detail-actions.service.ts","../../../projects/templates/src/lib/services/po-page-customization/po-page-customization.service.ts","../../../projects/templates/src/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.component.html","../../../projects/templates/src/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.component.ts","../../../projects/templates/src/lib/services/po-page-dynamic/po-page-dynamic.module.ts","../../../projects/templates/src/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.module.ts","../../../projects/templates/src/lib/components/po-page-dynamic-edit/po-page-dynamic-edit-actions.service.ts","../../../projects/templates/src/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.component.html","../../../projects/templates/src/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.module.ts","../../../projects/templates/src/lib/services/po-page-customization/po-page-customization.module.ts","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter-base.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter.component.html","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-page-dynamic-search-base.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-page-dynamic-search.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-page-dynamic-search.component.html","../../../projects/templates/src/lib/components/po-page-dynamic-search/po-page-dynamic-search.module.ts","../../../projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-table-literals.ts","../../../projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-list-base.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-table-actions.service.ts","../../../projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-table.component.ts","../../../projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-table.component.html","../../../projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-table.module.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-internal.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler.service.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-base.component.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-literals.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-parameters/po-job-scheduler-parameters-template/po-job-scheduler-parameters-template.directive.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-parameters/po-job-scheduler-parameters-template/po-job-scheduler-parameters-template.module.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-lookup.service.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-execution/po-page-job-scheduler-execution.component.html","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-execution/po-page-job-scheduler-execution.component.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component.html","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-summary/po-page-job-scheduler-summary.component.html","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler-summary/po-page-job-scheduler-summary.component.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler.component.html","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler.component.ts","../../../projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler.module.ts","../../../projects/templates/src/lib/components/po-page-login/enums/po-page-login-authentication-type.enum.ts","../../../projects/templates/src/lib/components/po-page-login/po-page-login.service.ts","../../../projects/templates/src/lib/components/po-page-login/po-page-login-base.component.ts","../../../projects/templates/src/lib/components/po-page-login/po-page-login-popover/po-page-login-popover.component.html","../../../projects/templates/src/lib/components/po-page-login/po-page-login-popover/po-page-login-popover.component.ts","../../../projects/templates/src/lib/components/po-page-login/po-page-login.component.html","../../../projects/templates/src/lib/components/po-page-login/po-page-login.component.ts","../../../projects/templates/src/lib/components/po-page-login/po-page-login.module.ts","../../../projects/templates/src/lib/components/components.module.ts","../../../projects/templates/src/lib/services/services.module.ts","../../../projects/templates/src/lib/po-templates.module.ts","../../../projects/templates/src/po-ui-ng-templates.ts"],"sourcesContent":["import { ViewContainerRef } from '@angular/core';\r\nimport { poLocales, poLocaleDefault } from '@po-ui/ng-components';\r\n\r\n/**\r\n * Retorna o idioma atual do navegador\r\n */\r\nexport function getBrowserLanguage(): string {\r\n  // navigator.userLanguage is the value for IE10\r\n  return navigator.language || navigator['userLanguage'];\r\n}\r\n\r\n/**\r\n * Retorna o idioma do navegador, com somente as duas primeiras letras. Por exemplo: \"pt\" ou \"es\".\r\n *\r\n * Caso o valor retornado pelo navegador não estiver dentro dos idiomas suportados pelo PO,\r\n * será retornado a linguagem padrão (poLocaleDefault).\r\n */\r\nexport function getShortBrowserLanguage(): string {\r\n  const language = (getBrowserLanguage() || poLocaleDefault).toLowerCase().substring(0, 2);\r\n\r\n  if (!poLocales.includes(language)) {\r\n    return poLocaleDefault;\r\n  }\r\n\r\n  return language;\r\n}\r\n\r\nexport function convertToBoolean(val: any): boolean {\r\n  if (typeof val === 'string') {\r\n    val = val.toLowerCase().trim();\r\n    return val === 'true' || val === 'on' || val === '';\r\n  }\r\n\r\n  if (typeof val === 'number') {\r\n    return val === 1;\r\n  }\r\n\r\n  return !!val;\r\n}\r\n\r\nexport function convertToInt(value: any, valueDefault?: any): number {\r\n  const validNumber = parseInt(value, 10);\r\n  const validDefaultValue = parseInt(valueDefault, 10);\r\n  const defaultValue = validDefaultValue || validDefaultValue === 0 ? validDefaultValue : undefined;\r\n\r\n  return validNumber || validNumber === 0 ? validNumber : defaultValue;\r\n}\r\n\r\nexport function isTypeof(object: any, type: any) {\r\n  return typeof object === type;\r\n}\r\n\r\n/**\r\n *\r\n * @param fn Função que será executada dentro do contexto. Podendo ser o nome da função\r\n * ou a referência da mesma.\r\n *\r\n * @param context Contexto do qual a função será executada.\r\n */\r\nexport function callFunction(fn: any, context: any, param?): void {\r\n  if (isTypeof(fn, 'function')) {\r\n    fn.call(context, param);\r\n  } else {\r\n    context[fn](param);\r\n  }\r\n}\r\n\r\nexport function convertIsoToDate(value: string, start: boolean, end: boolean) {\r\n  if (value) {\r\n    const day = parseInt(value.substring(8, 10), 10);\r\n    const month = parseInt(value.substring(5, 7), 10);\r\n    const year = parseInt(value.substring(0, 4), 10);\r\n    if (start) {\r\n      const date = new Date(year, month - 1, day, 0, 0, 0);\r\n\r\n      setYearFrom0To100(date, year);\r\n\r\n      return date;\r\n    } else if (end) {\r\n      const date = new Date(year, month - 1, day, 23, 59, 59);\r\n\r\n      setYearFrom0To100(date, year);\r\n\r\n      return date;\r\n    } else {\r\n      const milliseconds = Date.parse(value);\r\n      const timezone = new Date().getTimezoneOffset() * 60000;\r\n      return new Date(milliseconds + timezone);\r\n    }\r\n  }\r\n}\r\n\r\nexport function convertDateToISOExtended(date: Date, time?: string) {\r\n  if (date) {\r\n    const getMonth = date.getMonth() + 1;\r\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\r\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\r\n    const year = formatYear(date.getFullYear());\r\n\r\n    const dateString = date.toString();\r\n\r\n    if (time) {\r\n      return year + '-' + month + '-' + day + time;\r\n    } else {\r\n      return (\r\n        year +\r\n        '-' +\r\n        month +\r\n        '-' +\r\n        day +\r\n        'T' +\r\n        dateString.substring(16, 24) +\r\n        dateString.substring(28, 31) +\r\n        ':' +\r\n        dateString.substring(31, 33)\r\n      );\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Transforma o ano em uma string no formato yyyy e caso o ano seja menor que 1000 preenche com zeros a esquerda.\r\n *\r\n * @param year Ano\r\n */\r\nexport function formatYear(year: number) {\r\n  if (year >= 1000) {\r\n    return year.toString();\r\n  }\r\n\r\n  if (year > 99 && year < 1000) {\r\n    return `0${year}`;\r\n  }\r\n\r\n  if (year > 9 && year < 100) {\r\n    return `00${year}`;\r\n  }\r\n\r\n  if (year >= 0 && year < 10) {\r\n    return `000${year}`;\r\n  }\r\n}\r\n\r\nexport function isEquals(value, comparedValue) {\r\n  return JSON.stringify(value) === JSON.stringify(comparedValue);\r\n}\r\n\r\n/**\r\n * Caso o ano original da data seja entre 0 e 100 atribui esse valor ao ano, pois o `new Date` do javascript transforma o ano para 190X.\r\n *\r\n * @param date Data\r\n * @param year Ano original\r\n */\r\nexport function setYearFrom0To100(date: Date, year: number) {\r\n  if (year >= 0 && year < 100) {\r\n    date.setFullYear(year);\r\n  }\r\n}\r\n\r\nexport function sortOptionsByProperty(options: Array<any>, property: string) {\r\n  options.sort((optionA, optionB) => {\r\n    optionA = optionA[property].toString().toLowerCase();\r\n    optionB = optionB[property].toString().toLowerCase();\r\n\r\n    if (optionA < optionB) {\r\n      return -1;\r\n    }\r\n    if (optionA > optionB) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n}\r\n\r\nexport function removeDuplicatedOptions(list: Array<any>) {\r\n  for (let i = 0; i < list.length; i++) {\r\n    if (i === 0) {\r\n      continue;\r\n    }\r\n\r\n    if (list.findIndex(op => op.value === list[i].value) !== i) {\r\n      list.splice(i, 1);\r\n      i--;\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUndefinedAndNullOptions(list: Array<any>) {\r\n  for (let i = 0; i < list.length; i++) {\r\n    if (list[i].value === undefined || list[i].value === null) {\r\n      list.splice(i, 1);\r\n      i--;\r\n    }\r\n  }\r\n}\r\n\r\nexport function validValue(value: any) {\r\n  return (value !== null && value !== undefined && value !== '') || value === false;\r\n}\r\n\r\nexport function isExternalLink(url): boolean {\r\n  return url ? url.startsWith('http') : false;\r\n}\r\n\r\nexport function openExternalLink(url): void {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nexport function getFormattedLink(link: string): string {\r\n  let formattedLink = '';\r\n  // Retira todos os pontos no começo da URL.\r\n  if (link) {\r\n    formattedLink = link.replace(/^(\\.)+/g, '');\r\n  }\r\n  // Verifica se foi utilizado uma rota que não comece com barra.\r\n  if (!formattedLink.startsWith('/')) {\r\n    formattedLink = '/'.concat(formattedLink);\r\n  }\r\n  return formattedLink;\r\n}\r\n\r\n/**\r\n * Método responsável por ordenar dois valores.\r\n *\r\n * @param leftSide Primeiro valor a ser comparado.\r\n * @param rightSide Segundo valor a ser comparado.\r\n * @param ascending Determina se será em ordem ascendente ou descendente.\r\n */\r\nexport function sortValues(leftSide: string, rightSide: string, ascending: boolean = true): number {\r\n  if (ascending) {\r\n    if (leftSide < rightSide) {\r\n      return -1;\r\n    } else if (leftSide > rightSide) {\r\n      return 1;\r\n    }\r\n  } else if (ascending === false) {\r\n    if (leftSide < rightSide) {\r\n      return 1;\r\n    } else if (leftSide > rightSide) {\r\n      return -1;\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function validateDateRange(date: Date, dateStart: Date, dateEnd: Date) {\r\n  if (dateStart && dateEnd) {\r\n    return date >= dateStart && date <= dateEnd;\r\n  } else if (dateStart && !dateEnd) {\r\n    return date >= dateStart;\r\n  } else if (!dateStart && dateEnd) {\r\n    return date <= dateEnd;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function capitalizeFirstLetter(text: string): string {\r\n  return `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\r\n}\r\n\r\n/**\r\n * Mapeia um novo array apenas com as propriedades definidas pelo desenvolvedor baseado em um array de\r\n * origem.\r\n *\r\n * Exemplo:\r\n *\r\n * ```\r\n * const people = [\r\n *  { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'São Paulo', dependents: 2 },\r\n *  { id: 2, name: 'Beltrano', birthdate: '1997-01-21', genre: 'Female', city: 'Joinville', dependents: 0 },\r\n *  { id: 3, name: 'Siclano', birthdate: '1995-07-15', genre: 'Male', city: 'Joinville', dependents: 0 }\r\n * ];\r\n *\r\n * const properties = ['id', 'name'];\r\n *\r\n * const idAndName = mapArrayByProperties(people, properties);\r\n *\r\n * console.log(idAndName); // [{ id: 1, name: 'Fulano' }, { id: 2, name: 'Beltrano' }, { id: 3, name: 'Siclano' }]\r\n * ```\r\n *\r\n * Um outro uso para o método é \"parear\" todos os objetos do array com as mesmas propriedades.\r\n *\r\n * ```\r\n * const customers = [\r\n *  { id: 1, name: 'Fulano', city: 'São Paulo', dependents: 2 }, // sem genre\r\n *  { id: 2, name: 'Beltrano', genre: 'Female', city: 'Joinville' }, // sem dependents\r\n *  { id: 3, name: 'Siclano', genre: 'Male', city: 'Joinville', dependents: 0 }\r\n * ];\r\n * const properties = ['id', 'name', 'city', 'genre', 'dependents'];\r\n *\r\n * const pattern = mapArrayByProperties(customers, properties);\r\n * console.log(pattern);\r\n *\r\n * // [\r\n * //   { id: 1, name: 'Fulano', city: 'São Paulo', genre: undefined, dependents: 2 },\r\n * //   { id: 2, name: 'Beltrano', city: 'Joinville', genre: 'Female', dependents: undefined },\r\n * //   { id: 3, name: 'Siclano', city: 'Joinville', genre: 'Male', dependents: 0 }\r\n * // ]\r\n * ```\r\n *\r\n * @param items {Array<any>} Array de items original.\r\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\r\n *\r\n * @returns Array<any>\r\n */\r\nexport function mapArrayByProperties(items: Array<any> = [], properties: Array<string> = []): Array<any> {\r\n  return items.map(item => mapObjectByProperties(item, properties));\r\n}\r\n\r\n/**\r\n * Mapeia um novo objeto apenas com as propriedades definidas pelo desenvolvedor.\r\n *\r\n * Exemplo:\r\n *\r\n * ```\r\n * const person = { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'São Paulo', dependents: 2 };\r\n *\r\n * const properties = ['id', 'name'];\r\n *\r\n * const idAndName = mapObjectByProperties(person, properties);\r\n *\r\n * console.log(idAndName); // { id: 1, name: 'Fulano' }\r\n * ```\r\n *\r\n * @param object {Array<any>} Array de items original.\r\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\r\n *\r\n * @returns Array<any>\r\n */\r\nexport function mapObjectByProperties(object: any = {}, properties: Array<string> = []) {\r\n  const getSelectedProperties = (selectedProperties, property) => ({\r\n    ...selectedProperties,\r\n    [property]: object[property]\r\n  });\r\n\r\n  return properties.reduce(getSelectedProperties, {});\r\n}\r\n\r\n/**\r\n * Retorna os valores de um objeto dentro de um array.\r\n *\r\n * > Simula o Object.values(obj), o mesmo deve ser removido assim que a versão typescrit for atualizada.\r\n *\r\n * @param object Objeto de onde será pego os valores.\r\n */\r\nexport function valuesFromObject(object: any = {}): Array<any> {\r\n  return Object.keys(object).map(property => object[property]);\r\n}\r\n\r\n/**\r\n * adiciona 0 no tempo informado, caso menor q 10\r\n *\r\n * @param time\r\n */\r\nexport function addZero(time: number) {\r\n  if (!time) {\r\n    return '00';\r\n  }\r\n\r\n  if (time < 10) {\r\n    return `0${time}`;\r\n  }\r\n\r\n  return time;\r\n}\r\n\r\n/**\r\n * Remove do objeto as propriedades especificadas.\r\n *\r\n * Exemplo:\r\n *\r\n * ```\r\n * key: ['id', 'cpf']\r\n * newItemValue: { id: '123', cpf: '456', name: 'Test' }\r\n * Resultado: { name: 'Test' }\r\n * ```\r\n *\r\n * @param keys lista de propriedades para ser removida do objeto.\r\n * @param newItemValue objeto que se deseja remover as propriedades.\r\n * @returns objeto sem as propriedades especificadas.\r\n */\r\nexport function removeKeysProperties(keys: Array<any>, newItemValue: any) {\r\n  keys.forEach(key => delete newItemValue[key]);\r\n  return newItemValue;\r\n}\r\n\r\n/**\r\n * Remove objetos duplicados.\r\n *\r\n * Exemplo:\r\n *\r\n * ```\r\n * item: [{country: 'japao'}, {country: 'brasil'} , {country: 'china'}]\r\n * item2: [{country: 'chile'}, {country: 'brasil'}, {country: 'canada'}]\r\n * key: 'country'\r\n * Resultado:\r\n *    item2 = [{country: 'chile'}, {country: 'canada'} ]\r\n * ```\r\n *\r\n * @param item lista comparada.\r\n * @param item2 lista para remover items duplicados.\r\n * @param key propriedade que será utilizada para realizar a comparação.\r\n */\r\nexport function removeDuplicateItems(item, item2, key) {\r\n  for (let i = 0, len = item.length; i < len; i++) {\r\n    for (let j = 0, len2 = item2.length; j < len2; j++) {\r\n      if (item[i][key] === item2[j][key]) {\r\n        item2.splice(j, 1);\r\n        len2 = item2.length;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export const poModalPasswordRecoveryLiterals = {\r\n  en: <any>{\r\n    cancelButton: 'Cancel',\r\n    closeButton: 'Close',\r\n    continueButton: 'Continue',\r\n    email: 'e-mail',\r\n    emailErrorMessagePhrase: 'Invalid e-mail format',\r\n    emailSentConfirmationPhrase: `We have sent the instructions and new password creation link to your e-mail.\r\n    If you did not receive it after a few minutes, check your spam box or click Resend.`,\r\n    emailSentTitle: 'E-mail sent',\r\n    forgotPasswordTitle: 'Forgot your password?',\r\n    insertCode: 'Type the code',\r\n    insertEmail: 'Enter your e-mail',\r\n    insertPhone: 'Enter your mobile number',\r\n    phoneErrorMessagePhrase: 'Invalid phone number',\r\n    prepositionIn: 'in',\r\n    prepositionOr: 'or',\r\n    recoveryPasswordPhrase: 'To recover your password we will send you a {0} with instructions.',\r\n    resendEmailButton: 'Resend',\r\n    resendSmsCodePhrase: 'If the code does not arrive within a few minutes, please send it again.',\r\n    sendAgainPhrase: 'If the code does not arrive within a few minutes',\r\n    sendAgain: 'send again.',\r\n    sendButton: 'Submit',\r\n    sentSmsCodePhrase: 'We sent a code for your mobile phone.',\r\n    sms: 'SMS',\r\n    smsCodeErrorMessagePhrase: 'Invalid code. Please re-enter or contact support',\r\n    supportContact: 'If you do not have access to {0} contact support',\r\n    telephone: 'telephone',\r\n    typeCodeTitle: 'Enter sent code'\r\n  },\r\n  es: <any>{\r\n    cancelButton: 'Cancelar',\r\n    closeButton: 'Cerrar',\r\n    continueButton: 'Continuar',\r\n    email: 'e-mail',\r\n    emailErrorMessagePhrase: 'Formato de correo electrónico no válido',\r\n    emailSentConfirmationPhrase: `Enviamos las instrucciones y enlace de creación de nueva contraseña para su correo electrónico.\r\n    Si no ha recibido después de unos minutos, compruebe su caja de spam o haga clic en Reenviar`,\r\n    emailSentTitle: 'E-mail enviado',\r\n    forgotPasswordTitle: 'Olvidaste tu contraseña?',\r\n    insertCode: 'Introduzca el código',\r\n    insertEmail: 'Introduce tu e-mail',\r\n    insertPhone: 'Introduce tu número de celular',\r\n    phoneErrorMessagePhrase: 'Número de teléfono no válido',\r\n    prepositionIn: 'en',\r\n    prepositionOr: 'u',\r\n    recoveryPasswordPhrase: 'Para recuperar su contraseña vamos a enviar un {0} con instrucciones.',\r\n    resendEmailButton: 'Reenviar',\r\n    resendSmsCodePhrase: 'Si el código no llega dentro de unos minutos, vuelva a enviar.',\r\n    sendAgain: 'envíe de nuevo.',\r\n    sendAgainPhrase: 'Si el código no llega dentro de unos minutos',\r\n    sendButton: 'Enviar',\r\n    sentSmsCodePhrase: 'Enviamos un código para su celular.',\r\n    sms: 'SMS',\r\n    smsCodeErrorMessagePhrase: 'Código no válido. Escriba de nuevo o póngase en contacto con el soporte',\r\n    supportContact: 'Si no tiene acceso a {0} póngase en contacto con el soporte',\r\n    telephone: 'teléfono',\r\n    typeCodeTitle: 'Escribir código enviado'\r\n  },\r\n  pt: <any>{\r\n    cancelButton: 'Cancelar',\r\n    closeButton: 'Fechar',\r\n    continueButton: 'Continuar',\r\n    email: 'e-mail',\r\n    emailErrorMessagePhrase: 'Formato de e-mail inválido',\r\n    emailSentConfirmationPhrase: `Enviamos as instruções e link de criação de nova senha para o seu e-mail.\r\n    Caso não tenha recebido após alguns minutos, verifique sua caixa de spam ou clique em Reenviar.`,\r\n    emailSentTitle: 'E-mail enviado',\r\n    forgotPasswordTitle: 'Esqueceu sua senha?',\r\n    insertCode: 'Digite o código',\r\n    insertEmail: 'Insira seu e-mail',\r\n    insertPhone: 'Insira seu número de celular',\r\n    phoneErrorMessagePhrase: 'Número de telefone inválido',\r\n    prepositionIn: 'em',\r\n    prepositionOr: 'ou',\r\n    recoveryPasswordPhrase: 'Para recuperar sua senha vamos enviar um {0} com instruções.',\r\n    resendEmailButton: 'Reenviar',\r\n    resendSmsCodePhrase: 'Se o código não chegar dentro de alguns minutos envie novamente',\r\n    sendAgain: 'envie novamente.',\r\n    sendAgainPhrase: 'Se o código não chegar dentro de alguns minutos',\r\n    sendButton: 'Enviar',\r\n    sentSmsCodePhrase: 'Enviamos um código para seu celular cadastrado.',\r\n    sms: 'SMS',\r\n    smsCodeErrorMessagePhrase: 'Código inválido. Digite novamente ou contacte o suporte',\r\n    supportContact: 'Se não tiver acesso ao {0} contacte o suporte',\r\n    telephone: 'telefone',\r\n    typeCodeTitle: 'Digitar código enviado'\r\n  },\r\n  ru: <any>{\r\n    cancelButton: 'отменить',\r\n    closeButton: 'близко',\r\n    continueButton: 'близко',\r\n    email: 'по электронной почте',\r\n    emailErrorMessagePhrase: 'Неверный формат электронной почты',\r\n    emailSentConfirmationPhrase: `Мы отправили инструкции и новую ссылку для создания пароля для вашей электронной почты.\r\nЕсли вы не получили его в течение нескольких минут, установите флажок Спам или нажмите Далее.`,\r\n    emailSentTitle: 'Письмо отправлено',\r\n    forgotPasswordTitle: 'Забыли пароль?',\r\n    insertCode: 'Введите код',\r\n    insertEmail: 'Введите адрес электронной почты',\r\n    insertPhone: 'Введите номер вашего мобильного телефона',\r\n    phoneErrorMessagePhrase: 'Неверный номер телефона',\r\n    prepositionIn: 'в',\r\n    prepositionOr: 'или',\r\n    recoveryPasswordPhrase: 'Для восстановления вашего пароля мы вышлем {0} с инструкциями.',\r\n    resendEmailButton: 'Отправить еще раз',\r\n    resendSmsCodePhrase: 'Если код не приходит через несколько минут, попробуйте еще раз.',\r\n    sendAgain: 'отправить снова.',\r\n    sendAgainPhrase: 'Если код не приходит через несколько минут',\r\n    sendButton: 'послать',\r\n    sentSmsCodePhrase: 'Мы отправляем код на ваш зарегистрированный мобильный телефон.',\r\n    sms: 'SMS',\r\n    smsCodeErrorMessagePhrase: 'Неверный код. Повторите или обратитесь в службу поддержки',\r\n    supportContact: 'Если у вас нет доступа к {0}, обратитесь в службу поддержки',\r\n    telephone: 'телефон',\r\n    typeCodeTitle: 'Введите отправленный код'\r\n  }\r\n};\r\n","/**\r\n * @usedBy PoModalPasswordRecoveryComponent\r\n *\r\n * @description\r\n *\r\n * *Enum* para especificação do tipo de recuperação de senha.\r\n */\r\nexport enum PoModalPasswordRecoveryType {\r\n  /** Possibilita ao usuário optar por envio via email ou SMS */\r\n  All = 'all',\r\n\r\n  /** Definição para recuperação apenas por email */\r\n  Email = 'email',\r\n\r\n  /** Definição para recuperação apenas por SMS */\r\n  SMS = 'sms'\r\n}\r\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { PoLanguageService, poLocaleDefault } from '@po-ui/ng-components';\r\n\r\nimport { poModalPasswordRecoveryLiterals } from './literals/i18n/po-modal-password-recovery-literals';\r\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\r\n\r\nconst PoModalPasswordRecoveryDefaultMaxLength = 15;\r\nconst PoModalPasswordRecoveryDefaultMinLength = 15;\r\nconst PoModalPasswordRecoveryDefaultPhone = '(99) 99999-9999';\r\nconst PoModalPasswordRecoveryTypeDefault: PoModalPasswordRecoveryType = PoModalPasswordRecoveryType.Email;\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-modal-password-recovery` é utilizado como template para solicitação de troca de senha.\r\n *\r\n * É composto por uma modal que possui três telas, cada uma com as seguintes características:\r\n *\r\n * - A primeira possui campos para preenchimento de email ou número de telefone;\r\n * - Tela com campo para preenchimento de código SMS enviado para o número de telefone enviado;\r\n * - A terceira se trata de uma confirmação de envio de link para a caixa de email do usuário.\r\n *\r\n *\r\n * A propriedade `p-url-recovery` automatiza a rotina do componente e simplifica o processo\r\n * para recuperação de senha, bastando definir uma url para requisição dos recursos.\r\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\r\n * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.\r\n *\r\n *\r\n * Para a modal de digitação de código SMS, é possível definir uma mensagem de erro\r\n * customizada com a propriedade `p-code-error` e há um link para\r\n * reenvio de código por SMS. Ao reenviar, o evento `p-code-submit` envia um objeto com o telefone do usuário e a quantidade\r\n * de vezes em que o usuário fez a solicitação de reenvio.\r\n *\r\n * > É indicada a utilização da tela de digitação para envio de código SMS apenas\r\n * se a opção por envio SMS for disponibilizada para o usuário.\r\n *\r\n *\r\n * A modal de confirmação contém uma ação de reenvio e o evento `p-submit`\r\n * é quem passa o objeto contendo o email em conjunto com a quantidade de tentativas de reenvio.\r\n *\r\n * > A tela de confirmação é indicada para quando o usuário solicitar a troca através do email.\r\n *\r\n * > Os textos das modals são pré-definidos, imutáveis e são traduzidos de acordo com o idioma do *browser* (pt, en e es)\r\n *\r\n * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\r\n * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\r\n * ```\r\n *   \"assets\": [\r\n *     \"src/assets\",\r\n *     \"src/favicon.ico\",\r\n *     {\r\n *       \"glob\": \"**\\/*\",\r\n *       \"input\": \"node_modules/@po-ui/style/images\",\r\n *       \"output\": \"assets/images\"\r\n *     }\r\n *   ]\r\n * ```\r\n */\r\n@Directive()\r\nexport abstract class PoModalPasswordRecoveryBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Definição de mensagem de erro customizada para quando o usuário passar um código SMS inválido ou errado.\r\n   */\r\n  @Input('p-code-error') codeError: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Endpoint usado pelo template para requisição do recurso. Quando preenchido,\r\n   * o métodos `p-submit` e `p-submit-code` serão ignorados e o componente adquirirá automatização\r\n   * para o processo de solicitação de troca de senha.\r\n   *\r\n   * ### Processos\r\n   * Ao digitar um valor válido no campo de email/telefone e pressionar **enviar**,\r\n   * o componente fará uma requisição `POST` na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuário.\r\n   *\r\n   * ```\r\n   * body {\r\n   *  email: email,\r\n   *  retry?: retry\r\n   * }\r\n   * ```\r\n   *\r\n   *\r\n   * #### Recuperação por email\r\n   * Para a recuperação de senha por **email**, o código de resposta HTTP de status esperado é `204`.\r\n   *\r\n   * Em caso de **sucesso**, será exibida a modal de confirmação de e-mail para o usuário.\r\n   *\r\n   *\r\n   * > A ação **Reenviar** na tela de confirmação efetua uma nova requisição\r\n   * passando-se o objeto com incremento para o valor da propriedade **retry**.\r\n   *\r\n   * *Processo finalizado.*\r\n   *\r\n   *\r\n   * #### Recuperação por SMS\r\n   * Se a opção de recuperação for por **SMS**, o código de status de sucesso deve ser `200`.\r\n   * Em caso de **sucesso**, abre-se a modal de digitação de código SMS e a resposta\r\n   * desta requisição deve retornar uma definição de dados abaixo:\r\n   *\r\n   * ```\r\n   * 200:\r\n   *  {\r\n   *    hash: hash,\r\n   *    urlValidationCode?: url\r\n   *  }\r\n   * ```\r\n   *\r\n   *\r\n   * - O **hash** será o código de validação da solicitação do SMS para ser enviado juntamente com o código de verificação do SMS;\r\n   * - **urlValidationCode** é a url usada para validação do código enviado por SMS.\r\n   *\r\n   *\r\n   * > Caso não seja passado urlValidationCode, o endpoint usado para validação do código será `<p-url-recovery>/validation`.\r\n   *\r\n   *\r\n   * #### Validação do código SMS\r\n   * Ao digitar um valor válido no campo de código SMS e pressionar **continuar**, o componente fará uma requisição `POST` contendo:\r\n   *\r\n   * ```\r\n   * POST /<p-url-recovery>/validation OU /<urlValidationCode>\r\n   * Body {\r\n   *  hash: hash,\r\n   *  code: code\r\n   * }\r\n   * ```\r\n   *\r\n   *\r\n   * O código de resposta HTTP de status esperado é `200`.\r\n   *\r\n   * Em caso de **erro** na validação do código SMS, a modal se mantém com o campo para digitação\r\n   * de código SMS\r\n   *\r\n   *\r\n   * > Pode-se atribuir a mensagem de erro (message) para o atributo `p-code-error` conforme retorno abaixo:\r\n   *\r\n   * ```\r\n   * 400\r\n   *  {\r\n   *    error {\r\n   *      message: 'Error Message'\r\n   *    }\r\n   *  }\r\n   * ```\r\n   *\r\n   *\r\n   * Em caso de **sucesso**, espera-se a resposta desta requisição retornando a seguinte definição:\r\n   *\r\n   * ```\r\n   * 200:\r\n   *  {\r\n   *    token: token,\r\n   *    urlChangePassword?: url\r\n   *  }\r\n   * ```\r\n   *\r\n   *\r\n   * - **token**: Token de alteração de senha;\r\n   * - **urlChangePassword**: url para o formulário de alteração de senha.\r\n   *\r\n   *\r\n   * O componente está configurado para redirecionar para a url estabelecida em `urlChangePassword`.\r\n   *\r\n   * > Caso não seja passado valor para urlChangePassword,\r\n   * a url usada para validação será a `<p-url-recovery>/changePassword?token=<token>`.\r\n   *\r\n   * *Processo finalizado.*\r\n   */\r\n  @Input('p-url-recovery') urlRecovery?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ação contendo como parâmetro o código enviado por SMS e digitado pelo usuário.\r\n   *\r\n   * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-recovery`.\r\n   */\r\n  @Output('p-code-submit') codeSubmit = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ação contendo o email como parâmetro e que é executada quando o usuário clica sobres os botões de 'enviar' e 'reenviar' e-mail.\r\n   *\r\n   * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-recovery`.\r\n   */\r\n  @Output('p-submit') submit = new EventEmitter<any>();\r\n\r\n  email: string;\r\n  maxLength = PoModalPasswordRecoveryDefaultMaxLength;\r\n  minLength = PoModalPasswordRecoveryDefaultMinLength;\r\n  modalPasswordRecoveryTypeAll: boolean;\r\n  phone: string;\r\n  smsCode: string;\r\n  smsCodeErrorMessage: string;\r\n\r\n  literals: {\r\n    cancelButton: string;\r\n    closeButton: string;\r\n    continueButton: string;\r\n    email: string;\r\n    emailErrorMessagePhrase: string;\r\n    emailSentConfirmationPhrase: string;\r\n    emailSentTitle: string;\r\n    forgotPasswordTitle: string;\r\n    insertCode: string;\r\n    insertEmail: string;\r\n    insertPhone: string;\r\n    phoneErrorMessagePhrase: string;\r\n    prepositionIn: string;\r\n    prepositionOr: string;\r\n    recoveryPasswordPhrase: string;\r\n    resendEmailButton: string;\r\n    resendSmsCodePhrase: string;\r\n    sendAgain: string;\r\n    sendAgainPhrase: string;\r\n    sendButton: string;\r\n    sms: string;\r\n    smsCode: string;\r\n    smsCodeErrorMessagePhrase: string;\r\n    sentSmsCodePhrase: string;\r\n    supportContact: string;\r\n    telephone: string;\r\n    typeCodeTitle: string;\r\n  } = poModalPasswordRecoveryLiterals[poLocaleDefault];\r\n\r\n  private _contactEmail: string;\r\n  private _phoneMask = PoModalPasswordRecoveryDefaultPhone;\r\n  private _type: PoModalPasswordRecoveryType = PoModalPasswordRecoveryTypeDefault;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Definição do e-mail que é exibido na mensagem para contato de suporte.\r\n   */\r\n  @Input('p-contact-email') set contactEmail(value: string) {\r\n    this._contactEmail = value;\r\n\r\n    this.smsCodeErrorMessage = this.concatenateSMSErrorMessage(value);\r\n  }\r\n\r\n  get contactEmail() {\r\n    return this._contactEmail;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Definição da mascara do campo de telefone.\r\n   *\r\n   * @default `(99) 99999-9999`\r\n   */\r\n  @Input('p-phone-mask') set phoneMask(value: string) {\r\n    this._phoneMask = value || PoModalPasswordRecoveryDefaultPhone;\r\n    this.minLength = this.maxLength = this._phoneMask.length;\r\n  }\r\n\r\n  get phoneMask() {\r\n    return this._phoneMask;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o tipo de recuperação de senha que será exibido.\r\n   *\r\n   * @default `PoModalPasswordRecoveryType.Email`\r\n   *\r\n   */\r\n  @Input('p-type') set type(value: PoModalPasswordRecoveryType) {\r\n    this._type = (<any>Object).values(PoModalPasswordRecoveryType).includes(value)\r\n      ? value\r\n      : PoModalPasswordRecoveryTypeDefault;\r\n  }\r\n\r\n  get type() {\r\n    return this._type;\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.literals = {\r\n      ...this.literals,\r\n      ...poModalPasswordRecoveryLiterals[languageService.getShortLanguage()]\r\n    };\r\n  }\r\n\r\n  private concatenateSMSErrorMessage(value: string) {\r\n    const literalCodeErrorMessage = this.literals.smsCodeErrorMessagePhrase;\r\n\r\n    return value && value !== ''\r\n      ? `${literalCodeErrorMessage} ${this.literals.prepositionIn} ${value}.`\r\n      : literalCodeErrorMessage;\r\n  }\r\n\r\n  /**\r\n   * Acão para conclusão de processo e fechamento da modal. Indica-se sua utilização\r\n   * para após o envio e validação do código SMS enviado pelo usuário.\r\n   *\r\n   * > Nas modals em que há a ação de 'cancelar' dispensa-se o uso desta ação pois o componente já trata o fechamento da modal.\r\n   */\r\n  abstract completed(): void;\r\n\r\n  /**\r\n   * Abre a modal de preenchimento de email ou número de telefone para solicitação de troca de senha.\r\n   */\r\n  abstract open(): void;\r\n\r\n  /**\r\n   * Abre a modal de confirmação de envio de email.\r\n   */\r\n  abstract openConfirmation(): void;\r\n\r\n  /**\r\n   * Abre a modal de preenchimento do código SMS enviado ao usuário.\r\n   */\r\n  abstract openSmsCode(): void;\r\n}\r\n","/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Enum para definição do tipo de conteúdo exibido na modal.\r\n */\r\nexport enum PoModalPasswordRecoveryModalContent {\r\n  /** Exibição de modal contendo campo para preenchimento de email ou número de telefone */\r\n  Email = 'email',\r\n\r\n  /** Exibição de modal contendo campo para inserção de código enviado por SMS */\r\n  SMSCode = 'smsCode',\r\n\r\n  /** Exibição de modal de confirmação de envio */\r\n  Confirmation = 'confirmation'\r\n}\r\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PoModalPasswordRecovery } from './interfaces/po-modal-password-recovery.interface';\r\n\r\n@Injectable()\r\nexport class PoModalPasswordRecoveryService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  post(\r\n    urlRecovery: string,\r\n    item: PoModalPasswordRecovery,\r\n    params?: HttpParams | { [param: string]: string | Array<string> }\r\n  ): Observable<HttpResponse<Object>> {\r\n    return this.http.post<any>(urlRecovery, item, { observe: 'response', params: params });\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente utilizado para exibição da mensagem customizada de erro em um campo de formulário.\r\n */\r\n@Component({\r\n  selector: 'po-modal-password-recovery-error-message',\r\n  templateUrl: './po-modal-password-recovery-error-message.component.html'\r\n})\r\nexport class PoModalPasswordRecoveryErrorMessageComponent {\r\n  /** Texto exibido na mensagem de erro. */\r\n  @Input('p-text') text: string;\r\n}\r\n","<div class=\"po-field-container-bottom-text-error po-field-container-error-item\">\r\n  <span class=\"po-icon po-icon-exclamation\"></span>\r\n  <span class=\"po-field-container-error-text\">{{ text }}</span>\r\n</div>\r\n","<po-modal\r\n  #recoveryModal\r\n  p-hide-close\r\n  p-size=\"auto\"\r\n  [ngSwitch]=\"modalType\"\r\n  [p-primary-action]=\"primaryAction\"\r\n  [p-secondary-action]=\"secondaryAction\"\r\n  [p-title]=\"modalTitle\"\r\n>\r\n  <div class=\"po-modal-password-recovery-wrapper\">\r\n    <div *ngSwitchCase=\"'email'\" class=\"po-modal-password-recovery-content po-row\">\r\n      <div class=\"po-modal-password-recovery-text po-md-12 po-mb-1\">\r\n        {{ emailModalPhrases.firstPhrase }}\r\n      </div>\r\n      <div class=\"po-mb-2 po-md-12\">\r\n        <form #emailForm=\"ngForm\">\r\n          <div *ngIf=\"modalPasswordRecoveryTypeAll\">\r\n            <po-radio-group\r\n              name=\"type\"\r\n              [(ngModel)]=\"chosenTypeFormOption\"\r\n              [p-options]=\"typeFormOptions\"\r\n              (p-change)=\"getInputType($event)\"\r\n            >\r\n            </po-radio-group>\r\n          </div>\r\n\r\n          <div class=\"po-mt-1\">\r\n            <po-email\r\n              *ngIf=\"type === 'email' || type === 'all'\"\r\n              name=\"email\"\r\n              [(ngModel)]=\"email\"\r\n              p-required\r\n              [p-label]=\"literals.insertEmail\"\r\n              (p-change-model)=\"formModelChangesCheck(emailForm)\"\r\n            >\r\n            </po-email>\r\n\r\n            <po-input\r\n              *ngIf=\"type === 'sms'\"\r\n              name=\"sms\"\r\n              [(ngModel)]=\"phone\"\r\n              p-icon=\"po-icon-telephone\"\r\n              p-required\r\n              [p-label]=\"literals.insertPhone\"\r\n              [p-mask]=\"phoneMask\"\r\n              [p-maxlength]=\"maxLength\"\r\n              [p-minlength]=\"minLength\"\r\n              (p-change-model)=\"formModelChangesCheck(emailForm)\"\r\n            >\r\n            </po-input>\r\n          </div>\r\n\r\n          <div class=\"po-field-container-bottom po-field-container-error-container\">\r\n            <po-modal-password-recovery-error-message\r\n              *ngIf=\"invalidEmail && control.dirty\"\r\n              [p-text]=\"type === 'sms' ? literals.phoneErrorMessagePhrase : literals.emailErrorMessagePhrase\"\r\n            >\r\n            </po-modal-password-recovery-error-message>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"po-modal-password-recovery-text po-md-12\">\r\n        {{ emailModalPhrases.secondPhrase }}\r\n        <span *ngIf=\"contactEmail\">\r\n          {{ literals.prepositionIn }}\r\n          <a class=\"po-modal-password-recovery-link\" href=\"mailto:{{ contactEmail }}\" target=\"_self\">\r\n            {{ contactEmail }}\r\n          </a>\r\n        </span>\r\n        {{ endpoint }}\r\n      </div>\r\n    </div>\r\n\r\n    <div #smsCodeModal *ngSwitchCase=\"'smsCode'\" class=\"po-modal-password-recovery-content po-row\">\r\n      <div class=\"po-modal-password-recovery-text po-md-12 po-mb-1\">{{ literals.sentSmsCodePhrase }}</div>\r\n      <div class=\"po-mb-2 po-md-12\">\r\n        <form #smsCodeForm=\"ngForm\">\r\n          <po-input\r\n            name=\"sms\"\r\n            [(ngModel)]=\"smsCode\"\r\n            p-maxlength=\"11\"\r\n            p-minlength=\"11\"\r\n            p-required\r\n            [p-label]=\"literals.insertCode\"\r\n            [p-mask]=\"codeMask\"\r\n            (p-change-model)=\"formModelChangesCheck(smsCodeForm)\"\r\n          >\r\n          </po-input>\r\n          <div class=\"po-field-container-bottom po-field-container-error-container\">\r\n            <po-modal-password-recovery-error-message\r\n              *ngIf=\"invalidEmail\"\r\n              [p-text]=\"smsCodeErrorMessage || this.literals.smsCodeErrorMessagePhrase\"\r\n            >\r\n            </po-modal-password-recovery-error-message>\r\n            <po-modal-password-recovery-error-message *ngIf=\"showCustomCodeError\" [p-text]=\"codeError\">\r\n            </po-modal-password-recovery-error-message>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"po-modal-password-recovery-text po-md-12\">\r\n        {{ literals.sendAgainPhrase }}\r\n        <span class=\"po-modal-password-recovery-link\" (click)=\"resendSmsCode()\">{{ literals.sendAgain }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div #confirmationModal *ngSwitchCase=\"'confirmation'\" class=\"po-modal-password-recovery-content po-row\">\r\n      <img class=\"po-modal-password-recovery-user-image po-mb-2\" src=\"./assets/images/email-sent.svg\" />\r\n      <div class=\"po-modal-password-recovery-text\">\r\n        {{ literals.emailSentConfirmationPhrase }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</po-modal>\r\n","import { Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { AbstractControl, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport {\r\n  PoI18nPipe,\r\n  PoLanguageService,\r\n  PoModalAction,\r\n  PoModalComponent,\r\n  PoRadioGroupOption\r\n} from '@po-ui/ng-components';\r\n\r\nimport { isExternalLink } from '../../utils/util';\r\n\r\nimport { PoModalPasswordRecovery } from './interfaces/po-modal-password-recovery.interface';\r\nimport { PoModalPasswordRecoveryBaseComponent } from './po-modal-password-recovery-base.component';\r\nimport { PoModalPasswordRecoveryModalContent } from './enums/po-modal-password-recovery-modal-content.enum';\r\nimport { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';\r\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\r\n\r\n/**\r\n * @docsExtends PoModalPasswordRecoveryBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-modal-password-recovery-basic\" title=\"PO Modal Password Recovery Basic\">\r\n *  <file name=\"sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-modal-password-recovery-labs\" title=\"PO Modal Password Recovery Labs\">\r\n *  <file name=\"sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-modal-password-recovery-request\" title=\"PO Modal Password Recovery Request\">\r\n *  <file name=\"sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.html\"> </file>\r\n *  <file name=\"sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.ts\"> </file>\r\n * </example>\r\n */\r\n\r\n@Component({\r\n  selector: 'po-modal-password-recovery',\r\n  templateUrl: './po-modal-password-recovery.component.html'\r\n})\r\nexport class PoModalPasswordRecoveryComponent extends PoModalPasswordRecoveryBaseComponent implements OnDestroy {\r\n  @ViewChild('emailForm') emailForm: NgForm;\r\n\r\n  @ViewChild('recoveryModal', { static: true }) recoveryModalElement: PoModalComponent;\r\n\r\n  @ViewChild('smsCodeForm') smsCodeForm: NgForm;\r\n\r\n  chosenTypeFormOption: string = PoModalPasswordRecoveryType.Email;\r\n  codeMask: string = '9 9 9 9 9 9';\r\n  control: AbstractControl;\r\n  emailModal: boolean = true;\r\n  emailModalPhrases = { firstPhrase: null as string, secondPhrase: null as string };\r\n  endpoint: string = '.';\r\n  invalidCode: boolean = false;\r\n  invalidEmail: boolean = false;\r\n  modalTitle: string;\r\n  modalType: PoModalPasswordRecoveryModalContent = PoModalPasswordRecoveryModalContent.Email;\r\n  showCustomCodeError: boolean;\r\n  smsCodeErrorMessagePhrase: string;\r\n  submittedCodeValue = {} as PoModalPasswordRecovery;\r\n  submittedContactValue = {} as PoModalPasswordRecovery;\r\n\r\n  primaryAction: PoModalAction = { label: undefined, action: () => {} };\r\n\r\n  secondaryAction: PoModalAction = { label: undefined, action: () => {} };\r\n\r\n  typeFormOptions: Array<PoRadioGroupOption> = [\r\n    { label: 'e-mail', value: PoModalPasswordRecoveryType.Email },\r\n    { label: 'SMS', value: PoModalPasswordRecoveryType.SMS }\r\n  ];\r\n\r\n  private passwordRecoverySubscription: Subscription;\r\n  private smsBodyResponse;\r\n  private smsCodeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private poI18nPipe: PoI18nPipe,\r\n    private poModalPasswordRecoveryService: PoModalPasswordRecoveryService,\r\n    poLanguageService: PoLanguageService\r\n  ) {\r\n    super(poLanguageService);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.passwordRecoverySubscription) {\r\n      this.passwordRecoverySubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.smsCodeSubscription) {\r\n      this.smsCodeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  completed() {\r\n    this.cancelAction();\r\n  }\r\n\r\n  formModelChangesCheck(form: NgForm) {\r\n    const invalidForm = form.invalid;\r\n    this.invalidEmail = invalidForm && form.dirty;\r\n    this.primaryAction.disabled = invalidForm;\r\n\r\n    if (this.modalType === PoModalPasswordRecoveryModalContent.SMSCode) {\r\n      const codeError: boolean = this.codeError !== undefined && this.codeError !== '';\r\n      this.showCustomCodeError = codeError && form.pristine;\r\n    }\r\n  }\r\n\r\n  getInputType(type) {\r\n    this.type = type;\r\n    this.pipeModalPhrases();\r\n    setTimeout(() => {\r\n      this.control = this.emailForm.controls[type];\r\n      this.formModelChangesCheck(this.emailForm);\r\n      this.resetFormFields(this.control);\r\n    });\r\n  }\r\n\r\n  open() {\r\n    const control = this.checkFormType(this.type);\r\n    this.control = this.emailForm.controls[control];\r\n    this.setEmailModalPhrasesAndActions();\r\n    this.formModelChangesCheck(this.emailForm);\r\n    this.recoveryModalElement.open();\r\n  }\r\n\r\n  openConfirmation() {\r\n    this.modalTitle = this.literals.emailSentTitle;\r\n    this.modalType = PoModalPasswordRecoveryModalContent.Confirmation;\r\n    this.setActions(\r\n      this.cancelAction,\r\n      this.literals.closeButton,\r\n      this.submitAction,\r\n      this.literals.resendEmailButton,\r\n      false\r\n    );\r\n  }\r\n\r\n  openSmsCode() {\r\n    this.modalTitle = this.literals.typeCodeTitle;\r\n    this.modalType = PoModalPasswordRecoveryModalContent.SMSCode;\r\n    this.setActions(\r\n      this.submitSmsCodeAction,\r\n      this.literals.continueButton,\r\n      this.cancelAction,\r\n      this.literals.cancelButton,\r\n      true\r\n    );\r\n\r\n    setTimeout(() => {\r\n      this.control = this.smsCodeForm.controls['sms'];\r\n      this.formModelChangesCheck(this.smsCodeForm);\r\n    });\r\n  }\r\n\r\n  resendSmsCode() {\r\n    this.incrementRetryAttempts();\r\n    if (this.urlRecovery) {\r\n      this.submitActionRequest(this.submittedContactValue, this.type);\r\n    } else {\r\n      this.submit.emit(this.submittedContactValue);\r\n    }\r\n  }\r\n\r\n  private assignSmsResponse(responseObj) {\r\n    this.smsBodyResponse = Object.assign({}, { hash: responseObj.hash });\r\n    if (responseObj.urlValidationCode) {\r\n      this.smsBodyResponse = Object.assign(this.smsBodyResponse, { urlValidationCode: responseObj.urlValidationCode });\r\n    }\r\n  }\r\n\r\n  private cancelAction() {\r\n    this.resetFormFields(this.control);\r\n    this.submittedContactValue = {};\r\n\r\n    this.chosenTypeFormOption = PoModalPasswordRecoveryType.Email;\r\n    this.modalType = PoModalPasswordRecoveryModalContent.Email;\r\n    this.type = this.modalPasswordRecoveryTypeAll ? PoModalPasswordRecoveryType.All : this.type;\r\n    this.recoveryModalElement.close();\r\n  }\r\n\r\n  private checkFormType(type: PoModalPasswordRecoveryType) {\r\n    return type !== PoModalPasswordRecoveryType.All ? type : PoModalPasswordRecoveryType.Email;\r\n  }\r\n\r\n  private formReset(control: AbstractControl) {\r\n    control.markAsPristine();\r\n    control.markAsUntouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n  private getEmitValue(type: PoModalPasswordRecoveryType) {\r\n    return type === PoModalPasswordRecoveryType.SMS ? this.phone : this.email;\r\n  }\r\n\r\n  private incrementRetryAttempts() {\r\n    this.submittedContactValue.retry = this.submittedContactValue.retry + 1 || 1;\r\n  }\r\n\r\n  private openExternalLink(url, queryParam) {\r\n    window.open(`${url}?token=${queryParam}`, '_self');\r\n  }\r\n\r\n  private openInternalLink(url, endpoint, queryParam) {\r\n    this.router.navigate([`${url}/${endpoint}`], { queryParams: { token: queryParam } });\r\n  }\r\n\r\n  private pipeModalPhrases() {\r\n    if (this.type === PoModalPasswordRecoveryType.SMS) {\r\n      this.emailModalPhrases.firstPhrase = this.setPipeArguments(\r\n        this.literals.recoveryPasswordPhrase,\r\n        this.literals.sms\r\n      );\r\n      this.emailModalPhrases.secondPhrase = this.setPipeArguments(\r\n        this.literals.supportContact,\r\n        this.literals.telephone\r\n      );\r\n    } else {\r\n      this.emailModalPhrases.firstPhrase = this.setPipeArguments(\r\n        this.literals.recoveryPasswordPhrase,\r\n        this.literals.email\r\n      );\r\n      this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.email);\r\n    }\r\n  }\r\n\r\n  private redirectToChangePassword(recoveryToken: PoModalPasswordRecovery) {\r\n    const urlChangePassword = recoveryToken.urlChangePassword;\r\n    if (urlChangePassword) {\r\n      isExternalLink(urlChangePassword)\r\n        ? this.openExternalLink(urlChangePassword, recoveryToken.token)\r\n        : this.openInternalLink(this.urlRecovery, urlChangePassword, recoveryToken.token);\r\n    } else {\r\n      const changePasswordEndpoint = 'changePassword';\r\n      this.openInternalLink(this.urlRecovery, changePasswordEndpoint, recoveryToken.token);\r\n    }\r\n  }\r\n\r\n  private resetFormFields(control) {\r\n    this.formReset(control);\r\n    this.email = undefined;\r\n    this.phone = undefined;\r\n    this.smsCode = undefined;\r\n  }\r\n\r\n  private setActions(primaryAction, primarylabel, secondaryAction, secondaryLabel, disabled) {\r\n    this.primaryAction.action = () => primaryAction.call(this);\r\n    this.primaryAction.label = primarylabel;\r\n    this.secondaryAction.action = () => secondaryAction.call(this);\r\n    this.secondaryAction.label = secondaryLabel;\r\n    this.primaryAction.disabled = disabled;\r\n  }\r\n\r\n  private setEmailModalPhrasesAndActions() {\r\n    this.modalTitle = this.literals.forgotPasswordTitle;\r\n    this.pipeModalPhrases();\r\n    this.modalPasswordRecoveryTypeAll = this.type === PoModalPasswordRecoveryType.All;\r\n    this.setActions(this.submitAction, this.literals.sendButton, this.cancelAction, this.literals.cancelButton, true);\r\n  }\r\n\r\n  private setRequestEndpoint(urlValidationCode?: string) {\r\n    const endpoint = urlValidationCode || 'validation';\r\n\r\n    return `${this.urlRecovery}/${endpoint}`;\r\n  }\r\n\r\n  private setPipeArguments(literalAttr: string, arg: string) {\r\n    return this.poI18nPipe.transform(literalAttr, arg);\r\n  }\r\n\r\n  private submitAction() {\r\n    this.modalType === PoModalPasswordRecoveryModalContent.Confirmation\r\n      ? this.incrementRetryAttempts()\r\n      : this.formReset(this.control);\r\n    this.submittedContactValue[this.checkFormType(this.type)] = this.getEmitValue(this.type);\r\n    if (this.urlRecovery) {\r\n      this.submitActionRequest(this.submittedContactValue, this.type);\r\n    } else {\r\n      this.submit.emit(this.submittedContactValue);\r\n    }\r\n  }\r\n\r\n  private submitActionRequest(data: PoModalPasswordRecovery, modalType: PoModalPasswordRecoveryType) {\r\n    const params = modalType === PoModalPasswordRecoveryType.SMS ? { type: 'sms' } : undefined;\r\n\r\n    this.passwordRecoverySubscription = this.poModalPasswordRecoveryService\r\n      .post(this.urlRecovery, data, params)\r\n      .subscribe(response => {\r\n        if (\r\n          (modalType === PoModalPasswordRecoveryType.Email || modalType === PoModalPasswordRecoveryType.All) &&\r\n          response.status === 204\r\n        ) {\r\n          this.openConfirmation();\r\n        } else if (modalType === PoModalPasswordRecoveryType.SMS && response.status === 200) {\r\n          this.assignSmsResponse(response.body);\r\n          this.openSmsCode();\r\n        }\r\n      });\r\n  }\r\n\r\n  private submitSmsCodeAction() {\r\n    this.submittedCodeValue.code = this.smsCode;\r\n\r\n    if (this.urlRecovery) {\r\n      this.submittedCodeValue = Object.assign(this.submittedCodeValue, { hash: this.smsBodyResponse.hash });\r\n      this.submitSmsCodeRequest(this.submittedCodeValue);\r\n    } else {\r\n      this.codeSubmit.emit(this.submittedCodeValue);\r\n    }\r\n    this.resetFormFields(this.control);\r\n  }\r\n\r\n  private submitSmsCodeRequest(data: PoModalPasswordRecovery) {\r\n    this.smsCodeSubscription = this.poModalPasswordRecoveryService\r\n      .post(this.setRequestEndpoint(this.smsBodyResponse.urlValidationCode), data)\r\n      .subscribe(\r\n        response => {\r\n          const successStatus = response.status === 200;\r\n          if (successStatus) {\r\n            this.completed();\r\n            this.redirectToChangePassword(response.body);\r\n          }\r\n        },\r\n        error => {\r\n          this.codeError = error.error.message;\r\n          this.openSmsCode();\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoFieldModule, PoI18nPipe, PoModalModule } from '@po-ui/ng-components';\r\n\r\nimport { PoModalPasswordRecoveryComponent } from './po-modal-password-recovery.component';\r\nimport { PoModalPasswordRecoveryErrorMessageComponent } from './po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component';\r\nimport { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do template do po-modal-password-recovery.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, PoFieldModule, PoModalModule],\r\n  declarations: [PoModalPasswordRecoveryComponent, PoModalPasswordRecoveryErrorMessageComponent],\r\n  exports: [PoModalPasswordRecoveryComponent, PoModalPasswordRecoveryErrorMessageComponent],\r\n  providers: [PoI18nPipe, PoModalPasswordRecoveryService]\r\n})\r\nexport class PoModalPasswordRecoveryModule {}\r\n","<div class=\"po-page-login-container\">\r\n  <div class=\"po-page-login-panel\">\r\n    <img\r\n      *ngIf=\"logo\"\r\n      class=\"po-page-background-main-logo\"\r\n      [class.po-page-background-hide-logo]=\"hideLogo\"\r\n      alt=\"main-logo\"\r\n      [src]=\"logo\"\r\n    />\r\n\r\n    <div class=\"po-page-login-body\">\r\n      <div class=\"po-page-login-panel-content\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n    <div class=\"po-page-background-footer po-sm-12\">\r\n      <po-divider class=\"po-page-background-footer-mobile-only\"></po-divider>\r\n\r\n      <div class=\"po-page-background-footer-content\">\r\n        <div *ngIf=\"showSelectLanguage\" class=\"po-page-background-footer-select\">\r\n          <po-select\r\n            name=\"selectedLanguageOption\"\r\n            [(ngModel)]=\"selectedLanguageOption\"\r\n            [p-options]=\"selectLanguageOptions\"\r\n            (p-change)=\"onChangeLanguage()\"\r\n          >\r\n          </po-select>\r\n        </div>\r\n\r\n        <div\r\n          class=\"po-page-background-secondary-logo\"\r\n          [ngClass]=\"\r\n            showSelectLanguage\r\n              ? 'po-page-background-secondary-logo-right'\r\n              : 'po-page-background-secondary-logo-centered'\r\n          \"\r\n        >\r\n          <img\r\n            *ngIf=\"secondaryLogo\"\r\n            class=\"po-page-background-secondary-logo-image\"\r\n            alt=\"secondary-logo\"\r\n            [src]=\"secondaryLogo\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"background\"\r\n    [ngClass]=\"background ? 'po-page-login-highlight-image' : 'po-page-login-highlight-image-off'\"\r\n    [style.background-image]=\"'url(' + background + ')'\"\r\n  >\r\n    <div class=\"po-page-login-highlight-text\">\r\n      <div class=\"po-font-display\">{{ highlightInfo }}</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { PoSelectOption, PoLanguageService, PoLanguage, poLanguageDefault } from '@po-ui/ng-components';\r\n\r\nimport { convertToBoolean, isTypeof } from './../../utils/util';\r\n\r\n@Component({\r\n  selector: 'po-page-background',\r\n  templateUrl: './po-page-background.component.html'\r\n})\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para definição de cor de fundo e dos logotipos primário e secundário para os templates\r\n * de `po-page-login` e demais templates de login.\r\n */\r\nexport class PoPageBackgroundComponent implements OnInit {\r\n  /** Insere uma imagem de destaque ao lado direito do container. */\r\n  @Input('p-background') background?: string;\r\n\r\n  /** Idioma inicial selecionado no combo */\r\n  @Input('p-initial-language') initialSelectLanguage?: string;\r\n\r\n  /** Designa se o logotipo deve desaparecer em resoluções menores. */\r\n  @Input('p-hide-logo') hideLogo?: boolean;\r\n\r\n  /** Texto de destaque sobreposto à imagem de destaque. Essa opção é utilizada em conjunto com o atributo `p-background`. */\r\n  @Input('p-highlight-info') highlightInfo?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao selecionar alguma opção no seletor de idiomas.\r\n   * Para este evento será passado como parâmetro o valor de idioma selecionado.\r\n   */\r\n  @Output('p-selected-language') selectedLanguage: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  selectedLanguageOption: string;\r\n\r\n  private _logo?: string;\r\n  private _secondaryLogo?: string;\r\n  private _showSelectLanguage?: boolean = false;\r\n  private _languagesList: Array<PoLanguage>;\r\n  private _selectLanguageOptions: Array<PoSelectOption>;\r\n\r\n  /** Lista de idiomas para o combo box */\r\n  @Input('p-languages') set languagesList(value: Array<PoLanguage>) {\r\n    this._languagesList = value;\r\n    this.setLanguageOptions();\r\n  }\r\n\r\n  get languagesList(): Array<PoLanguage> {\r\n    if (this._languagesList?.length) {\r\n      return this._languagesList;\r\n    }\r\n    return poLanguageDefault;\r\n  }\r\n\r\n  /** Caminho para a logomarca localizada na parte superior. */\r\n  @Input('p-logo') set logo(value: any) {\r\n    this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;\r\n  }\r\n\r\n  get logo() {\r\n    return this._logo;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada no rodapé.\r\n   */\r\n  @Input('p-secondary-logo') set secondaryLogo(value: any) {\r\n    this._secondaryLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;\r\n  }\r\n\r\n  get secondaryLogo() {\r\n    return this._secondaryLogo;\r\n  }\r\n\r\n  /** Define se o seletor de idiomas deve ser exibido. */\r\n  @Input('p-show-select-language') set showSelectLanguage(showSelectLanguage: boolean) {\r\n    this._showSelectLanguage = convertToBoolean(showSelectLanguage);\r\n  }\r\n  get showSelectLanguage() {\r\n    return this._showSelectLanguage;\r\n  }\r\n\r\n  constructor(public poLanguageService: PoLanguageService) {}\r\n\r\n  ngOnInit() {\r\n    this.selectedLanguageOption = this.initialSelectLanguage || this.poLanguageService.getShortLanguage();\r\n  }\r\n\r\n  onChangeLanguage() {\r\n    this.selectedLanguage.emit(this.selectedLanguageOption);\r\n  }\r\n\r\n  get selectLanguageOptions(): Array<PoSelectOption> {\r\n    return this._selectLanguageOptions;\r\n  }\r\n\r\n  private setLanguageOptions() {\r\n    this._selectLanguageOptions = this.languagesList.map<PoSelectOption>(language => ({\r\n      label: language.description,\r\n      value: language.language\r\n    }));\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoDividerModule, PoFieldModule } from '@po-ui/ng-components';\r\n\r\nimport { PoPageBackgroundComponent } from './po-page-background.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do template do po-page-background.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, RouterModule, PoDividerModule, PoFieldModule],\r\n  declarations: [PoPageBackgroundComponent],\r\n  exports: [PoPageBackgroundComponent]\r\n})\r\nexport class PoPageBackgroundModule {}\r\n","/**\r\n * @usedBy PoPageBlockedUserComponent\r\n *\r\n * @description\r\n *\r\n * *Enum* para os tipos de motivo de bloqueio de usuário. As informações modificam conforme o motivo selecionado pelo desenvolvedor.\r\n */\r\nexport enum PoPageBlockedUserReason {\r\n  /** Sem definição; a tela exibirá conteúdo de bloqueio genérico. */\r\n  None = 'none',\r\n\r\n  /** Definição para tentativas de acesso esgotadas. */\r\n  ExceededAttempts = 'exceededAttempts',\r\n\r\n  /** Definição para senha expirada. */\r\n  ExpiredPassword = 'expiredPassword'\r\n}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { PoPageBlockedUserReason } from './enums/po-page-blocked-user-reason.enum';\r\nimport { PoPageBlockedUserReasonParams } from './interfaces/po-page-blocked-user-reason-params.interface';\r\n\r\nconst PoPageBlockedUserReasonDefault: PoPageBlockedUserReason = PoPageBlockedUserReason.None;\r\nconst PoPageBlockedUserParamsDefault: PoPageBlockedUserReasonParams = { attempts: 5, days: 90, hours: 24 };\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-page-blocked-user` é utilizado como template para tela de bloqueio de usuário.\r\n * É possível definir entre três tipos de telas para alertar o usuário sobre um eventual bloqueio de login.\r\n *\r\n * Cada modelo de bloqueio possui uma imagem e texto adequados à situação.\r\n * Os textos das telas são pré-definidos e imutáveis, porém,\r\n * é possível estipular parâmetros como dias, horas e tentativas de acesso esgotadas.\r\n *\r\n * Por fim, há propriedades para adição de telefone e/ou email para contato e também a definição para a url de retorno.\r\n *\r\n * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\r\n * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\r\n * ```\r\n *   \"assets\": [\r\n *     \"src/assets\",\r\n *     \"src/favicon.ico\",\r\n *     {\r\n *       \"glob\": \"**\\/*\",\r\n *       \"input\": \"node_modules/@po-ui/style/images\",\r\n *       \"output\": \"assets/images\"\r\n *     }\r\n *   ]\r\n * ```\r\n *\r\n * _______________\r\n *\r\n * #### Praticidade\r\n * O `po-page-blocked-user`, assim como suas propriedades, pode também ser transmitido diretamente pelas configuraçãos de rota e,\r\n * desta maneira, dispensa-se qualquer menção e/ou importação no restante da aplicação. O exemplo abaixo exemplifica\r\n * a forma dinâmica com a qual o template pode ser gerado se navegasse para uma rota denominada como `/access-denied`:\r\n *\r\n *\r\n * ```\r\n *   import { PoPageBlockedUserComponent, PoPageBlockedUserReason } from '@po-ui/ng-templates';\r\n *\r\n *   ...\r\n *   const routes: Routes = [\r\n *     {\r\n *       path: 'access-denied', component: PoPageBlockedUserComponent, data: {\r\n *         contactEmail: 'dev.po@po-ui.com',\r\n *         contactPhone: '0800 1234 000',\r\n *         reason: PoPageBlockedUserReason.ExpiredPassword,\r\n *         urlBack: '/home'\r\n *       }\r\n *     }\r\n *     ...\r\n *   ];\r\n *\r\n *   @NgModule({\r\n *     imports: [RouterModule.forRoot(routes)],\r\n *     exports: [RouterModule]\r\n *   })\r\n *   export class AppRoutingModule { }\r\n * ```\r\n *\r\n * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\r\n *\r\n */\r\n@Directive()\r\nexport class PoPageBlockedUserBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor para o email de contato que deve ser exibido. A ação está de acordo com o protocolo MAILTO e é possível definir\r\n   * tanto rotas internas quanto externas.\r\n   */\r\n  @Input('p-contact-email') contactEmail: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor para o telefone de contato que deve ser exibido. A ação está de acordo com o protocolo TEL.\r\n   *\r\n   * > A propriedade não contem tratamento de máscara, fica a critério do desenvolvedor defini-la.\r\n   */\r\n  @Input('p-contact-phone') contactPhone: string;\r\n\r\n  /** Caminho para a logomarca localizada na parte superior, caso não seja definida ou seja inválida assume a logo padrão do PO UI. */\r\n  @Input('p-logo') logo?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada no rodapé.\r\n   */\r\n  @Input('p-secondary-logo') secondaryLogo?: string;\r\n\r\n  private _params: PoPageBlockedUserReasonParams = { ...PoPageBlockedUserParamsDefault };\r\n  private _reason: PoPageBlockedUserReason = PoPageBlockedUserReason.None;\r\n  private _urlBack: string = '/';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Designação de valores usados para a customização da mensagem de bloqueio.\r\n   * Confira abaixo os valores pré-definidos.\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageBlockedUserReasonParams = {\r\n   *    attempts: 5,\r\n   *    days: 90,\r\n   *    hours: 24\r\n   *  };\r\n   * ```\r\n   *\r\n   * > Salientamos a importância e atenção para configuração desses valores conforme definidos no projeto.\r\n   *\r\n   * > Veja os parâmetros customizáveis na interface `PoPageBlockedUserReasonParams`.\r\n   *\r\n   */\r\n  @Input('p-params') set params(value: PoPageBlockedUserReasonParams) {\r\n    if (value instanceof Object) {\r\n      const keys = Object.keys(value);\r\n      const newParams = { ...PoPageBlockedUserParamsDefault };\r\n\r\n      keys.forEach(key => {\r\n        newParams[key] = value[key];\r\n      });\r\n\r\n      this._params = newParams;\r\n    } else {\r\n      this._params = { ...PoPageBlockedUserParamsDefault };\r\n    }\r\n  }\r\n\r\n  get params() {\r\n    return this._params;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Definição de motivo de bloqueio de usuário. As informações modificam conforme o motivo selecionado.\r\n   *\r\n   * > Veja os valores válidos no *enum* `PoPageBlockedUserReason`.\r\n   *\r\n   * @default `PoPageBlockedUserReason.None`\r\n   */\r\n  @Input('p-reason') set reason(value: PoPageBlockedUserReason) {\r\n    this._reason = (<any>Object).values(PoPageBlockedUserReason).includes(value)\r\n      ? value\r\n      : PoPageBlockedUserReasonDefault;\r\n  }\r\n\r\n  get reason() {\r\n    return this._reason;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * URL para a ação de retorno da página.\r\n   *\r\n   * @default `/`\r\n   */\r\n  @Input('p-url-back') set urlBack(url: string) {\r\n    this._urlBack = url;\r\n  }\r\n\r\n  get urlBack() {\r\n    return this._urlBack;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewChild } from '@angular/core';\r\n\r\nconst poPageBlockedUserContactItemMargin = 16;\r\n\r\n@Component({\r\n  selector: 'po-page-blocked-user-contacts',\r\n  templateUrl: './po-page-blocked-user-contacts.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoPageBlockedUserContactsComponent {\r\n  @ViewChild('contactGroup', { static: true }) contactGroup: ElementRef;\r\n\r\n  @ViewChild('mailItem', { static: true }) mailItem: ElementRef;\r\n\r\n  @ViewChild('phoneItem', { static: true }) phoneItem: ElementRef;\r\n\r\n  overflowItem: boolean = true;\r\n\r\n  private _email: string;\r\n  private _phone: string;\r\n\r\n  @Input('p-email') set email(value: string) {\r\n    this._email = value;\r\n\r\n    this.checkContactItemWidth();\r\n  }\r\n\r\n  get email() {\r\n    return this._email;\r\n  }\r\n\r\n  @Input('p-phone') set phone(value: string) {\r\n    this._phone = value;\r\n\r\n    this.checkContactItemWidth();\r\n  }\r\n\r\n  get phone() {\r\n    return this._phone;\r\n  }\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n  private checkContactItemWidth() {\r\n    this.overflowItem = true;\r\n\r\n    if (this.phone && this.email) {\r\n      this.changeDetector.detectChanges();\r\n\r\n      const phoneWidth = this.phoneItem.nativeElement.offsetWidth;\r\n      const mailWidth = this.mailItem.nativeElement.offsetWidth;\r\n      const contactGroupHalfWidth =\r\n        this.contactGroup.nativeElement.offsetWidth / 2 - poPageBlockedUserContactItemMargin;\r\n\r\n      this.overflowItem =\r\n        phoneWidth > contactGroupHalfWidth || mailWidth > contactGroupHalfWidth - poPageBlockedUserContactItemMargin;\r\n    }\r\n  }\r\n}\r\n","<div #contactGroup class=\"po-page-blocked-user-contact-group po-row po-mb-3\">\r\n  <div\r\n    class=\"po-page-blocked-user-contact-item\"\r\n    [class.po-invisible]=\"!phone\"\r\n    [ngClass]=\"overflowItem ? 'po-md-12' : 'po-md-6'\"\r\n  >\r\n    <a\r\n      class=\"po-page-blocked-user-link po-clickable\"\r\n      [class.po-page-blocked-user-contact-content-inline]=\"overflowItem\"\r\n      href=\"tel:{{ phone }}\"\r\n      target=\"_self\"\r\n    >\r\n      <div class=\"po-page-blocked-user-contact-group-item\">\r\n        <span class=\"po-page-blocked-user-contact-icon po-icon po-icon-telephone po-pr-1\"></span>\r\n        <div #phoneItem class=\"po-page-blocked-user-contact-text po-font-text\">{{ phone }}</div>\r\n      </div>\r\n    </a>\r\n  </div>\r\n  <div\r\n    class=\"po-page-blocked-user-contact-item po-page-blocked-user-contact-mail\"\r\n    [class.po-invisible]=\"!email\"\r\n    [ngClass]=\"overflowItem ? 'po-md-12' : 'po-md-6'\"\r\n  >\r\n    <a\r\n      class=\"po-page-blocked-user-link po-clickable\"\r\n      [class.po-page-blocked-user-contact-content-inline]=\"overflowItem\"\r\n      href=\"mailto:{{ email }}\"\r\n      target=\"_self\"\r\n    >\r\n      <div class=\"po-page-blocked-user-contact-group-item\">\r\n        <span class=\"po-page-blocked-user-contact-icon po-icon po-icon-mail po-pr-1\"></span>\r\n        <div #mailItem class=\"po-page-blocked-user-contact-text po-font-text\">{{ email }}</div>\r\n      </div>\r\n    </a>\r\n  </div>\r\n</div>\r\n","export const poPageBlockedUserLiterals = {\r\n  none: {\r\n    pt: {\r\n      title: 'Opa!',\r\n      firstPhrase: 'Tivemos que bloquear essa tela temporariamente.',\r\n      secondPhrase: 'Mas não se preocupe! Basta fazer seu login novamente.'\r\n    },\r\n    en: {\r\n      title: 'Oops!',\r\n      firstPhrase: 'We had to temporarily block this screen.',\r\n      secondPhrase: 'But do not worry! Just sign in again.'\r\n    },\r\n    es: {\r\n      title: 'Opa!',\r\n      firstPhrase: 'Tuvimos que bloquear esta pantalla temporalmente.',\r\n      secondPhrase: '¡Pero no se preocupe! Sólo tienes que iniciar sesión de nuevo.'\r\n    },\r\n    ru: {\r\n      title: 'Ой!',\r\n      firstPhrase: 'Нам пришлось временно заблокировать этот раздел.',\r\n      secondPhrase: 'Но не волнуйтесь! Просто войдите в систему еще раз.'\r\n    }\r\n  },\r\n  exceededAttempts: {\r\n    pt: {\r\n      title: 'Opa!',\r\n      firstPhrase: `Para sua segurança, após {0} tentativa(s) de senha seu usuário fica bloqueado e não pode ser acessado em {1} hora(s) :( `,\r\n      secondPhrase: 'Isso é para evitar que hackers invadam sua conta.',\r\n      thirdPhrase:\r\n        'Mas não se preocupe! Se você for o dono da conta e apenas esqueceu sua senha, basta entrar em contato com o suporte.'\r\n    },\r\n    en: {\r\n      title: 'Oops!',\r\n      firstPhrase: `For your security, after {0} attempt(s) of password\r\n        your user gets blocked and can not be accessed in {1} hour(s) :(`,\r\n      secondPhrase: 'This is to prevent hackers from hacking into your account.',\r\n      thirdPhrase:\r\n        'But do not worry! If you are the owner of the account and just forgot your password, just contact support.'\r\n    },\r\n    es: {\r\n      title: 'Opa!',\r\n      firstPhrase: `Para su seguridad, después de {0} intento(s) de contraseña\r\n        su usuario queda bloqueado y no puede ser accedido en {1} hora(s) :(`,\r\n      secondPhrase: 'Esto es para evitar que los hackers invadan su cuenta.',\r\n      thirdPhrase: `¡Pero no se preocupe! Si usted es el dueño de la cuenta\r\n        y acaba de olvidar su contraseña, simplemente póngase en contacto con el soporte.`\r\n    },\r\n    ru: {\r\n      title: 'Ой!',\r\n      firstPhrase:\r\n        'Для вашей безопасности, после {0} попыток ввода пароля\\r\\nваш пользователь блокируется и не сможет авторизоваться в течение {1} часа(ов) :(',\r\n      secondPhrase: 'Это делается для того, чтобы хакеры не могли взломать ваш аккаунт.',\r\n      thirdPhrase:\r\n        'Но не волнуйтесь! Если вы являетесь владельцем учетной записи и просто забыли свой пароль, обратитесь в службу поддержки.'\r\n    }\r\n  },\r\n  expiredPassword: {\r\n    pt: {\r\n      title: 'Opa! Sua senha expirou',\r\n      firstPhrase: `A cada {0} dia(s) é preciso criar uma nova senha por questão de segurança. Após esses {0} dia(s) seu acesso é bloqueado :(`,\r\n      secondPhrase: 'Mas não se preocupe! Basta entrar em contato com o administrador do sistema.'\r\n    },\r\n    en: {\r\n      title: 'Oops! Your Password has expired',\r\n      firstPhrase: `Every {0} day(s) you need to create a new password for security reasons.\r\n        After these {0} day(s) your access is blocked :(`,\r\n      secondPhrase: 'But do not worry! Just contact your system administrator.'\r\n    },\r\n    es: {\r\n      title: 'Opa! Su contraseña ha caducado',\r\n      firstPhrase: `Cada {0} día(s) es necesario crear una nueva contraseña por razones de seguridad.\r\n        Después de estos {0} día(s) su acceso está bloqueado :(`,\r\n      secondPhrase: '¡Pero no se preocupe! Sólo tienes que ponerse en contacto con el administrador del sistema.'\r\n    },\r\n    ru: {\r\n      title: 'Ой! Срок действия вашего пароля истек',\r\n      firstPhrase:\r\n        'Каждые {0} дней вам необходимо создавать новый пароль в целях безопасности.\\r\\nПосле {0} дней ваш доступ будет заблокирован :(',\r\n      secondPhrase: 'Но не волнуйтесь! Просто обратитесь к своему системному администратору.'\r\n    }\r\n  }\r\n};\r\n","<div class=\"po-page-blocked-user-reason-content\">\r\n  <img class=\"po-page-blocked-user-image po-mb-3\" [src]=\"getImageByReasonType()\" />\r\n  <div class=\"po-page-blocked-user-header po-mb-md-3 po-row\">\r\n    <div class=\"po-md-12\">{{ literals?.title }}</div>\r\n  </div>\r\n  <div class=\"po-page-blocked-user-text po-font-text po-row\">\r\n    <div class=\"po-mb-sm-2 po-mb-md-3 po-md-12 po-page-blocked-user-text-bold\">\r\n      {{ literals?.firstPhrase | poI18n: literalParams }}\r\n    </div>\r\n    <div class=\"po-mb-sm-2 po-mb-md-3 po-md-12\">{{ literals?.secondPhrase }}</div>\r\n    <div class=\"po-mb-sm-2 po-mb-md-3 po-md-12\" *ngIf=\"literals?.thirdPhrase\">{{ literals?.thirdPhrase }}</div>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\n\r\nimport { PoLanguageService, poLocaleDefault } from '@po-ui/ng-components';\r\n\r\nimport { poPageBlockedUserLiterals } from './../literals/i18n/po-page-blocked-user-literals';\r\nimport { PoPageBlockedUserReason } from '../enums/po-page-blocked-user-reason.enum';\r\nimport { PoPageBlockedUserReasonParams } from '../interfaces/po-page-blocked-user-reason-params.interface';\r\n\r\n@Component({\r\n  selector: 'po-page-blocked-user-reason',\r\n  templateUrl: './po-page-blocked-user-reason.component.html'\r\n})\r\nexport class PoPageBlockedUserReasonComponent implements OnChanges, OnInit {\r\n  @Input('p-params') params: PoPageBlockedUserReasonParams;\r\n\r\n  @Input('p-reason') reason: PoPageBlockedUserReason;\r\n\r\n  literalParams;\r\n  literals: { title: string; firstPhrase: string; secondPhrase: string; thirdPhrase: string };\r\n\r\n  private language: string;\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef, languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.reason || changes.params) {\r\n      this.getLiterals();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getLiterals();\r\n  }\r\n\r\n  getImageByReasonType() {\r\n    let reasonImage;\r\n\r\n    switch (this.reason) {\r\n      case 'none': {\r\n        reasonImage = 'big-lock';\r\n        break;\r\n      }\r\n      case 'exceededAttempts': {\r\n        reasonImage = 'blocked-user';\r\n        break;\r\n      }\r\n      case 'expiredPassword': {\r\n        reasonImage = 'expired';\r\n        break;\r\n      }\r\n    }\r\n    return `./assets/images/${reasonImage}.svg`;\r\n  }\r\n\r\n  getParams() {\r\n    this.literalParams =\r\n      this.reason === 'expiredPassword'\r\n        ? [this.params.days, this.params.days]\r\n        : [this.params.attempts, this.params.hours];\r\n  }\r\n\r\n  private getLiterals() {\r\n    this.getParams();\r\n\r\n    this.literals = {\r\n      ...poPageBlockedUserLiterals[this.reason][poLocaleDefault],\r\n      ...poPageBlockedUserLiterals[this.reason][this.language]\r\n    };\r\n\r\n    this.changeDetector.detectChanges();\r\n  }\r\n}\r\n","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { PoLanguageService, poLocaleDefault } from '@po-ui/ng-components';\r\n\r\nimport { isExternalLink } from '../../utils/util';\r\n\r\nimport { PoPageBlockedUserBaseComponent } from './po-page-blocked-user-base.component';\r\n\r\nexport const poPageBlockedUserButtonLiterals: Object = {\r\n  en: <any>{\r\n    primaryButton: 'Back to home screen'\r\n  },\r\n  es: <any>{\r\n    primaryButton: 'Volver al inicio'\r\n  },\r\n  pt: <any>{\r\n    primaryButton: 'Voltar para o início'\r\n  },\r\n  ru: <any>{\r\n    primaryButton: 'Перейти к началу страницы'\r\n  }\r\n};\r\n\r\n/**\r\n * @docsExtends PoPageBlockedUserBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-blocked-user-basic\" title=\"PO Page Blocked User Basic\">\r\n *  <file name=\"sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-blocked-user-labs\" title=\"PO Page Blocked User Labs\">\r\n *  <file name=\"sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-blocked-user-exceeded-attempts\" title=\"PO Page Blocked User Exceeded Attempts\">\r\n *  <file name=\"sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.html\"> </file>\r\n *  <file name=\"sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-blocked-user-expired-password\" title=\"PO Page Blocked User Expired Password\">\r\n *  <file name=\"sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.html\"> </file>\r\n *  <file name=\"sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.ts\"> </file>\r\n * </example>\r\n */\r\n\r\n@Component({\r\n  selector: 'po-page-blocked-user',\r\n  templateUrl: './po-page-blocked-user.component.html'\r\n})\r\nexport class PoPageBlockedUserComponent extends PoPageBlockedUserBaseComponent implements OnInit {\r\n  literals;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private router: Router, languageService: PoLanguageService) {\r\n    super();\r\n\r\n    const language = languageService.getShortLanguage();\r\n\r\n    this.literals = {\r\n      ...poPageBlockedUserButtonLiterals[poLocaleDefault],\r\n      ...poPageBlockedUserButtonLiterals[language]\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\r\n  }\r\n\r\n  navigateTo(url: string) {\r\n    isExternalLink(url) ? window.open(url) : this.router.navigate([url || '/']);\r\n  }\r\n\r\n  private checkingForMetadataProperty(object, property) {\r\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\r\n      return object[property];\r\n    }\r\n  }\r\n\r\n  private checkingForRouteMetadata(data) {\r\n    if (Object.keys(data).length !== 0) {\r\n      this.contactEmail = this.checkingForMetadataProperty(data, 'contactEmail') || this.contactEmail;\r\n      this.contactPhone = this.checkingForMetadataProperty(data, 'contactPhone') || this.contactPhone;\r\n      this.reason = this.checkingForMetadataProperty(data, 'reason') || this.reason;\r\n      this.urlBack = this.checkingForMetadataProperty(data, 'urlBack') || this.urlBack;\r\n    }\r\n  }\r\n}\r\n","<div class=\"po-page-blocked-user-wrapper\">\r\n  <div class=\"po-page-background-wrap\">\r\n    <po-page-background [p-hide-logo]=\"true\" [p-logo]=\"logo\" [p-secondary-logo]=\"secondaryLogo\">\r\n      <po-page-blocked-user-reason [p-params]=\"params\" [p-reason]=\"reason\"> </po-page-blocked-user-reason>\r\n\r\n      <div class=\"po-page-blocked-user-mobile-bottom-alignment\">\r\n        <po-page-blocked-user-contacts [p-email]=\"contactEmail\" [p-phone]=\"contactPhone\">\r\n        </po-page-blocked-user-contacts>\r\n\r\n        <div class=\"po-row\">\r\n          <po-button\r\n            class=\"po-lg-12 po-sm-12 po-page-blocked-user-button\"\r\n            p-kind=\"primary\"\r\n            [p-label]=\"literals?.primaryButton\"\r\n            (p-click)=\"navigateTo(urlBack)\"\r\n          >\r\n          </po-button>\r\n        </div>\r\n      </div>\r\n    </po-page-background>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoModule } from '@po-ui/ng-components';\r\n\r\nimport { PoPageBackgroundModule } from '../po-page-background/index';\r\nimport { PoPageBlockedUserComponent } from './po-page-blocked-user.component';\r\nimport { PoPageBlockedUserContactsComponent } from './po-page-blocked-user-contacts/po-page-blocked-user-contacts.component';\r\nimport { PoPageBlockedUserReasonComponent } from './po-page-blocked-user-reason/po-page-blocked-user-reason.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do template do po-page-blocked-user.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, PoModule, PoPageBackgroundModule],\r\n  declarations: [PoPageBlockedUserComponent, PoPageBlockedUserContactsComponent, PoPageBlockedUserReasonComponent],\r\n  exports: [PoPageBlockedUserComponent, PoPageBlockedUserContactsComponent, PoPageBlockedUserReasonComponent]\r\n})\r\nexport class PoPageBlockedUserModule {}\r\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { PoModalAction } from '@po-ui/ng-components';\r\n\r\nimport { convertToBoolean, isExternalLink, isTypeof } from '../../utils/util';\r\n\r\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\r\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-page-change-password` é utilizado como template para tela de cadastro ou alteração de senha.\r\n *\r\n * Apresenta dicas e regras para senhas mais seguras e também possibilidade de personalizar o redirecionamento para as telas\r\n * 'esqueceu a senha', 'voltar' e 'entrar no sistema'. Os textos das telas são pré-definidos e imutáveis.\r\n *\r\n * A propriedade `p-url-new-password` automatiza a rotina do template e simplifica o processo de cadastro/alteração de senha, bastando\r\n * definir uma url para POST das informações digitadas pelo usuário.  A flexibilidade e praticidade podem chegar a um nível em que o\r\n * desenvolvimento da aplicação no *client side* é desprovida de qualquer código-fonte relacionado à rotina de cadastro/alteração de senha.\r\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\r\n * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.\r\n *\r\n * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\r\n * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\r\n * ```\r\n *   \"assets\": [\r\n *     \"src/assets\",\r\n *     \"src/favicon.ico\",\r\n *     {\r\n *       \"glob\": \"**\\/*\",\r\n *       \"input\": \"node_modules/@po-ui/style/images\",\r\n *       \"output\": \"assets/images\"\r\n *     }\r\n *   ]\r\n * ```\r\n */\r\n@Directive()\r\nexport abstract class PoPageChangePasswordBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada na parte superior.\r\n   *\r\n   * > Caso seja indefinida o espaço se mantém preservado porém vazio.\r\n   */\r\n  @Input('p-logo') logo?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada no rodapé.\r\n   */\r\n  @Input('p-secondary-logo') secondaryLogo?: string;\r\n\r\n  /**\r\n   * Token para solicitação de troca/recuperação de senha.\r\n   *\r\n   * > Esta propriedade será ignorada caso exista um token como parâmetro na URL inicial do template.\r\n   */\r\n  @Input('p-token') token?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * URL para a ação de retorno da página.\r\n   *\r\n   * > O botão `Voltar` aparece apenas para telas de alteração de senha, ou seja, só aparece se a propriedade `p-hide-current-password` for\r\n   * falsa.\r\n   *\r\n   * @default `/`\r\n   */\r\n  @Input('p-url-back') urlBack: string = '/';\r\n\r\n  /**\r\n   * Endpoint usado pelo template para realizar um POST. Quando preenchido, o método `p-submit` será ignorado e o componente adquirirá\r\n   * automatização para o processo de cadastro/troca de senha.\r\n   *\r\n   * ### Processo\r\n   * Ao digitar um valor válido nos campos de senha e pressionar **salvar**,\r\n   * o componente fará uma requisição `POST` na url especificada nesta propriedade passando o objeto contendo os valores definidos pelo\r\n   * usuário.\r\n   *\r\n   * ```\r\n   * body {\r\n   *  token?: token,\r\n   *  oldPassword?: oldPassword,\r\n   *  newPassword: newPassword\r\n   * }\r\n   * ```\r\n   *\r\n   * O código de resposta HTTP de status esperado é `204`.\r\n   *\r\n   * Em caso de **sucesso**, será exibida a modal de confirmação de senha alterada.\r\n   *\r\n   * > O token será informado pela propriedade `p-token`do componente ou por um *query parameter* na URL do template.\r\n   *\r\n   * *Processo finalizado.*\r\n   *\r\n   * _______________\r\n   *\r\n   * #### Praticidade\r\n   * As informações do serviço de autenticação também podem ser transmitidas diretamente pelas configuraçãos de rota e, desta maneira,\r\n   * dispensa-se qualquer menção e/ou importação do componente `po-page-change-password` no restante da aplicação. O exemplo abaixo\r\n   * exemplifica a forma dinâmica com a qual o template de tela de troca de senha pode ser gerado ao navegar para rota `/change-password`, e\r\n   * também como ele se comunica com o serviço para efetuação do processo de troca de senha do usuário e solicitação de nova senha.\r\n   * Basta definir nas configurações de rota:\r\n   *\r\n   *\r\n   * ```\r\n   *   import { PoModalPasswordRecoveryType, PoPageChangePasswordComponent } from '@po-ui/ng-templates';\r\n   *\r\n   *   ...\r\n   *   const routes: Routes = [\r\n   *     {\r\n   *       path: 'change-password', component: PoPageChangePasswordComponent, data: {\r\n   *         serviceApi: 'https://po-ui.io/sample/api/new-password',\r\n   *         recovery: {\r\n   *           url: 'https://po-ui.io/sample/api/users',\r\n   *           type: PoModalPasswordRecoveryType.All,\r\n   *           contactMail: 'dev.po@po-ui.com',\r\n   *           phoneMask: '9-999-999-9999'\r\n   *         }\r\n   *       }\r\n   *     }\r\n   *     ...\r\n   *   ];\r\n   *\r\n   *   @NgModule({\r\n   *     imports: [RouterModule.forRoot(routes)],\r\n   *     exports: [RouterModule]\r\n   *   })\r\n   *   export class AppRoutingModule { }\r\n   * ```\r\n   *\r\n   *\r\n   * O metadado `serviceApi` deve ser a **url** para requisição dos recursos de troca de senha. E `recovery` é a interface\r\n   * `PoPageChangePasswordRecovery` responsável pelas especificações contidas na modal de recuperação de senha.\r\n   *\r\n   * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\r\n   *\r\n   */\r\n  @Input('p-url-new-password') urlNewPassword?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função executada ao submeter o form pelo botão salvar.\r\n   *\r\n   * Caso definida essa função, a modal de confirmação não aparece, mas pode ser chamada pelo\r\n   * método `openConfirmation`. Exemplo:\r\n   *\r\n   * ```\r\n   * @ViewChild(PoPageChangePasswordComponent) changePassword: PoPageChangePasswordComponent;\r\n   *\r\n   * onSubmit() {\r\n   *  this.changePassword.openConfirmation();\r\n   * }\r\n   *\r\n   * ```\r\n   * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-new-password`.\r\n   */\r\n  @Output('p-submit') submit: EventEmitter<any> = new EventEmitter();\r\n\r\n  confirmPassword: string;\r\n  currentPassword: string;\r\n  modalAction: PoModalAction;\r\n  newPassword: string;\r\n  recoveryUrlType: string;\r\n  showRequirements: boolean;\r\n\r\n  protected validatorChange: any;\r\n\r\n  private _hideCurrentPassword: boolean = false;\r\n  private _recovery: string | PoPageChangePasswordRecovery | Function;\r\n  private _requirements: Array<PoPageChangePasswordRequirement> = [];\r\n  private _urlHome: string = '/';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Esconde o campo `Senha atual` para que o template seja para criação de senha.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-current-password') set hideCurrentPassword(value: boolean) {\r\n    this._hideCurrentPassword = convertToBoolean(value);\r\n  }\r\n\r\n  get hideCurrentPassword(): boolean {\r\n    return this._hideCurrentPassword;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * URL para a ação do link `Esqueceu a senha`.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   *\r\n   * - **String**: informe uma url externa ou uma rota válida;\r\n   * - **Function**: pode-se customizar a ação. Para esta possilidade basta atribuir:\r\n   * ```\r\n   * <po-page-change-password>\r\n   *      [recovery]=\"this.myFunc.bind(this)\";\r\n   * </po-page-change-password>\r\n   * ```\r\n   *\r\n   * - **PoPageChangePasswordRecovery**: cria-se vínculo automático com o template **po-modal-password-recovery**.\r\n   *   O objeto deve conter a **url** para requisição dos recursos e pode-se definir o **tipo** de modal para recuperação de senha,\r\n   *   **email** para contato e **máscara** do campo de telefone.\r\n   *\r\n   * > Caso não tenha valor o link `Esqueceu a senha` desaparece.\r\n   */\r\n  @Input('p-recovery') set recovery(value: string | Function | PoPageChangePasswordRecovery) {\r\n    this._recovery = value;\r\n\r\n    if (isTypeof(value, 'string')) {\r\n      this.recoveryUrlType = isExternalLink(value) ? 'externalLink' : 'internalLink';\r\n    }\r\n  }\r\n\r\n  get recovery() {\r\n    return this._recovery;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista de regras para criação e alteração de senha.\r\n   */\r\n  @Input('p-requirements') set requirements(value: Array<PoPageChangePasswordRequirement>) {\r\n    this._requirements = value || [];\r\n    this.showRequirements = this._requirements.length > 0;\r\n  }\r\n  get requirements() {\r\n    return this._requirements;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * URL para a ação do botão `Entrar no sistema` da modal de confirmação que aparece após salvar a senha ou se chamada pelo método\r\n   * `openConfirmation`.\r\n   *\r\n   * @default `/`\r\n   */\r\n  @Input('p-url-home') set urlHome(value: string) {\r\n    this._urlHome = value;\r\n    this.modalAction.action = this.navigateTo.bind(this, this.urlHome);\r\n  }\r\n  get urlHome() {\r\n    return this._urlHome;\r\n  }\r\n\r\n  abstract navigateTo(url: string): void;\r\n}\r\n","export const poPageChangePasswordLiterals = {\r\n  en: <any>{\r\n    backButton: 'Back',\r\n    confirmPassword: 'Confirm password',\r\n    createNewPassword: 'Create new password',\r\n    createNewPasswordPhrase: 'Protect your account with a personal password created by you',\r\n    currentPassword: 'Current password',\r\n    enterSystemButton: 'Enter the system',\r\n    forgotPassword: 'Forgot your password?',\r\n    newPassword: 'New password',\r\n    passwordSuccessfullyCreated: 'Password successfully created!',\r\n    passwordSuccessfullyUpdated: 'Password successfully updated!',\r\n    requirements: 'Password requirements',\r\n    safetyTips: 'Safety tips!',\r\n    safetyTipsFirst: 'is used in other accounts;',\r\n    safetyTipsPhrase: 'Avoid a password that:',\r\n    safetyTipsSecond: 'has personal information like your name, nickname or family names;',\r\n    safetyTipsThird: 'that uses obvious sequences like \"123\" or obvious words like \"password\";',\r\n    saveButton: 'Save'\r\n  },\r\n  es: <any>{\r\n    backButton: 'Volver',\r\n    confirmPassword: 'Confirmar seña',\r\n    createNewPassword: 'Crear nueva contraseña',\r\n    createNewPasswordPhrase: 'Proteger su cuenta con una contraseña personal creada por usted',\r\n    currentPassword: 'Contraseña actual',\r\n    enterSystemButton: 'Entrar en el sistema',\r\n    forgotPassword: '¿Olvidaste tu contraseña?',\r\n    newPassword: 'Nueva contraseña',\r\n    passwordSuccessfullyCreated: 'Contraseña creada correctamente!',\r\n    passwordSuccessfullyUpdated: 'Contraseña correctamente actualizada!',\r\n    requirements: 'Requisitos de contraseña',\r\n    safetyTips: 'Consejos de seguridad!',\r\n    safetyTipsFirst: 'se utilice en otras cuentas;',\r\n    safetyTipsPhrase: 'Evite una contraseña que:',\r\n    safetyTipsSecond: 'utiliza información personal como su nombre, apellido o nombre de familia;',\r\n    safetyTipsThird: 'utilice secuencias muy obvias como \"1234\" o \"abcd\" o palabras obvias como \"contraseña\";',\r\n    saveButton: 'Guardar'\r\n  },\r\n  pt: <any>{\r\n    backButton: 'Voltar',\r\n    confirmPassword: 'Confirmar senha',\r\n    createNewPassword: 'Criar nova senha',\r\n    createNewPasswordPhrase: 'Proteja sua conta com uma senha pessoal criada por você',\r\n    currentPassword: 'Senha atual',\r\n    enterSystemButton: 'Entrar no sistema',\r\n    forgotPassword: 'Esqueceu sua senha?',\r\n    newPassword: 'Nova senha',\r\n    passwordSuccessfullyCreated: 'Senha criada com sucesso!',\r\n    passwordSuccessfullyUpdated: 'Senha alterada com sucesso!',\r\n    requirements: 'Requisitos de senha',\r\n    safetyTips: 'Dicas de segurança!',\r\n    safetyTipsFirst: 'seja usada em outras contas;',\r\n    safetyTipsPhrase: 'Evite uma senha que:',\r\n    safetyTipsSecond: 'usa informações pessoais como seu nome, apelido ou nome de familiares;',\r\n    safetyTipsThird: 'use sequências muito óbvias como \"1234\" ou \"abcd\" ou palavras óbvias como “senha”;',\r\n    saveButton: 'Salvar'\r\n  },\r\n  ru: <any>{\r\n    backButton: 'возвращение',\r\n    confirmPassword: 'Подтвердите пароль',\r\n    createNewPassword: 'Создать новый пароль',\r\n    createNewPasswordPhrase: 'Защитите свой аккаунт с помощью личного пароля.',\r\n    currentPassword: 'Текущий пароль',\r\n    enterSystemButton: 'Вход в систему',\r\n    forgotPassword: 'Забыли пароль?',\r\n    newPassword: 'Новый пароль',\r\n    passwordSuccessfullyCreated: 'Пароль успешно создан!',\r\n    passwordSuccessfullyUpdated: 'Пароль успешно изменен!',\r\n    requirements: 'Требования к паролю',\r\n    safetyTips: 'Советы по безопасности!',\r\n    safetyTipsFirst: 'использоваться на других счетах;',\r\n    safetyTipsPhrase: 'Избегайте пароля, который:',\r\n    safetyTipsSecond: 'использует личную информацию, такую ​​как ваше имя, фамилию или фамилию;',\r\n    safetyTipsThird:\r\n      'используйте очень очевидные строки, такие как \"1234\" или \"abcd\", или такие очевидные слова, как \"пароль\";',\r\n    saveButton: 'экономить'\r\n  }\r\n};\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class PoPageChangePasswordService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  post(url: string, item: any): Observable<HttpResponse<Object>> {\r\n    return this.http.post<any>(url, item, { observe: 'response' });\r\n  }\r\n}\r\n","<div class=\"po-page-change-password-wrapper\" #pageChangePassword>\r\n  <div class=\"po-page-change-password-container\">\r\n    <po-page-background class=\"po-page-change-password\" [p-logo]=\"logo\" [p-secondary-logo]=\"secondaryLogo\">\r\n      <div class=\"po-page-blocked-user-header po-row\">\r\n        <div class=\"po-md-12\">{{ literals.createNewPassword }}</div>\r\n        <div class=\"po-md-12 po-text-center po-font-text\">\r\n          {{ literals.createNewPasswordPhrase }}\r\n        </div>\r\n      </div>\r\n\r\n      <form #passwordForm=\"ngForm\">\r\n        <div class=\"po-row po-mt-3 po-mt-sm-1\">\r\n          <div class=\"po-md-6\" [ngClass]=\"{ 'po-offset-md-3 po-offset-lg-3 po-offset-xl-3': !showRequirements }\">\r\n            <div *ngIf=\"!hideCurrentPassword\">\r\n              <po-password\r\n                name=\"currentPassword\"\r\n                [(ngModel)]=\"currentPassword\"\r\n                p-required\r\n                [p-label]=\"literals.currentPassword\"\r\n              >\r\n              </po-password>\r\n            </div>\r\n            <div *ngIf=\"!hideCurrentPassword && recovery\" class=\"po-text-center po-mb-sm-1 po-mb-2\">\r\n              <a\r\n                *ngIf=\"recoveryUrlType === 'internalLink'\"\r\n                class=\"po-font-text-bold po-page-change-password-forgot-password\"\r\n                [routerLink]=\"recovery\"\r\n              >\r\n                {{ literals.forgotPassword }}\r\n              </a>\r\n              <a\r\n                *ngIf=\"recoveryUrlType === 'externalLink'\"\r\n                class=\"po-font-text-bold po-page-change-password-forgot-password\"\r\n                [href]=\"recovery\"\r\n              >\r\n                {{ literals.forgotPassword }}\r\n              </a>\r\n              <a\r\n                *ngIf=\"!recoveryUrlType\"\r\n                class=\"po-font-text-bold po-page-change-password-forgot-password po-clickable\"\r\n                (click)=\"onForgotPasswordClick(recovery)\"\r\n              >\r\n                {{ literals.forgotPassword }}\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <po-password\r\n                name=\"newPassword\"\r\n                [(ngModel)]=\"newPassword\"\r\n                p-required\r\n                [p-label]=\"literals.newPassword\"\r\n                (p-change-model)=\"validatePassword()\"\r\n              >\r\n              </po-password>\r\n            </div>\r\n            <div>\r\n              <po-password\r\n                name=\"confirmPassword\"\r\n                [(ngModel)]=\"confirmPassword\"\r\n                p-required\r\n                [p-label]=\"literals.confirmPassword\"\r\n                (p-change-model)=\"validatePassword()\"\r\n              >\r\n              </po-password>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"showRequirements\" class=\"po-md-6 po-page-change-password-required-container\">\r\n            <po-container>\r\n              <ul class=\"po-page-change-password-required-list\">\r\n                <li class=\"po-page-change-password-required-item\">\r\n                  <p class=\"po-mb-1 po-font-text-bold po-page-change-password-required-title\">\r\n                    {{ literals?.requirements }}\r\n                  </p>\r\n                </li>\r\n                <li *ngFor=\"let requirement of requirements\" class=\"po-page-change-password-required-item\">\r\n                  <span\r\n                    class=\"po-icon po-page-change-password-required-icon\"\r\n                    [ngClass]=\"\r\n                      validateRequirement(requirement)\r\n                        ? 'po-icon-ok po-page-change-password-required-ok'\r\n                        : 'po-icon-minus po-page-change-password-required-minus'\r\n                    \"\r\n                  >\r\n                  </span>\r\n                  <p class=\"po-page-change-password-required-text po-font-text\">\r\n                    {{ requirement.requirement }}\r\n                  </p>\r\n                </li>\r\n              </ul>\r\n            </po-container>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <po-divider class=\"po-sm-12\"></po-divider>\r\n\r\n      <div class=\"po-page-change-password-tips po-row\">\r\n        <div class=\"po-md-2 po-mr-3\">\r\n          <img\r\n            class=\"po-page-change-password-lock-image po-mb-3\"\r\n            alt=\"Blocked user image\"\r\n            src=\"./assets/images/big-lock.svg\"\r\n          />\r\n        </div>\r\n        <div class=\"po-md-9 po-page-change-password-tips-text\">\r\n          <div class=\"po-font-text-bold po-pb-1\">{{ literals.safetyTips }}</div>\r\n          <div class=\"po-font-text-small\">\r\n            <div class=\"po-row po-pb-1\">{{ literals.safetyTipsPhrase }}</div>\r\n            <div class=\"po-row po-pb-1\">• {{ literals.safetyTipsFirst }}</div>\r\n            <div class=\"po-row po-pb-1\">• {{ literals.safetyTipsSecond }}</div>\r\n            <div class=\"po-row po-pb-1\">• {{ literals.safetyTipsThird }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"po-page-change-password-buttons po-row\">\r\n        <po-divider class=\"po-sm-12 po-mobile-only\"></po-divider>\r\n\r\n        <po-button\r\n          *ngIf=\"!hideCurrentPassword\"\r\n          class=\"po-sm-6 po-mb-sm-1\"\r\n          [p-label]=\"literals.backButton\"\r\n          (p-click)=\"navigateTo(urlBack)\"\r\n        >\r\n        </po-button>\r\n\r\n        <po-button\r\n          [ngClass]=\"hideCurrentPassword ? 'po-md-12' : 'po-sm-6'\"\r\n          p-kind=\"primary\"\r\n          [p-disabled]=\"passwordForm.invalid\"\r\n          [p-label]=\"literals.saveButton\"\r\n          (p-click)=\"onLoginSubmit()\"\r\n        >\r\n        </po-button>\r\n      </div>\r\n    </po-page-background>\r\n  </div>\r\n</div>\r\n\r\n<po-modal\r\n  [p-primary-action]=\"modalAction\"\r\n  p-hide-close\r\n  p-size=\"auto\"\r\n  [p-title]=\"hideCurrentPassword ? literals.passwordSuccessfullyCreated : literals.passwordSuccessfullyUpdated\"\r\n>\r\n  <div class=\"po-text-center\">\r\n    <img\r\n      alt=\"Blocked user image\"\r\n      class=\"po-page-change-password-lock-image po-mb-3\"\r\n      src=\"./assets/images/success.svg\"\r\n    />\r\n  </div>\r\n</po-modal>\r\n","import { AfterViewInit, Component, ComponentRef, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport {\r\n  PoComponentInjectorService,\r\n  PoLanguageService,\r\n  PoModalAction,\r\n  PoModalComponent,\r\n  poLocaleDefault\r\n} from '@po-ui/ng-components';\r\n\r\nimport { isExternalLink, isTypeof } from '../../utils/util';\r\n\r\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\r\nimport { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\r\nimport { PoPageChangePassword } from './interfaces/po-page-change-password.interface';\r\nimport { PoPageChangePasswordBaseComponent } from './po-page-change-password-base.component';\r\nimport { poPageChangePasswordLiterals } from './literals/i18n/po-page-change-password-literals';\r\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\r\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\r\nimport { PoPageChangePasswordService } from './po-page-change-password.service';\r\n\r\n/**\r\n * @docsExtends PoPageChangePasswordBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-change-password-basic\" title=\"PO Page Change Password Basic\">\r\n *  <file name=\"sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-change-password-labs\" title=\"PO Page Change Password Labs\">\r\n *  <file name=\"sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-change-password-modify\" title=\"PO Page Change Password Modify\">\r\n *  <file name=\"sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.html\"> </file>\r\n *  <file name=\"sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-change-password-create\" title=\"PO Page Change Password Create\">\r\n *  <file name=\"sample-po-page-change-password-create/sample-po-page-change-password-create.component.html\"> </file>\r\n *  <file name=\"sample-po-page-change-password-create/sample-po-page-change-password-create.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-change-password-request\" title=\"PO Page Change Password Request\">\r\n *  <file name=\"sample-po-page-change-password-request/sample-po-page-change-password-request.component.html\"> </file>\r\n *  <file name=\"sample-po-page-change-password-request/sample-po-page-change-password-request.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-change-password',\r\n  templateUrl: './po-page-change-password.component.html'\r\n})\r\nexport class PoPageChangePasswordComponent\r\n  extends PoPageChangePasswordBaseComponent\r\n  implements AfterViewInit, OnDestroy, OnInit {\r\n  @ViewChild(PoModalComponent, { static: true }) modal: PoModalComponent;\r\n  @ViewChild('pageChangePassword', { read: ViewContainerRef, static: true }) pageChangePassword: ViewContainerRef;\r\n  @ViewChild('passwordForm', { read: NgForm, static: true }) passwordForm: NgForm;\r\n\r\n  literals: {\r\n    backButton: string;\r\n    confirmPassword: string;\r\n    createNewPassword: string;\r\n    createNewPasswordPhrase: string;\r\n    currentPassword: string;\r\n    enterSystemButton: string;\r\n    forgotPassword: string;\r\n    newPassword: string;\r\n    passwordSuccessfullyCreated: string;\r\n    passwordSuccessfullyUpdated: string;\r\n    requirements: string;\r\n    safetyTips: string;\r\n    safetyTipsPhrase: string;\r\n    safetyTipsFirst: string;\r\n    safetyTipsSecond: string;\r\n    safetyTipsThird: string;\r\n    saveButton: string;\r\n  } = poPageChangePasswordLiterals[poLocaleDefault];\r\n\r\n  modalAction: PoModalAction = {\r\n    action: this.navigateTo.bind(this, this.urlHome),\r\n    label: this.literals.enterSystemButton\r\n  };\r\n\r\n  private newPasswordSubscription: Subscription;\r\n  private componentRef: ComponentRef<any> = null;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private service: PoPageChangePasswordService,\r\n    private poComponentInjector: PoComponentInjectorService,\r\n    languageService: PoLanguageService,\r\n    viewRef: ViewContainerRef\r\n  ) {\r\n    super();\r\n\r\n    const language = languageService.getShortLanguage();\r\n\r\n    this.literals = {\r\n      ...poPageChangePasswordLiterals[poLocaleDefault],\r\n      ...poPageChangePasswordLiterals[language]\r\n    };\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.urlNewPassword) {\r\n      this.subscribeToTokenParameter();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.newPasswordSubscription) {\r\n      this.newPasswordSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\r\n  }\r\n\r\n  navigateTo(url: string) {\r\n    isExternalLink(url) ? window.open(url) : this.router.navigate([url || '/']);\r\n  }\r\n\r\n  onForgotPasswordClick(recovery): void {\r\n    if (isTypeof(recovery, 'function')) {\r\n      recovery();\r\n    } else {\r\n      this.createModalPasswordRecoveryComponent(recovery);\r\n    }\r\n  }\r\n\r\n  onLoginSubmit(): void {\r\n    const form = this.getLoginForm();\r\n\r\n    if (this.urlNewPassword) {\r\n      this.postUrlNewPassword(form);\r\n    } else if (this.submit && this.submit.observers.length) {\r\n      this.emitSubmit(form);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abre uma modal de confirmação com texto, imagem e botão que redireciona para o link definido na propriedade `p-url-home`\u001c\r\n   */\r\n  openConfirmation() {\r\n    this.modal.open();\r\n  }\r\n\r\n  validatePassword() {\r\n    const controls = this.passwordForm.form.controls;\r\n    const controlConfirmPassword = controls['confirmPassword'];\r\n    const controlNewPassword = controls['newPassword'];\r\n\r\n    if (!this.newPassword) {\r\n      this.setFormErrors({ 'required': true }, [controlNewPassword]);\r\n    } else if (!this.confirmPassword) {\r\n      this.setFormErrors({ 'required': true }, [controlConfirmPassword]);\r\n    } else if (this.newPassword && this.confirmPassword && this.newPassword !== this.confirmPassword) {\r\n      this.setFormErrors({ 'equalPassword': true }, [controlNewPassword, controlConfirmPassword]);\r\n    } else {\r\n      this.setFormErrors(null, [controlConfirmPassword, controlNewPassword]);\r\n    }\r\n\r\n    if (\r\n      this.requirements.length &&\r\n      this.requirements.find(requirement => this.validateRequirement(requirement) === false)\r\n    ) {\r\n      this.setFormErrors({ 'requirement': true }, [controlNewPassword]);\r\n    }\r\n  }\r\n\r\n  validateRequirement(requirement: PoPageChangePasswordRequirement) {\r\n    return typeof requirement.status === 'function' ? requirement.status(this.newPassword) : requirement.status;\r\n  }\r\n\r\n  private checkingForMetadataProperty(object, property) {\r\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\r\n      return object[property];\r\n    }\r\n  }\r\n\r\n  private checkingForRouteMetadata(data) {\r\n    if (Object.keys(data).length !== 0) {\r\n      this.urlNewPassword = this.checkingForMetadataProperty(data, 'serviceApi') || this.urlNewPassword;\r\n      this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;\r\n      this.hideCurrentPassword =\r\n        this.checkingForMetadataProperty(data, 'hideCurrentPassword') || this.hideCurrentPassword;\r\n    }\r\n  }\r\n\r\n  private createModalPasswordRecoveryComponent(recovery: PoPageChangePasswordRecovery) {\r\n    if (this.componentRef) {\r\n      this.poComponentInjector.destroyComponentInApplication(this.componentRef);\r\n    }\r\n\r\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);\r\n    this.componentRef.instance.recovery = recovery.url;\r\n    this.componentRef.instance.contactEmail = recovery.contactMail;\r\n    this.componentRef.instance.phoneMask = recovery.phoneMask;\r\n    this.componentRef.instance.type = recovery.type || PoModalPasswordRecoveryType.Email;\r\n    this.componentRef.changeDetectorRef.detectChanges();\r\n    setTimeout(() => {\r\n      this.componentRef.instance.open();\r\n    });\r\n  }\r\n\r\n  private emitSubmit(form: PoPageChangePassword) {\r\n    this.submit.emit(form);\r\n  }\r\n\r\n  private getLoginForm(): PoPageChangePassword {\r\n    return {\r\n      currentPassword: this.currentPassword,\r\n      newPassword: this.newPassword\r\n    };\r\n  }\r\n\r\n  private postUrlNewPassword(form: PoPageChangePassword) {\r\n    form['token'] = this.token;\r\n\r\n    this.service.post(this.urlNewPassword, form).subscribe(response => {\r\n      if (response.status === 204) {\r\n        this.openConfirmation();\r\n      }\r\n    });\r\n  }\r\n\r\n  private setFormErrors(error: any, controls?: Array<any>) {\r\n    controls.forEach(control => {\r\n      control.setErrors(error);\r\n    });\r\n  }\r\n\r\n  private subscribeToTokenParameter() {\r\n    this.route.queryParams.subscribe(params => {\r\n      const token = params['token'];\r\n\r\n      if (token) {\r\n        this.token = token;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoModule } from '@po-ui/ng-components';\r\n\r\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\r\nimport { PoPageBackgroundModule } from '../po-page-background/index';\r\nimport { PoPageChangePasswordComponent } from './po-page-change-password.component';\r\nimport { PoPageChangePasswordService } from './po-page-change-password.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do template do po-page-change-password.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, RouterModule, PoModule, PoPageBackgroundModule],\r\n  declarations: [PoPageChangePasswordComponent],\r\n  providers: [PoPageChangePasswordService],\r\n  exports: [PoPageChangePasswordComponent]\r\n})\r\nexport class PoPageChangePasswordModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { merge, Observable, of, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { PoLanguageService, PoNotificationService } from '@po-ui/ng-components';\r\n\r\nimport { PoPageDynamicLiterals } from './po-page-dynamic-literals.interface';\r\n\r\nexport const poPageDynamicLiterals: { [key: string]: PoPageDynamicLiterals } = {\r\n  en: {\r\n    errorRenderPage: 'Error loading page',\r\n    notPossibleLoadMetadataPage: 'The page metadata could not be loaded'\r\n  },\r\n  es: {\r\n    errorRenderPage: 'Error al cargar la página',\r\n    notPossibleLoadMetadataPage: 'No se pudieron cargar los metadatos de la página.'\r\n  },\r\n  pt: {\r\n    errorRenderPage: 'Erro ao carregar a página',\r\n    notPossibleLoadMetadataPage: 'Não foi possível carregar os metadados da página'\r\n  },\r\n  ru: {\r\n    errorRenderPage: 'Ошибка загрузки страницы',\r\n    notPossibleLoadMetadataPage: 'Не удалось загрузить метаданные страницы'\r\n  }\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoPageDynamicService {\r\n  readonly headers: HttpHeaders = new HttpHeaders({\r\n    'X-PO-SCREEN-LOCK': 'true'\r\n  });\r\n\r\n  private endpoint = '/';\r\n  private language: string;\r\n  private metadata: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private notification: PoNotificationService,\r\n    languageService: PoLanguageService\r\n  ) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  configServiceApi(config: { endpoint?: string; metadata?: string } = {}) {\r\n    this.endpoint = config.endpoint;\r\n    this.metadata = config.metadata || this.metadata;\r\n  }\r\n\r\n  getMetadata<T>(type: string = 'list'): Observable<T> {\r\n    const key = `${this.endpoint}-${type}-metadata`;\r\n    const cache = JSON.parse(localStorage.getItem(key)) || {};\r\n    const metadataUrlBase = this.metadata || `${this.endpoint}/metadata`;\r\n\r\n    const url = `${metadataUrlBase}?type=${type}&version=${cache.version || ''}`;\r\n\r\n    return this.http.get<T>(url).pipe(\r\n      map((response: any) => {\r\n        if (response.version !== undefined && response.version === cache.version) {\r\n          return cache;\r\n        }\r\n\r\n        localStorage.setItem(key, JSON.stringify(response));\r\n\r\n        return { ...cache, ...response };\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (Object.keys(cache).length) {\r\n          return of(cache);\r\n        }\r\n\r\n        const { errorRenderPage, notPossibleLoadMetadataPage } = poPageDynamicLiterals[this.language];\r\n\r\n        this.notification.warning(notPossibleLoadMetadataPage);\r\n\r\n        return merge(of({ title: errorRenderPage }), throwError(error));\r\n      })\r\n    );\r\n  }\r\n\r\n  // Deleta um único recurso\r\n  deleteResource(id?, endpoint?: string): Observable<any> {\r\n    const localEndPoint = this.getLocalEndPoint(endpoint, true);\r\n    const url = id ? `${localEndPoint}/${id}` : localEndPoint;\r\n    return this.http.delete(url, { headers: this.headers });\r\n  }\r\n\r\n  // Deleta recursos em lote\r\n  deleteResources(ids: Array<any>, endpoint?: string): Observable<any> {\r\n    return this.http.request('delete', `${this.getLocalEndPoint(endpoint)}`, { headers: this.headers, body: ids });\r\n  }\r\n\r\n  // Busca uma lista de recursos\r\n  getResources(params?: HttpParams, endpoint?: string): Observable<any> {\r\n    return this.http.get(this.getLocalEndPoint(endpoint), { headers: this.headers, params });\r\n  }\r\n\r\n  // Busca um único recurso\r\n  getResource(id, endpoint?: string): Observable<any> {\r\n    return this.http.get(`${this.getLocalEndPoint(endpoint, true)}/${id}`, { headers: this.headers });\r\n  }\r\n\r\n  // Cria um recurso\r\n  createResource(resource, endpoint?: string): Observable<any> {\r\n    return this.http.post(`${this.getLocalEndPoint(endpoint)}`, resource, { headers: this.headers });\r\n  }\r\n\r\n  // Atualiza um recurso\r\n  updateResource(id, resource, endpoint?: string): Observable<any> {\r\n    return this.http.put(`${this.getLocalEndPoint(endpoint, true)}/${id}`, resource, { headers: this.headers });\r\n  }\r\n\r\n  private getLocalEndPoint(endpoint?: string, checkSingleBar = false) {\r\n    endpoint = endpoint ?? this.endpoint;\r\n    if (checkSingleBar) {\r\n      endpoint = endpoint === '/' ? '' : endpoint;\r\n    }\r\n    return endpoint;\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { PoPageDynamicDetailActions } from './interfaces/po-page-dynamic-detail-actions.interface';\r\nimport { PoPageDynamicDetailBeforeBack } from './interfaces/po-page-dynamic-detail-before-back.interface';\r\nimport { PoPageDynamicDetailBeforeRemove } from './interfaces/po-page-dynamic-detail-before-remove.interface';\r\nimport { PoPageDynamicDetailBeforeEdit } from './interfaces/po-page-dynamic-detail-before-edit.interface';\r\n\r\ninterface ExecuteActionParameter {\r\n  action: string | Function;\r\n  resource?: any;\r\n  id?: string | number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoPageDynamicDetailActionsService {\r\n  readonly headers: HttpHeaders = new HttpHeaders({\r\n    'X-PO-SCREEN-LOCK': 'true'\r\n  });\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  beforeBack(action?: PoPageDynamicDetailActions['beforeBack']): Observable<PoPageDynamicDetailBeforeBack> {\r\n    return this.executeAction({ action });\r\n  }\r\n\r\n  beforeEdit(\r\n    action: PoPageDynamicDetailActions['beforeEdit'],\r\n    id: any,\r\n    body: any\r\n  ): Observable<PoPageDynamicDetailBeforeEdit> {\r\n    const resource = body ?? {};\r\n\r\n    return this.executeAction({ action, resource, id });\r\n  }\r\n\r\n  beforeRemove(\r\n    action: PoPageDynamicDetailActions['beforeRemove'],\r\n    id: any,\r\n    body: any\r\n  ): Observable<PoPageDynamicDetailBeforeRemove> {\r\n    const resource = body ?? {};\r\n\r\n    return this.executeAction({ action, resource, id });\r\n  }\r\n\r\n  private executeAction<T>({ action, resource = {}, id }: ExecuteActionParameter): Observable<T> {\r\n    if (!action) {\r\n      return of(<T>{});\r\n    }\r\n\r\n    if (typeof action === 'string') {\r\n      const url = id ? `${action}/${id}` : action;\r\n\r\n      return this.http.post<T>(url, resource, { headers: this.headers });\r\n    }\r\n\r\n    return of(action(id, resource));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable, from } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { PoPageDynamicOptionsSchema, PoPageDynamicOptionsProp } from './po-page-dynamic-options.interface';\r\n\r\ntype urlOrFunction = string | Function;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoPageCustomizationService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCustomOptions<T>(\r\n    origin: urlOrFunction,\r\n    originalOption: T,\r\n    optionSchema: PoPageDynamicOptionsSchema<T>\r\n  ): Observable<T> {\r\n    return this.createObservable<T>(origin).pipe(\r\n      map(newPageOptions => this.mergePageOptions<T>(originalOption, newPageOptions, optionSchema))\r\n    );\r\n  }\r\n\r\n  changeOriginalOptionsToNewOptions<T, K>(objectToChange: T, newOptions: K) {\r\n    Object.keys(newOptions).forEach(key => {\r\n      const value = newOptions[key];\r\n      if (key in objectToChange) {\r\n        if (Array.isArray(value)) {\r\n          objectToChange[key] = [...value];\r\n          return;\r\n        }\r\n        if (typeof value === 'number' || typeof value === 'string' || typeof value === 'boolean') {\r\n          objectToChange[key] = value;\r\n          return;\r\n        }\r\n        if (value !== null && typeof value === 'object') {\r\n          objectToChange[key] = { ...value };\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private createObservable<T>(origin: urlOrFunction): Observable<T> {\r\n    if (typeof origin === 'string') {\r\n      return this.http.post<T>(origin, {});\r\n    }\r\n    return from(Promise.resolve(origin()));\r\n  }\r\n\r\n  private mergePageOptions<T>(originalOption: T, newPageOptions: T, optionSchema: PoPageDynamicOptionsSchema<T>) {\r\n    const mergePageOptions: T = optionSchema.schema.reduce(\r\n      (objWithNewProp, prop) => ({\r\n        ...objWithNewProp,\r\n        [prop.nameProp]: this.createNewProp(prop, originalOption, newPageOptions)\r\n      }),\r\n      {} as T\r\n    );\r\n\r\n    Object.keys(mergePageOptions).forEach(key => mergePageOptions[key] === undefined && delete mergePageOptions[key]);\r\n\r\n    return mergePageOptions;\r\n  }\r\n\r\n  private createNewProp<T>(prop: PoPageDynamicOptionsProp<T>, originalOption: T, newPageOptions: T) {\r\n    if (prop.merge) {\r\n      return this.mergeOptions(originalOption[prop.nameProp], newPageOptions[prop.nameProp], prop.keyForMerge);\r\n    } else {\r\n      return newPageOptions[prop.nameProp] ?? originalOption[prop.nameProp];\r\n    }\r\n  }\r\n\r\n  private mergeOptions<T>(originalOptions: Array<T> | T, newOptions: Array<T> | T, filterProp?: keyof T) {\r\n    if (!originalOptions && !newOptions) {\r\n      return;\r\n    }\r\n    if (!newOptions) {\r\n      return originalOptions;\r\n    }\r\n    if (!originalOptions) {\r\n      return newOptions;\r\n    }\r\n\r\n    if (originalOptions instanceof Array && newOptions instanceof Array) {\r\n      return this.mergeOptionsArray(originalOptions, newOptions, filterProp);\r\n    }\r\n\r\n    return { ...originalOptions, ...newOptions };\r\n  }\r\n\r\n  private mergeOptionsArray<T>(originalOptions: Array<T>, newOptions: Array<T>, filterProp: keyof T) {\r\n    const deduplicateNewOptions = newOptions.filter(\r\n      newItem => !originalOptions.find(originalItem => originalItem[filterProp] === newItem[filterProp])\r\n    );\r\n    const mergedOriginalOptions = originalOptions.map(originalItem => {\r\n      const newItem =\r\n        newOptions.find(newOptionsItem => originalItem[filterProp] === newOptionsItem[filterProp]) || originalItem;\r\n      return { ...originalItem, ...newItem };\r\n    });\r\n    return [...mergedOriginalOptions, ...deduplicateNewOptions];\r\n  }\r\n}\r\n","<po-page-default [p-actions]=\"pageActions\" [p-breadcrumb]=\"breadcrumb\" [p-title]=\"title\">\r\n  <ng-container *ngIf=\"model; then viewFieldsTemplate; else registerNotFoundTemplate\"> </ng-container>\r\n</po-page-default>\r\n\r\n<ng-template #registerNotFoundTemplate>\r\n  <po-widget>\r\n    <span class=\"po-icon po-icon-info\"></span>\r\n    <span class=\"po-font-text-large\">\r\n      {{ literals.registerNotFound }}\r\n    </span>\r\n  </po-widget>\r\n</ng-template>\r\n\r\n<ng-template #viewFieldsTemplate>\r\n  <po-dynamic-view [p-fields]=\"fields\" [p-value]=\"model\"> </po-dynamic-view>\r\n</ng-template>\r\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { Route, Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { Subscription, concat, EMPTY, Observable, throwError, of } from 'rxjs';\r\nimport { tap, catchError, map, switchMap } from 'rxjs/operators';\r\n\r\nimport {\r\n  PoBreadcrumb,\r\n  PoDialogConfirmOptions,\r\n  PoDialogService,\r\n  PoLanguageService,\r\n  PoNotificationService,\r\n  PoPageAction,\r\n  poLocaleDefault\r\n} from '@po-ui/ng-components';\r\n\r\nimport { convertToBoolean, mapObjectByProperties, valuesFromObject } from '../../utils/util';\r\n\r\nimport { PoPageDynamicDetailActions } from './interfaces/po-page-dynamic-detail-actions.interface';\r\nimport { PoPageDynamicDetailField } from './interfaces/po-page-dynamic-detail-field.interface';\r\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\r\nimport { PoPageDynamicDetailActionsService } from './po-page-dynamic-detail-actions.service';\r\nimport { PoPageDynamicDetailOptions } from './interfaces/po-page-dynamic-detail-options.interface';\r\nimport { PoPageCustomizationService } from './../../services/po-page-customization/po-page-customization.service';\r\nimport { PoPageDynamicOptionsSchema } from './../../services/po-page-customization/po-page-dynamic-options.interface';\r\nimport { PoPageDynamicDetailMetaData } from './interfaces/po-page-dynamic-detail-metadata.interface';\r\nimport { PoPageDynamicDetailBeforeBack } from './interfaces/po-page-dynamic-detail-before-back.interface';\r\nimport { PoPageDynamicDetailBeforeRemove } from './interfaces/po-page-dynamic-detail-before-remove.interface';\r\nimport { PoPageDynamicDetailBeforeEdit } from './interfaces/po-page-dynamic-detail-before-edit.interface';\r\n\r\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicDetailOptions);\r\n\r\nexport const poPageDynamicDetailLiteralsDefault = {\r\n  en: {\r\n    pageActionEdit: 'Edit',\r\n    pageActionRemove: 'Delete',\r\n    pageActionBack: 'Back',\r\n    confirmRemoveTitle: 'Confirm delete',\r\n    confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',\r\n    removeNotificationSuccess: 'Item deleted successfully.',\r\n    registerNotFound: 'Register not found.'\r\n  },\r\n  es: {\r\n    pageActionEdit: 'Editar',\r\n    pageActionRemove: 'Borrar',\r\n    pageActionBack: 'Regreso',\r\n    confirmRemoveTitle: 'Confirmar la exclusión',\r\n    confirmRemoveMessage: '¿Está seguro de que desea eliminar este registro? No puede deshacer esta acción.',\r\n    removeNotificationSuccess: 'Elemento eliminado con éxito.',\r\n    registerNotFound: 'Registro no encontrado.'\r\n  },\r\n  pt: {\r\n    pageActionEdit: 'Editar',\r\n    pageActionRemove: 'Excluir',\r\n    pageActionBack: 'Voltar',\r\n    confirmRemoveTitle: 'Confirmar exclusão',\r\n    confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? Você não poderá desfazer essa ação.',\r\n    removeNotificationSuccess: 'Item excluído com sucesso.',\r\n    registerNotFound: 'Registro não encontrado.'\r\n  },\r\n  ru: {\r\n    pageActionEdit: 'Редактировать',\r\n    pageActionRemove: 'Удалить',\r\n    pageActionBack: 'Назад',\r\n    confirmRemoveTitle: 'Подтверждение удаления',\r\n    confirmRemoveMessage: 'Вы уверены, что хотите удалить эту запись?  Вы не можете отменить это действие.',\r\n    removeNotificationSuccess: 'Элемент успешно удален.',\r\n    registerNotFound: 'Запись не найдена.'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-page-dynamic-detail` é uma página que serve para exibir registros em detalhes,\r\n * o mesmo também suporta metadados conforme especificado na documentação.\r\n *\r\n *\r\n * ### Utilização via rota\r\n *\r\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-detail` disponibiliza propriedades para\r\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:\r\n *\r\n * O componente primeiro irá carregar o metadado da rota definida na propriedade serviceMetadataApi\r\n * e depois irá buscar da rota definida na propriedade serviceLoadApi.\r\n *\r\n * > Caso o servidor retornar um erro ao recuperar o metadados, será repassado o metadados salvo em cache,\r\n * se o cache não existe será disparado uma notificação.\r\n *\r\n * ```\r\n * {\r\n *   path: 'people/:id',\r\n *   component: PoPageDynamicDetailComponent,\r\n *   data: {\r\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\r\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados\r\n *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o\r\n * tipo do metadado esperado e a versão cacheada pelo browser.\r\n *\r\n * O formato esperado na resposta da requisição está especificado na interface\r\n * [PoPageDynamicDetailMetadata](/documentation/po-page-dynamic-detail#po-page-dynamic-detail-metadata). Por exemplo:\r\n *\r\n * ```\r\n *  {\r\n *   version: 1,\r\n *   title: 'Person Detail',\r\n *   fields: [\r\n *     { property: 'id', key: true, disabled: true },\r\n *     { property: 'status' },\r\n *     { property: 'name' },\r\n *     { property: 'nickname' },\r\n *     { property: 'birthdate', label: 'Birth date' },\r\n *     { property: 'genre' },\r\n *     { property: 'city' },\r\n *     { property: 'country' }\r\n *   ]\r\n * }\r\n * ```\r\n *\r\n * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:\r\n * ```\r\n * GET {end-point}/metadata?type=detail&version={version}\r\n * ```\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-dynamic-detail-user\" title=\"PO Page Dynamic Detail User\">\r\n *  <file name=\"sample-po-page-dynamic-detail-user/sample-po-page-dynamic-detail-user.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-detail-user/sample-po-page-dynamic-detail-user.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-dynamic-detail',\r\n  templateUrl: './po-page-dynamic-detail.component.html',\r\n  providers: [PoPageDynamicService, PoPageDynamicDetailActionsService]\r\n})\r\nexport class PoPageDynamicDetailComponent implements OnInit, OnDestroy {\r\n  /** Objeto com propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\r\n\r\n  /**\r\n   * Função ou serviço que será executado na inicialização do componente.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\r\n   * - `function`: Método que será executado.\r\n   *\r\n   * O retorno desta função deve ser do tipo `PoPageDynamicDetailOptions`,\r\n   * onde o usuário poderá customizar novos campos, breadcrumb, title e actions\r\n   *\r\n   * Por exemplo:\r\n   *\r\n   * ```\r\n   * getPageOptions(): PoPageDynamicDetailOptions {\r\n   * return {\r\n   *   actions:\r\n   *     { new: 'new', edit: 'edit/:id', remove: true },\r\n   *   fields: [\r\n   *     { property: 'idCard', gridColumns: 6 }\r\n   *   ]\r\n   * };\r\n   * }\r\n   *\r\n   * ```\r\n   * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\r\n   * ```\r\n   *  [p-load]=\"onLoadOptions.bind(this)\"\r\n   * ```\r\n   */\r\n  @Input('p-load') onLoad: string | (() => PoPageDynamicDetailOptions);\r\n\r\n  /** Título da página. */\r\n  @Input('p-title') title: string;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Endpoint usado pelo template para requisição do recurso que serão exibido.\r\n   *\r\n   * Caso a ação `remove` estiver configurada, será feito uma requisição de exclusão nesse mesmo endpoint passando os campos\r\n   * setados como `key: true`.\r\n   *\r\n   * > `DELETE {end-point}/{keys}`\r\n   *\r\n   * ```\r\n   *  <po-page-dynamic-detail\r\n   *    [p-actions]=\"{ remove: '/' }\"\r\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\r\n   *    p-service=\"/api/po-samples/v1/people\"\r\n   *    ...>\r\n   *  </po-page-dynamic-detail>\r\n   * ```\r\n   *\r\n   * Resquisição disparada, onde a propriedade `id` é igual a 2:\r\n   *\r\n   * ```\r\n   *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\r\n   *  Host: localhost:4000\r\n   *  Connection: keep-alive\r\n   *  Accept: application/json, text/plain\r\n   *  ...\r\n   * ```\r\n   *\r\n   * > Caso esteja usando metadados com o template, será disparado uma requisição na inicialização do template para buscar\r\n   * > os metadados da página passando o tipo do metadado esperado e a versão cacheada pelo browser.\r\n   * >\r\n   * > `GET {end-point}/metadata?type=detail&version={version}`\r\n   */\r\n  @Input('p-service-api') serviceApi: string;\r\n\r\n  literals;\r\n  model: any = {};\r\n\r\n  private subscriptions: Array<Subscription> = [];\r\n\r\n  private _actions: PoPageDynamicDetailActions = {};\r\n  private _autoRouter: boolean = false;\r\n  private _duplicates: Array<any> = [];\r\n  private _fields: Array<any> = [];\r\n  private _keys: Array<any> = [];\r\n  private _pageActions: Array<PoPageAction> = [];\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define as ações da página de acordo com a interface `PoPageDynamicDetailActions`.\r\n   */\r\n  @Input('p-actions') set actions(value: PoPageDynamicDetailActions) {\r\n    this._actions = this.isObject(value) ? value : {};\r\n\r\n    this._pageActions = this.getPageActions(this._actions);\r\n  }\r\n\r\n  get actions() {\r\n    return { ...this._actions };\r\n  }\r\n\r\n  /**\r\n   * @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.\r\n   *\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso as ações\r\n   * estejam definidas nas ações.\r\n   *\r\n   * > Para o correto funcionamento não pode haver nenhum rota coringa (`**`) especificada.\r\n   *\r\n   * @default false\r\n   */\r\n  @Input('p-auto-router') set autoRouter(value: boolean) {\r\n    this._autoRouter = convertToBoolean(value);\r\n  }\r\n\r\n  get autoRouter(): boolean {\r\n    return this._autoRouter;\r\n  }\r\n\r\n  /** Lista dos campos exibidos na página. */\r\n  @Input('p-fields') set fields(value: Array<PoPageDynamicDetailField>) {\r\n    this._fields = Array.isArray(value) ? [...value] : [];\r\n\r\n    this._keys = this.getKeysByFields(this.fields);\r\n    this._duplicates = this.getDuplicatesByFields(this.fields);\r\n  }\r\n\r\n  get fields(): Array<PoPageDynamicDetailField> {\r\n    return this._fields;\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private poNotification: PoNotificationService,\r\n    private poDialogService: PoDialogService,\r\n    private poPageDynamicService: PoPageDynamicService,\r\n    private poPageDynamicDetailActionsService: PoPageDynamicDetailActionsService,\r\n    private poPageCustomizationService: PoPageCustomizationService,\r\n    languageService: PoLanguageService\r\n  ) {\r\n    const language = languageService.getShortLanguage();\r\n\r\n    this.literals = {\r\n      ...poPageDynamicDetailLiteralsDefault[poLocaleDefault],\r\n      ...poPageDynamicDetailLiteralsDefault[language]\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadDataFromAPI();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscriptions) {\r\n      this.subscriptions.forEach(subscription => {\r\n        subscription.unsubscribe();\r\n      });\r\n    }\r\n  }\r\n\r\n  get duplicates() {\r\n    return [...this._duplicates];\r\n  }\r\n\r\n  get keys() {\r\n    return [...this._keys];\r\n  }\r\n\r\n  get pageActions() {\r\n    return [...this._pageActions];\r\n  }\r\n\r\n  private remove(\r\n    actionRemove: PoPageDynamicDetailActions['remove'],\r\n    actionBeforeRemove?: PoPageDynamicDetailActions['beforeRemove']\r\n  ) {\r\n    const uniqueKey = this.formatUniqueKey(this.model);\r\n\r\n    this.subscriptions.push(\r\n      this.poPageDynamicDetailActionsService\r\n        .beforeRemove(actionBeforeRemove, uniqueKey, { ...this.model })\r\n        .pipe(\r\n          switchMap((beforeRemoveResult: PoPageDynamicDetailBeforeRemove) => {\r\n            const newRemoveAction = beforeRemoveResult?.newUrl ?? actionRemove;\r\n            const allowAction = beforeRemoveResult?.allowAction ?? true;\r\n\r\n            if (!allowAction) {\r\n              return of({});\r\n            }\r\n\r\n            if (typeof newRemoveAction === 'string') {\r\n              return this.executeRemove(newRemoveAction, uniqueKey);\r\n            } else {\r\n              newRemoveAction(uniqueKey, { ...this.model });\r\n              return EMPTY;\r\n            }\r\n          })\r\n        )\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private confirmRemove(\r\n    actionRemove: PoPageDynamicDetailActions['remove'],\r\n    actionBeforeRemove: PoPageDynamicDetailActions['beforeRemove']\r\n  ) {\r\n    const confirmOptions: PoDialogConfirmOptions = {\r\n      title: this.literals.confirmRemoveTitle,\r\n      message: this.literals.confirmRemoveMessage,\r\n      confirm: this.remove.bind(this, actionRemove, actionBeforeRemove)\r\n    };\r\n\r\n    this.poDialogService.confirm(confirmOptions);\r\n  }\r\n\r\n  private executeRemove(path, uniqueKey: any) {\r\n    return this.poPageDynamicService.deleteResource(uniqueKey).pipe(\r\n      map(() => {\r\n        this.poNotification.success(this.literals.removeNotificationSuccess);\r\n        this.navigateTo({ path: path });\r\n      })\r\n    );\r\n  }\r\n\r\n  private formatUniqueKey(item) {\r\n    const keys = mapObjectByProperties(item, this.keys);\r\n\r\n    return valuesFromObject(keys).join('|');\r\n  }\r\n\r\n  private goBack(actionBack: PoPageDynamicDetailActions['back']) {\r\n    this.subscriptions.push(\r\n      this.poPageDynamicDetailActionsService\r\n        .beforeBack(this.actions.beforeBack)\r\n        .subscribe((beforeBackResult: PoPageDynamicDetailBeforeBack) =>\r\n          this.executeBackAction(actionBack, beforeBackResult?.allowAction, beforeBackResult?.newUrl)\r\n        )\r\n    );\r\n  }\r\n\r\n  private executeBackAction(actionBack: PoPageDynamicDetailActions['back'], allowAction?, newUrl?: string) {\r\n    const isAllowedAction = typeof allowAction === 'boolean' ? allowAction : true;\r\n\r\n    if (isAllowedAction) {\r\n      if (actionBack === undefined || typeof actionBack === 'boolean') {\r\n        return window.history.back();\r\n      }\r\n\r\n      if (typeof actionBack === 'string' || newUrl) {\r\n        return this.router.navigate([newUrl || actionBack]);\r\n      }\r\n\r\n      return actionBack();\r\n    }\r\n  }\r\n\r\n  private loadData(id) {\r\n    return this.poPageDynamicService.getResource(id).pipe(\r\n      tap(response => {\r\n        if (!response) {\r\n          this.setUndefinedToModelAndActions();\r\n        } else {\r\n          this.model = response;\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        this.setUndefinedToModelAndActions();\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  private setUndefinedToModelAndActions() {\r\n    this.model = undefined;\r\n    this.actions = undefined;\r\n  }\r\n\r\n  private getMetadata(\r\n    serviceApiFromRoute: string,\r\n    onLoad: UrlOrPoCustomizationFunction\r\n  ): Observable<PoPageDynamicDetailMetaData> {\r\n    if (serviceApiFromRoute) {\r\n      return this.poPageDynamicService.getMetadata<PoPageDynamicDetailMetaData>('detail').pipe(\r\n        tap(response => {\r\n          this.autoRouter = response.autoRouter || this.autoRouter;\r\n          this.actions = response.actions || this.actions;\r\n          this.breadcrumb = response.breadcrumb || this.breadcrumb;\r\n          this.fields = response.fields || this.fields;\r\n          this.title = response.title || this.title;\r\n        }),\r\n        switchMap(() => this.loadOptionsOnInitialize(onLoad))\r\n      );\r\n    }\r\n\r\n    return this.loadOptionsOnInitialize(onLoad);\r\n  }\r\n\r\n  // @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.\r\n  private navigateTo(\r\n    route: { path: string; component?; url?: string; params?: any },\r\n    forceStopAutoRouter: boolean = false\r\n  ) {\r\n    this.router.navigate([route.url || route.path], { queryParams: route.params }).catch(() => {\r\n      if (forceStopAutoRouter || !this.autoRouter) {\r\n        return;\r\n      }\r\n\r\n      this.router.config.unshift(<Route>{\r\n        path: route.path,\r\n        component: route.component,\r\n        data: { serviceApi: this.serviceApi, autoRouter: true }\r\n      });\r\n\r\n      this.navigateTo(route, true);\r\n    });\r\n  }\r\n\r\n  private openEdit(action: PoPageDynamicDetailActions['edit']) {\r\n    const id = this.formatUniqueKey(this.model);\r\n\r\n    this.subscriptions.push(\r\n      this.poPageDynamicDetailActionsService\r\n        .beforeEdit(this.actions.beforeEdit, id, this.model)\r\n        .pipe(\r\n          switchMap((beforeEditResult: PoPageDynamicDetailBeforeEdit) =>\r\n            this.executeEditAction(action, beforeEditResult, id)\r\n          )\r\n        )\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private executeEditAction(\r\n    action: PoPageDynamicDetailActions['edit'],\r\n    beforeEditResult: PoPageDynamicDetailBeforeEdit,\r\n    id: any\r\n  ) {\r\n    const newEditAction = beforeEditResult?.newUrl ?? action;\r\n    const allowAction = beforeEditResult?.allowAction ?? true;\r\n\r\n    if (!allowAction) {\r\n      return of({});\r\n    }\r\n\r\n    if (typeof newEditAction === 'string') {\r\n      this.openEditUrl(newEditAction);\r\n    } else {\r\n      newEditAction(id, { ...this.model });\r\n    }\r\n\r\n    return EMPTY;\r\n  }\r\n\r\n  private openEditUrl(path: string) {\r\n    const url = this.resolveUrl(this.model, path);\r\n    this.navigateTo({ path, url });\r\n  }\r\n\r\n  private resolveUrl(item: any, path: string) {\r\n    const uniqueKey = this.formatUniqueKey(item);\r\n\r\n    return path.replace(/:id/g, uniqueKey);\r\n  }\r\n\r\n  private getPageActions(actions: PoPageDynamicDetailActions = {}): Array<PoPageAction> {\r\n    const pageActions = [];\r\n\r\n    if (actions.edit) {\r\n      pageActions.push({ label: this.literals.pageActionEdit, action: this.openEdit.bind(this, actions.edit) });\r\n    }\r\n\r\n    if (actions.remove) {\r\n      pageActions.push({\r\n        label: this.literals.pageActionRemove,\r\n        action: this.confirmRemove.bind(this, actions.remove, this.actions.beforeRemove)\r\n      });\r\n    }\r\n\r\n    if (actions.back === undefined || actions.back) {\r\n      pageActions.push({ label: this.literals.pageActionBack, action: this.goBack.bind(this, actions.back) });\r\n    }\r\n\r\n    return pageActions;\r\n  }\r\n\r\n  private getKeysByFields(fields: Array<any> = []) {\r\n    return fields.filter(field => field.key === true).map(field => field.property);\r\n  }\r\n\r\n  private getDuplicatesByFields(fields: Array<any> = []) {\r\n    return fields.filter(field => field.duplicate === true).map(field => field.property);\r\n  }\r\n\r\n  private isObject(value: any): boolean {\r\n    return !!value && typeof value === 'object' && !Array.isArray(value);\r\n  }\r\n\r\n  private loadDataFromAPI() {\r\n    const { serviceApi: serviceApiFromRoute, serviceMetadataApi, serviceLoadApi } = this.activatedRoute.snapshot.data;\r\n    const { id } = this.activatedRoute.snapshot.params;\r\n\r\n    const onLoad = serviceLoadApi || this.onLoad;\r\n    this.serviceApi = serviceApiFromRoute || this.serviceApi;\r\n\r\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\r\n\r\n    const metadata$ = this.getMetadata(serviceApiFromRoute, onLoad);\r\n    const data$ = this.loadData(id);\r\n\r\n    this.subscriptions.push(concat(metadata$, data$).subscribe());\r\n  }\r\n\r\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\r\n    if (onLoad) {\r\n      return this.getPoDynamicPageOptions(onLoad).pipe(\r\n        tap(responsePoOption =>\r\n          this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption)\r\n        )\r\n      );\r\n    }\r\n\r\n    return EMPTY;\r\n  }\r\n\r\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicDetailOptions> {\r\n    const originalOption: PoPageDynamicDetailOptions = {\r\n      fields: this.fields,\r\n      actions: this.actions,\r\n      breadcrumb: this.breadcrumb,\r\n      title: this.title\r\n    };\r\n\r\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicDetailOptions> = {\r\n      schema: [\r\n        {\r\n          nameProp: 'fields',\r\n          merge: true,\r\n          keyForMerge: 'property'\r\n        },\r\n        {\r\n          nameProp: 'actions',\r\n          merge: true\r\n        },\r\n        {\r\n          nameProp: 'breadcrumb'\r\n        },\r\n        {\r\n          nameProp: 'title'\r\n        }\r\n      ]\r\n    };\r\n\r\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\r\n  }\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoPageDynamicService } from './po-page-dynamic.service';\r\n/**\r\n * @description\r\n *\r\n * Módulo do serviço do po-page-dynamic-service.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule],\r\n  providers: [PoPageDynamicService]\r\n})\r\nexport class PoPageDynamicModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoDynamicModule, PoModalModule, PoPageModule, PoWidgetModule } from '@po-ui/ng-components';\r\n\r\nimport { PoPageDynamicDetailComponent } from './po-page-dynamic-detail.component';\r\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do template do po-page-dynamic-detail.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n\r\n    PoDynamicModule,\r\n    PoModalModule,\r\n    PoPageModule,\r\n    PoWidgetModule,\r\n    PoPageDynamicModule\r\n  ],\r\n  declarations: [PoPageDynamicDetailComponent],\r\n  exports: [PoPageDynamicDetailComponent]\r\n})\r\nexport class PoPageDynamicDetailModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { of, Observable } from 'rxjs';\r\n\r\nimport { PoPageDynamicEditActions } from './interfaces/po-page-dynamic-edit-actions.interface';\r\nimport { PoPageDynamicEditBeforeCancel } from './interfaces/po-page-dynamic-edit-before-cancel.interface';\r\nimport { PoPageDynamicEditBeforeSave } from './interfaces/po-page-dynamic-edit-before-save.interface';\r\nimport { PoPageDynamicEditBeforeSaveNew } from './interfaces/po-page-dynamic-edit-before-save-new.interface';\r\n\r\ninterface ExecuteActionParameter {\r\n  action: string | Function;\r\n  id?: string | number;\r\n  resource?: any;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoPageDynamicEditActionsService {\r\n  readonly headers: HttpHeaders = new HttpHeaders({\r\n    'X-PO-SCREEN-LOCK': 'true'\r\n  });\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  beforeCancel(action: PoPageDynamicEditActions['beforeCancel']): Observable<PoPageDynamicEditBeforeCancel> {\r\n    return this.executeAction({ action });\r\n  }\r\n\r\n  beforeSave(\r\n    action: PoPageDynamicEditActions['beforeSave'],\r\n    id: string,\r\n    body: any\r\n  ): Observable<PoPageDynamicEditBeforeSave> {\r\n    const resource = body ?? {};\r\n    return this.executeAction({ action, resource, id });\r\n  }\r\n\r\n  beforeSaveNew(\r\n    action: PoPageDynamicEditActions['beforeSaveNew'],\r\n    id: string,\r\n    body: any\r\n  ): Observable<PoPageDynamicEditBeforeSaveNew> {\r\n    const resource = body ?? {};\r\n    return this.executeAction({ action, resource, id });\r\n  }\r\n\r\n  private executeAction<T>({ action, resource = {}, id }: ExecuteActionParameter): Observable<T> {\r\n    if (!action) {\r\n      return of(<T>{});\r\n    }\r\n\r\n    if (typeof action === 'string') {\r\n      const url = id ? `${action}/${id}` : action;\r\n\r\n      return this.http.post<T>(url, resource, { headers: this.headers });\r\n    }\r\n\r\n    return of(action(resource, id));\r\n  }\r\n}\r\n","<po-page-default [p-actions]=\"pageActions\" [p-breadcrumb]=\"breadcrumb\" [p-title]=\"title\">\r\n  <ng-container *ngIf=\"model; then formFieldsTemplate; else registerNotFoundTemplate\"> </ng-container>\r\n</po-page-default>\r\n\r\n<ng-template #registerNotFoundTemplate>\r\n  <po-widget>\r\n    <span class=\"po-icon po-icon-info\"></span>\r\n    <span class=\"po-font-text-large\">\r\n      {{ literals.registerNotFound }}\r\n    </span>\r\n  </po-widget>\r\n</ng-template>\r\n\r\n<ng-template #formFieldsTemplate>\r\n  <po-dynamic-form #dynamicForm [p-fields]=\"controlFields\" [p-value]=\"model\"> </po-dynamic-form>\r\n\r\n  <div *ngIf=\"detailFields.length > 0\" class=\"po-sm-12\">\r\n    <po-divider [p-label]=\"detailFields[0].divider\"></po-divider>\r\n\r\n    <div class=\"po-row po-mb-2\">\r\n      <po-button [p-label]=\"literals.detailActionNew\" (p-click)=\"detailActionNew()\"></po-button>\r\n    </div>\r\n\r\n    <po-grid\r\n      #gridDetail\r\n      [p-row-actions]=\"detailActions\"\r\n      [p-columns]=\"detailFields[0].detail.columns\"\r\n      [p-data]=\"model[detailFields[0].property]\"\r\n    >\r\n    </po-grid>\r\n  </div>\r\n</ng-template>\r\n","import { Component, Input, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Observable, concat, of, Subscription, EMPTY, throwError } from 'rxjs';\r\nimport { tap, catchError, map, switchMap } from 'rxjs/operators';\r\n\r\nimport {\r\n  PoBreadcrumb,\r\n  PoDialogService,\r\n  PoDynamicFormComponent,\r\n  PoGridComponent,\r\n  PoGridRowActions,\r\n  PoLanguageService,\r\n  PoNotificationService,\r\n  PoPageAction,\r\n  poLocaleDefault\r\n} from '@po-ui/ng-components';\r\n\r\nimport { convertToBoolean, mapObjectByProperties, valuesFromObject, removeKeysProperties } from './../../utils/util';\r\n\r\nimport { PoPageDynamicEditActions } from './interfaces/po-page-dynamic-edit-actions.interface';\r\nimport { PoPageDynamicEditField } from './interfaces/po-page-dynamic-edit-field.interface';\r\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\r\nimport { PoPageDynamicEditOptions } from './interfaces/po-page-dynamic-edit-options.interface';\r\nimport { PoPageCustomizationService } from '../../services/po-page-customization/po-page-customization.service';\r\nimport { PoPageDynamicEditMetadata } from './interfaces/po-page-dynamic-edit-metadata.interface';\r\nimport { PoPageDynamicOptionsSchema } from '../../services/po-page-customization/po-page-dynamic-options.interface';\r\nimport { PoPageDynamicEditActionsService } from './po-page-dynamic-edit-actions.service';\r\nimport { PoPageDynamicEditBeforeCancel } from './interfaces/po-page-dynamic-edit-before-cancel.interface';\r\n\r\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicEditOptions);\r\ntype SaveAction = PoPageDynamicEditActions['save'] | PoPageDynamicEditActions['saveNew'];\r\n\r\nexport const poPageDynamicEditLiteralsDefault = {\r\n  en: {\r\n    cancelConfirmMessage: 'Are you sure you want to cancel this operation?',\r\n    detailActionNew: 'New',\r\n    pageActionCancel: 'Cancel',\r\n    pageActionSave: 'Save',\r\n    pageActionSaveNew: 'Save and new',\r\n    registerNotFound: 'Register not found.',\r\n    saveNotificationSuccessSave: 'Resource successfully saved.',\r\n    saveNotificationSuccessUpdate: 'Resource successfully updated.',\r\n    saveNotificationWarning: 'Form must be filled out correctly.'\r\n  },\r\n  es: {\r\n    cancelConfirmMessage: 'Está seguro de que desea cancelar esta operación?',\r\n    detailActionNew: 'Nuevo',\r\n    pageActionCancel: 'Cancelar',\r\n    pageActionSave: 'Guardar',\r\n    pageActionSaveNew: 'Guardar y nuevo',\r\n    registerNotFound: 'Registro no encontrado.',\r\n    saveNotificationSuccessSave: 'Recurso salvo con éxito.',\r\n    saveNotificationSuccessUpdate: 'Recurso actualizado con éxito.',\r\n    saveNotificationWarning: 'El formulario debe llenarse correctamente.'\r\n  },\r\n  pt: {\r\n    cancelConfirmMessage: 'Tem certeza que deseja cancelar esta operação?',\r\n    detailActionNew: 'Novo',\r\n    pageActionCancel: 'Cancelar',\r\n    pageActionSave: 'Salvar',\r\n    pageActionSaveNew: 'Salvar e novo',\r\n    registerNotFound: 'Registro não encontrado.',\r\n    saveNotificationSuccessSave: 'Recurso salvo com sucesso.',\r\n    saveNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',\r\n    saveNotificationWarning: 'Formulário precisa ser preenchido corretamente.'\r\n  },\r\n  ru: {\r\n    cancelConfirmMessage: 'Вы уверены, что хотите отменить эту операцию?',\r\n    detailActionNew: 'Новый',\r\n    pageActionCancel: 'Отменить',\r\n    pageActionSave: 'Сохранить',\r\n    pageActionSaveNew: 'Сохранить и создать',\r\n    registerNotFound: 'Запись не найдена.',\r\n    saveNotificationSuccessSave: 'Ресурс успешно сохранен.',\r\n    saveNotificationSuccessUpdate: 'Ресурс успешно обновлен.',\r\n    saveNotificationWarning: 'Форма должна быть заполнена правильно.'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-page-dynamic-edit` é uma página que pode servir para editar ou criar novos registros,\r\n * o mesmo também suporta metadados conforme especificado na documentação.\r\n *\r\n * ### Utilização via rota\r\n *\r\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-edit` disponibiliza propriedades para\r\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:\r\n *\r\n * O componente primeiro irá carregar o metadado da rota definida na propriedade serviceMetadataApi\r\n * e depois irá buscar da rota definida na propriedade serviceLoadApi\r\n *\r\n * > Caso o servidor retornar um erro ao recuperar o metadados, será repassado o metadados salvo em cache,\r\n * se o cache não existe será disparado uma notificação.\r\n *\r\n * ```\r\n * {\r\n *   path: 'people',\r\n *   component: PoPageDynamicEditComponent,\r\n *   data: {\r\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\r\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados utilizando o método HTTP Get\r\n *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados utilizando o método HTTP Post\r\n *   }\r\n * }\r\n *\r\n * ```\r\n *\r\n * Para carregar com um recurso já existente, deve-se ser incluído um parâmetro na rota chamado `id`:\r\n *\r\n * ```\r\n * {\r\n *   path: 'people/:id',\r\n *   component: PoPageDynamicEditComponent,\r\n *   data: {\r\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\r\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados\r\n *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o\r\n * tipo do metadado esperado e a versão cacheada pelo browser.\r\n *\r\n * O formato esperado na resposta da requisição está especificado na interface\r\n * [PoPageDynamicEditMetadata](/documentation/po-page-dynamic-edit#po-page-dynamic-edit-metadata). Por exemplo:\r\n *\r\n * ```\r\n *  {\r\n *   version: 1,\r\n *   title: 'Person edit',\r\n *   fields: [\r\n *     { property: 'id', key: true, disabled: true },\r\n *     { property: 'status' },\r\n *     { property: 'name' },\r\n *     { property: 'nickname' },\r\n *     { property: 'birthdate', label: 'Birth date' },\r\n *     { property: 'genre' },\r\n *     { property: 'city' },\r\n *     { property: 'country' }\r\n *   ]\r\n * }\r\n * ```\r\n *\r\n * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:\r\n * ```\r\n * GET {end-point}/metadata?type=edit&version={version}\r\n * ```\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-dynamic-edit-basic\" title=\"PO Page Dynamic Edit Basic\">\r\n *  <file name=\"sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-dynamic-edit-user\" title=\"PO Page Dynamic Edit - User\">\r\n *  <file name=\"sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-dynamic-edit',\r\n  templateUrl: './po-page-dynamic-edit.component.html',\r\n  providers: [PoPageDynamicService]\r\n})\r\nexport class PoPageDynamicEditComponent implements OnInit, OnDestroy {\r\n  @ViewChild('dynamicForm') dynamicForm: PoDynamicFormComponent;\r\n  @ViewChild('gridDetail') gridDetail: PoGridComponent;\r\n\r\n  /** Objeto com propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Endpoint usado pelo template para requisição do recurso que será exibido para edição.\r\n   *\r\n   * Para as ações de `save` e `saveNew`, será feito uma requisição de criação nesse mesmo endpoint passando os valores\r\n   * preenchidos pelo usuário via payload.\r\n   *\r\n   * > `POST {end-point}`\r\n   *\r\n   * ```\r\n   *  <po-page-dynamic-edit\r\n   *    [p-actions]=\"{ save: '/', saveNew: 'new' }\"\r\n   *    [p-fields]=\"[ { property: 'name' }, { property: 'city' } ]\"\r\n   *    p-service=\"/api/po-samples/v1/people\"\r\n   *    ...>\r\n   *  </po-page-dynamic-edit>\r\n   * ```\r\n   *\r\n   * Resquisição disparada, onde a propriedade `name` e `city` foram preenchidas:\r\n   *\r\n   * ```\r\n   *  POST /api/po-samples/v1/people HTTP/1.1\r\n   *  Host: localhost:4000\r\n   *  Connection: keep-alive\r\n   *  Accept: application/json, text/plain\r\n   *  ...\r\n   * ```\r\n   *\r\n   * Request payload:\r\n   *\r\n   * ```\r\n   * { \"name\": \"Fulano\", \"city\": \"Smallville\" }\r\n   * ```\r\n   *\r\n   * Caso queira que o template carregue um recurso já existente, deve-se ser incluído um parametro na rota chamado `id`.\r\n   *\r\n   * Exemplo de configuração de rota:\r\n   *\r\n   * ```\r\n   *  RouterModule.forRoot([\r\n   *    ...\r\n   *    { path: 'edit/:id', component: PersonEditComponent },\r\n   *    ...\r\n   *  ],\r\n   * ```\r\n   *\r\n   * Baseado nisso, na inicialização do template, será disparado uma requisição para buscar o recurso que será editado.\r\n   *\r\n   * > `GET {end-point}/{id}`\r\n   *\r\n   * Nos métodos de `save` e `saveNew`, ao invés de um `POST`, será disparado um `PUT`.\r\n   *\r\n   * Resquisição disparada, onde a propriedade `name` e `city` foram preenchidas / atualizadas, e o `id` da url é 2:\r\n   *\r\n   * ```\r\n   *  PUT /api/po-samples/v1/people/2 HTTP/1.1\r\n   *  Host: localhost:4000\r\n   *  Connection: keep-alive\r\n   *  Accept: application/json, text/plain\r\n   *  ...\r\n   * ```\r\n   *\r\n   * Request payload:\r\n   *\r\n   * ```\r\n   * { \"name\": \"Fulano\", \"city\": \"Metropolis\" }\r\n   * ```\r\n   */\r\n  @Input('p-service-api') serviceApi: string;\r\n\r\n  /** Título da página. */\r\n  @Input('p-title') title: string;\r\n\r\n  /**\r\n   * Função ou serviço que será executado na inicialização do componente.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\r\n   * - `function`: Método que será executado.\r\n   *\r\n   * O retorno desta função deve ser do tipo `PoPageDynamicEditOptions`,\r\n   * onde o usuário poderá customizar novos campos, breadcrumb, title e actions\r\n   *\r\n   * Por exemplo:\r\n   *\r\n   * ```\r\n   * getPageOptions(): PoPageDynamicEditOptions {\r\n   * return {\r\n   *   actions:\r\n   *     { cancel: false, save: 'save/:id', saveNew: 'saveNew' },\r\n   *   fields: [\r\n   *     { property: 'idCard', gridColumns: 6 }\r\n   *   ]\r\n   * };\r\n   * }\r\n   *\r\n   * ```\r\n   * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\r\n   * ```\r\n   *  [p-load]=\"onLoadOptions.bind(this)\"\r\n   * ```\r\n   */\r\n  @Input('p-load') onLoad: string | (() => PoPageDynamicEditOptions);\r\n\r\n  literals;\r\n  model: any = {};\r\n\r\n  // beforeSave: return boolean\r\n  // afterSave\r\n  // beforeRemove: return boolean\r\n  // afterRemove\r\n  // beforeInsert: : return boolean\r\n  readonly detailActions: PoGridRowActions = {};\r\n\r\n  private subscriptions: Array<Subscription> = [];\r\n  private _actions: PoPageDynamicEditActions = {};\r\n  private _autoRouter: boolean = false;\r\n  private _controlFields: Array<any> = [];\r\n  private _detailFields: Array<any> = [];\r\n  private _duplicates: Array<any> = [];\r\n  private _fields: Array<any> = [];\r\n  private _keys: Array<any> = [];\r\n  private _pageActions: Array<PoPageAction> = [];\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ações da página.\r\n   */\r\n  @Input('p-actions') set actions(value: PoPageDynamicEditActions) {\r\n    this._actions = this.isObject(value) ? value : {};\r\n\r\n    this._pageActions = this.getPageActions(this._actions);\r\n  }\r\n\r\n  get actions() {\r\n    return { ...this._actions };\r\n  }\r\n\r\n  /**\r\n   * @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.\r\n   *\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso as ações\r\n   * estejam definidas nas ações.\r\n   *\r\n   * > Para o correto funcionamento não pode haver nenhum rota coringa (`**`) especificada.\r\n   *\r\n   * @default false\r\n   */\r\n  @Input('p-auto-router') set autoRouter(value: boolean) {\r\n    this._autoRouter = convertToBoolean(value);\r\n  }\r\n\r\n  get autoRouter(): boolean {\r\n    return this._autoRouter;\r\n  }\r\n\r\n  /** Lista dos campos usados na tabela e busca avançada. */\r\n  @Input('p-fields') set fields(value: Array<PoPageDynamicEditField>) {\r\n    this._fields = Array.isArray(value) ? [...value] : [];\r\n\r\n    this._keys = this.getKeysByFields(this._fields);\r\n    this._duplicates = this.getDuplicatesByFields(this._fields);\r\n\r\n    this._controlFields = this.getControlFields(this._fields);\r\n    this._detailFields = this.getDetailFields(this._fields);\r\n  }\r\n\r\n  get fields(): Array<PoPageDynamicEditField> {\r\n    return this._fields;\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private poNotification: PoNotificationService,\r\n    private poDialogService: PoDialogService,\r\n    private poPageDynamicService: PoPageDynamicService,\r\n    private poPageCustomizationService: PoPageCustomizationService,\r\n    private poPageDynamicEditActionsService: PoPageDynamicEditActionsService,\r\n    languageService: PoLanguageService\r\n  ) {\r\n    const language = languageService.getShortLanguage();\r\n\r\n    this.literals = {\r\n      ...poPageDynamicEditLiteralsDefault[poLocaleDefault],\r\n      ...poPageDynamicEditLiteralsDefault[language]\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadDataFromAPI();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscriptions) {\r\n      this.subscriptions.forEach(subscription => {\r\n        subscription.unsubscribe();\r\n      });\r\n    }\r\n  }\r\n\r\n  detailActionNew() {\r\n    this.gridDetail.insertRow();\r\n  }\r\n\r\n  get duplicates() {\r\n    return [...this._duplicates];\r\n  }\r\n\r\n  get keys() {\r\n    return [...this._keys];\r\n  }\r\n\r\n  get pageActions() {\r\n    return [...this._pageActions];\r\n  }\r\n\r\n  get controlFields() {\r\n    return this._controlFields;\r\n  }\r\n\r\n  get detailFields() {\r\n    return this._detailFields;\r\n  }\r\n\r\n  private loadDataFromAPI() {\r\n    const { serviceApi: serviceApiFromRoute, serviceMetadataApi, serviceLoadApi } = this.activatedRoute.snapshot.data;\r\n    const { id } = this.activatedRoute.snapshot.params;\r\n    const { duplicate } = this.activatedRoute.snapshot.queryParams;\r\n\r\n    const onLoad = serviceLoadApi || this.onLoad;\r\n    this.serviceApi = serviceApiFromRoute || this.serviceApi;\r\n\r\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\r\n\r\n    const metadata$ = this.getMetadata(serviceApiFromRoute, id, onLoad);\r\n    const data$ = this.loadData(id, duplicate);\r\n\r\n    this.subscriptions.push(concat(metadata$, data$).subscribe());\r\n  }\r\n\r\n  private cancel(\r\n    actionCancel: PoPageDynamicEditActions['cancel'],\r\n    actionBeforeCancel: PoPageDynamicEditActions['beforeCancel']\r\n  ) {\r\n    if (this.dynamicForm && this.dynamicForm.form.dirty) {\r\n      this.poDialogService.confirm({\r\n        message: this.literals.cancelConfirmMessage,\r\n        title: this.literals.pageActionCancel,\r\n        confirm: this.goBack.bind(this, actionCancel, actionBeforeCancel)\r\n      });\r\n    } else {\r\n      this.goBack(actionCancel, actionBeforeCancel);\r\n    }\r\n  }\r\n\r\n  private formatUniqueKey(item) {\r\n    const keys = mapObjectByProperties(item, this.keys);\r\n\r\n    return valuesFromObject(keys).join('|');\r\n  }\r\n\r\n  private goBack(\r\n    actionCancel: PoPageDynamicEditActions['cancel'],\r\n    actionBeforeCancel: PoPageDynamicEditActions['beforeCancel']\r\n  ) {\r\n    this.subscriptions.push(\r\n      this.poPageDynamicEditActionsService\r\n        .beforeCancel(actionBeforeCancel)\r\n        .subscribe((beforeCancelResult: PoPageDynamicEditBeforeCancel) => {\r\n          this.executeBackAction(actionCancel, beforeCancelResult?.allowAction, beforeCancelResult?.newUrl);\r\n        })\r\n    );\r\n  }\r\n\r\n  private executeBackAction(\r\n    actionCancel: PoPageDynamicEditActions['cancel'],\r\n    allowAction?: PoPageDynamicEditBeforeCancel['allowAction'],\r\n    newUrl?: PoPageDynamicEditBeforeCancel['newUrl']\r\n  ) {\r\n    const isAllowedAction = typeof allowAction === 'boolean' ? allowAction : true;\r\n\r\n    if (isAllowedAction) {\r\n      if (actionCancel === undefined || typeof actionCancel === 'boolean') {\r\n        return window.history.back();\r\n      }\r\n\r\n      if (typeof actionCancel === 'string' || newUrl) {\r\n        return this.router.navigate([newUrl || actionCancel]);\r\n      }\r\n\r\n      return actionCancel();\r\n    }\r\n  }\r\n\r\n  private loadData(id, duplicate?) {\r\n    if (!id) {\r\n      try {\r\n        this.model = duplicate ? JSON.parse(duplicate) : {};\r\n      } catch {\r\n        this.model = {};\r\n      }\r\n\r\n      return EMPTY;\r\n    }\r\n\r\n    return this.poPageDynamicService.getResource(id).pipe(\r\n      tap(response => (this.model = response)),\r\n      catchError(error => {\r\n        this.model = undefined;\r\n        this.actions = undefined;\r\n        this._pageActions = [];\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\r\n    if (onLoad) {\r\n      return this.getPoDynamicPageOptions(onLoad).pipe(\r\n        tap(responsePoOption =>\r\n          this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption)\r\n        )\r\n      );\r\n    }\r\n\r\n    return EMPTY;\r\n  }\r\n\r\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicEditOptions> {\r\n    const originalOption: PoPageDynamicEditOptions = {\r\n      fields: this.fields,\r\n      actions: this.actions,\r\n      breadcrumb: this.breadcrumb,\r\n      title: this.title\r\n    };\r\n\r\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicEditOptions> = {\r\n      schema: [\r\n        {\r\n          nameProp: 'fields',\r\n          merge: true,\r\n          keyForMerge: 'property'\r\n        },\r\n        {\r\n          nameProp: 'actions',\r\n          merge: true\r\n        },\r\n        {\r\n          nameProp: 'breadcrumb'\r\n        },\r\n        {\r\n          nameProp: 'title'\r\n        }\r\n      ]\r\n    };\r\n\r\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\r\n  }\r\n\r\n  private getMetadata(serviceApiFromRoute: string, paramId: string | number, onLoad: UrlOrPoCustomizationFunction) {\r\n    const typeMetadata = paramId ? 'edit' : 'create';\r\n\r\n    if (serviceApiFromRoute) {\r\n      return this.poPageDynamicService.getMetadata<PoPageDynamicEditMetadata>(typeMetadata).pipe(\r\n        tap(response => {\r\n          this.autoRouter = response.autoRouter || this.autoRouter;\r\n          this.actions = response.actions || this.actions;\r\n          this.breadcrumb = response.breadcrumb || this.breadcrumb;\r\n          this.fields = response.fields || this.fields;\r\n          this.title = response.title || this.title;\r\n        }),\r\n        switchMap(() => this.loadOptionsOnInitialize(onLoad))\r\n      );\r\n    }\r\n\r\n    return this.loadOptionsOnInitialize(onLoad);\r\n  }\r\n\r\n  private navigateTo(path: string) {\r\n    if (path) {\r\n      const url = this.resolveUrl(this.model, path);\r\n\r\n      this.router.navigate([url]);\r\n    } else {\r\n      window.history.back();\r\n    }\r\n  }\r\n\r\n  private resolveUniqueKey(item: any) {\r\n    return this.activatedRoute.snapshot.params['id'] ? this.formatUniqueKey(item) : undefined;\r\n  }\r\n\r\n  private resolveUrl(item: any, path: string) {\r\n    const uniqueKey = this.formatUniqueKey(item);\r\n\r\n    return path.replace(/:id/g, uniqueKey);\r\n  }\r\n\r\n  private executeSave(saveRedirectPath: string) {\r\n    const saveOperation$ = this.saveOperation();\r\n\r\n    return saveOperation$.pipe(\r\n      tap(message => {\r\n        this.poNotification.success(message);\r\n        this.navigateTo(saveRedirectPath);\r\n      })\r\n    );\r\n  }\r\n\r\n  private updateModel(newResource: any = {}) {\r\n    const dynamicNgForm = this.dynamicForm.form;\r\n\r\n    removeKeysProperties(this.keys, newResource);\r\n\r\n    this.model = { ...this.model, ...newResource };\r\n\r\n    dynamicNgForm.form.patchValue(this.model);\r\n  }\r\n\r\n  private saveOperation() {\r\n    if (this.dynamicForm.form.invalid) {\r\n      this.poNotification.warning(this.literals.saveNotificationWarning);\r\n      return EMPTY;\r\n    }\r\n\r\n    const paramId = this.activatedRoute.snapshot.params['id'];\r\n    const successMsg = paramId\r\n      ? this.literals.saveNotificationSuccessUpdate\r\n      : this.literals.saveNotificationSuccessSave;\r\n\r\n    const saveOperation$ = paramId\r\n      ? this.poPageDynamicService.updateResource(paramId, this.model)\r\n      : this.poPageDynamicService.createResource(this.model);\r\n\r\n    return saveOperation$.pipe(map(() => successMsg));\r\n  }\r\n\r\n  private save(action: SaveAction, before: 'beforeSave' | 'beforeSaveNew' = 'beforeSave') {\r\n    const executeOperation = {\r\n      beforeSave: this.executeSave.bind(this),\r\n      beforeSaveNew: this.executeSaveNew.bind(this)\r\n    };\r\n\r\n    const uniqueKey = this.resolveUniqueKey(this.model);\r\n\r\n    this.subscriptions.push(\r\n      this.poPageDynamicEditActionsService[before](this.actions[before], uniqueKey, { ...this.model })\r\n        .pipe(\r\n          switchMap(returnBefore => {\r\n            const newAction = returnBefore?.newUrl ?? action;\r\n            const allowAction = returnBefore?.allowAction ?? true;\r\n\r\n            this.updateModel(returnBefore?.resource);\r\n\r\n            if (!allowAction) {\r\n              return of({});\r\n            }\r\n\r\n            if (typeof newAction === 'string') {\r\n              return executeOperation[before](newAction);\r\n            } else {\r\n              newAction({ ...this.model }, uniqueKey);\r\n              return EMPTY;\r\n            }\r\n          })\r\n        )\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private executeSaveNew(path: string) {\r\n    const paramId = this.activatedRoute.snapshot.params['id'];\r\n    const saveOperation$ = this.saveOperation();\r\n\r\n    return saveOperation$.pipe(\r\n      tap(message => {\r\n        if (paramId) {\r\n          this.poNotification.success(message);\r\n\r\n          this.navigateTo(path);\r\n        } else {\r\n          this.poNotification.success(message);\r\n\r\n          this.model = {};\r\n          this.dynamicForm.form.reset();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private getKeysByFields(fields: Array<any> = []) {\r\n    return fields.filter(field => field.key === true).map(field => field.property);\r\n  }\r\n\r\n  private getControlFields(fields: Array<any> = []) {\r\n    return fields.filter(field => field.type !== 'detail');\r\n  }\r\n\r\n  private getDetailFields(fields: Array<any> = []) {\r\n    return fields.filter(field => field.type === 'detail');\r\n  }\r\n\r\n  private getDuplicatesByFields(fields: Array<any> = []) {\r\n    return fields.filter(field => field.duplicate === true).map(field => field.property);\r\n  }\r\n\r\n  private getPageActions(actions: PoPageDynamicEditActions = {}): Array<PoPageAction> {\r\n    const pageActions = [{ label: this.literals.pageActionSave, action: this.save.bind(this, actions.save) }];\r\n\r\n    if (actions.saveNew) {\r\n      pageActions.push({\r\n        label: this.literals.pageActionSaveNew,\r\n        action: this.save.bind(this, actions.saveNew, 'beforeSaveNew')\r\n      });\r\n    }\r\n\r\n    if (actions.cancel === undefined || actions.cancel) {\r\n      pageActions.push({\r\n        label: this.literals.pageActionCancel,\r\n        action: this.cancel.bind(this, actions.cancel, this.actions.beforeCancel)\r\n      });\r\n    }\r\n\r\n    return pageActions;\r\n  }\r\n\r\n  private isObject(value: any): boolean {\r\n    return !!value && typeof value === 'object' && !Array.isArray(value);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport {\r\n  PoButtonModule,\r\n  PoDividerModule,\r\n  PoDynamicModule,\r\n  PoGridModule,\r\n  PoPageModule,\r\n  PoWidgetModule\r\n} from '@po-ui/ng-components';\r\n\r\nimport { PoPageDynamicEditComponent } from './po-page-dynamic-edit.component';\r\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do template do po-page-dynamic-detail.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n\r\n    PoButtonModule,\r\n    PoDividerModule,\r\n    PoDynamicModule,\r\n    PoGridModule,\r\n    PoPageModule,\r\n    PoWidgetModule,\r\n    PoPageDynamicModule\r\n  ],\r\n  declarations: [PoPageDynamicEditComponent],\r\n  exports: [PoPageDynamicEditComponent]\r\n})\r\nexport class PoPageDynamicEditModule {}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoPageCustomizationService } from './po-page-customization.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do serviço do po-page-customization-service.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule],\r\n  providers: [PoPageCustomizationService]\r\n})\r\nexport class PoPageCustomizationModule {}\r\n","import { EventEmitter, Input, Output, ViewChild, Directive } from '@angular/core';\r\n\r\nimport {\r\n  InputBoolean,\r\n  PoDynamicFormField,\r\n  PoLanguageService,\r\n  PoModalAction,\r\n  PoModalComponent,\r\n  poLocaleDefault,\r\n  PoComboOption\r\n} from '@po-ui/ng-components';\r\n\r\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter-literals.interface';\r\nimport { PoPageDynamicSearchFilters } from '../po-page-dynamic-search-filters.interface';\r\n\r\nexport const poAdvancedFiltersLiteralsDefault = {\r\n  en: <PoAdvancedFilterLiterals>{\r\n    title: 'Advanced search',\r\n    cancelLabel: 'Cancel',\r\n    confirmLabel: 'Apply filters'\r\n  },\r\n  es: <PoAdvancedFilterLiterals>{\r\n    title: 'Búsqueda avanzada',\r\n    cancelLabel: 'Cancelar',\r\n    confirmLabel: 'Aplicar filtros'\r\n  },\r\n  pt: <PoAdvancedFilterLiterals>{\r\n    title: 'Busca avançada',\r\n    cancelLabel: 'Cancelar',\r\n    confirmLabel: 'Aplicar filtros'\r\n  },\r\n  ru: <PoAdvancedFilterLiterals>{\r\n    title: 'Расширенный поиск',\r\n    cancelLabel: 'отменить',\r\n    confirmLabel: 'Применить фильтры'\r\n  }\r\n};\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Filtro de busca avançada criado a partir de um formulário dinâmico.\r\n * Componente de uso interno.\r\n */\r\n@Directive()\r\nexport class PoAdvancedFilterBaseComponent {\r\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\r\n\r\n  /**\r\n   * Mantém na modal de busca avançada os valores preenchidos do último filtro realizado pelo usuário.\r\n   */\r\n  @InputBoolean()\r\n  @Input('p-keep-filters')\r\n  keepFilters: boolean = false;\r\n\r\n  /** Função que será disparada e receberá os valores do formulário ao ser clicado no botão buscar. */\r\n  @Output('p-search-event') searchEvent = new EventEmitter<any>();\r\n\r\n  filter = {};\r\n  language: string = poLocaleDefault;\r\n\r\n  primaryAction: PoModalAction = {\r\n    action: () => {\r\n      const models = this.getValuesFromForm();\r\n\r\n      this.searchEvent.emit(models);\r\n      this.poModal.close();\r\n    },\r\n    label: this.literals.confirmLabel\r\n  };\r\n\r\n  secondaryAction: PoModalAction = {\r\n    action: () => {\r\n      this.poModal.close();\r\n    },\r\n    label: this.literals.cancelLabel\r\n  };\r\n\r\n  protected optionsServiceChosenOptions: Array<PoComboOption> = [];\r\n\r\n  private _filters: Array<PoDynamicFormField> = [];\r\n  private _literals: PoAdvancedFilterLiterals;\r\n\r\n  /**\r\n   * Coleção de objetos que implementam a interface PoPageDynamicSearchFilters, para definição dos campos que serão criados\r\n   * dinamicamente.\r\n   */\r\n  @Input('p-filters') set filters(filters: Array<PoPageDynamicSearchFilters>) {\r\n    this._filters = Array.isArray(filters) ? [...filters] : [];\r\n  }\r\n\r\n  get filters(): Array<PoPageDynamicSearchFilters> {\r\n    return this._filters;\r\n  }\r\n\r\n  /** Objeto com as literais usadas no `po-advanced-filter`. */\r\n  @Input('p-literals') set literals(value: PoAdvancedFilterLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poAdvancedFiltersLiteralsDefault[poLocaleDefault],\r\n        ...poAdvancedFiltersLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poAdvancedFiltersLiteralsDefault[this.language];\r\n    }\r\n\r\n    this.primaryAction.label = this.literals.confirmLabel;\r\n    this.secondaryAction.label = this.literals.cancelLabel;\r\n  }\r\n\r\n  get literals() {\r\n    return this._literals || poAdvancedFiltersLiteralsDefault[this.language];\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  // Retorna os models dos campos preenchidos\r\n  private getValuesFromForm() {\r\n    let optionServiceOptions: Array<PoComboOption>;\r\n\r\n    Object.keys(this.filter).forEach(property => {\r\n      if (this.filter[property] === undefined || this.filter[property] === '') {\r\n        delete this.filter[property];\r\n      }\r\n    });\r\n\r\n    if (this.optionsServiceChosenOptions.length) {\r\n      optionServiceOptions = this.optionsServiceChosenOptions.filter((optionItem: PoComboOption) =>\r\n        Object.values(this.filter).includes(optionItem.value)\r\n      );\r\n    }\r\n\r\n    return { filter: this.filter, optionsService: optionServiceOptions };\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PoComboOption, PoDynamicFormComponent, PoLanguageService } from '@po-ui/ng-components';\r\n\r\nimport { PoAdvancedFilterBaseComponent } from './po-advanced-filter-base.component';\r\nimport { PoPageDynamicSearchFilters } from '../po-page-dynamic-search-filters.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @docsExtends PoAdvancedFilterBaseComponent\r\n *\r\n * @examplePrivate\r\n *\r\n * <example-private name=\"po-advanced-filter\" title=\"PO Busca Avançada\">\r\n *   <file name=\"sample-po-advanced-filter.component.html\"> </file>\r\n *   <file name=\"sample-po-advanced-filter.component.ts\"> </file>\r\n * </example-private>\r\n */\r\n@Component({\r\n  selector: 'po-advanced-filter',\r\n  templateUrl: './po-advanced-filter.component.html'\r\n})\r\nexport class PoAdvancedFilterComponent extends PoAdvancedFilterBaseComponent implements OnDestroy, OnInit {\r\n  @ViewChild(PoDynamicFormComponent, { static: true }) poDynamicForm: PoDynamicFormComponent;\r\n\r\n  private subscription = new Subscription();\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    super(languageService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.optionsServiceSubscribe();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  open() {\r\n    this.filter = this.keepFilters ? this.getInitialValuesFromFilter(this.filters) : {};\r\n\r\n    this.poModal.open();\r\n  }\r\n\r\n  private getOptionsServiceItem(optionServiceObject: PoComboOption) {\r\n    const objectItem = this.optionsServiceChosenOptions.map(option => option.value).indexOf(optionServiceObject.value);\r\n\r\n    if (objectItem === -1) {\r\n      this.optionsServiceChosenOptions = [...this.optionsServiceChosenOptions, optionServiceObject];\r\n    }\r\n  }\r\n\r\n  private getInitialValuesFromFilter(filters: Array<PoPageDynamicSearchFilters>) {\r\n    return filters.reduce((result, item) => Object.assign(result, { [item.property]: item.initValue }), {});\r\n  }\r\n\r\n  // Se inscreve para receber valores referentes a campos do tipo combo.\r\n  private optionsServiceSubscribe() {\r\n    this.subscription.add(\r\n      this.poDynamicForm.getObjectValue().subscribe(optionServiceObject => {\r\n        if (optionServiceObject) {\r\n          this.getOptionsServiceItem(optionServiceObject);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","<po-modal\r\n  p-hide-close\r\n  [p-primary-action]=\"primaryAction\"\r\n  [p-secondary-action]=\"secondaryAction\"\r\n  [p-title]=\"literals.title\"\r\n>\r\n  <po-dynamic-form [p-fields]=\"filters\" [p-value]=\"filter\"> </po-dynamic-form>\r\n</po-modal>\r\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport {\r\n  InputBoolean,\r\n  PoBreadcrumb,\r\n  PoDynamicFormField,\r\n  PoLanguageService,\r\n  PoPageAction,\r\n  poLocaleDefault\r\n} from '@po-ui/ng-components';\r\n\r\nimport { convertToInt } from '../../utils/util';\r\n\r\nimport { PoPageDynamicSearchLiterals } from './po-page-dynamic-search-literals.interface';\r\nimport { poAdvancedFiltersLiteralsDefault } from './po-advanced-filter/po-advanced-filter-base.component';\r\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter/po-advanced-filter-literals.interface';\r\nimport { PoPageDynamicSearchOptions } from './po-page-dynamic-search-options.interface';\r\nimport { PoPageDynamicSearchFilters } from './po-page-dynamic-search-filters.interface';\r\n\r\nexport const poPageDynamicSearchLiteralsDefault = {\r\n  en: <PoPageDynamicSearchLiterals>{\r\n    disclaimerGroupTitle: 'Displaying results filtered by:',\r\n    filterTitle: poAdvancedFiltersLiteralsDefault.en.title,\r\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.en.cancelLabel,\r\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.en.confirmLabel,\r\n    quickSearchLabel: 'Quick search:',\r\n    searchPlaceholder: 'Search'\r\n  },\r\n  es: <PoPageDynamicSearchLiterals>{\r\n    disclaimerGroupTitle: 'Presentando resultados filtrados por:',\r\n    filterTitle: poAdvancedFiltersLiteralsDefault.es.title,\r\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.es.cancelLabel,\r\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.es.confirmLabel,\r\n    quickSearchLabel: 'Búsqueda rápida:',\r\n    searchPlaceholder: 'Buscar'\r\n  },\r\n  pt: <PoPageDynamicSearchLiterals>{\r\n    disclaimerGroupTitle: 'Apresentando resultados filtrados por:',\r\n    filterTitle: poAdvancedFiltersLiteralsDefault.pt.title,\r\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.pt.cancelLabel,\r\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.pt.confirmLabel,\r\n    quickSearchLabel: 'Pesquisa rápida:',\r\n    searchPlaceholder: 'Pesquisar'\r\n  },\r\n  ru: <PoPageDynamicSearchLiterals>{\r\n    disclaimerGroupTitle: 'Отображение результатов, отфильтрованных по:',\r\n    filterTitle: poAdvancedFiltersLiteralsDefault.ru.title,\r\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.ru.cancelLabel,\r\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.ru.confirmLabel,\r\n    quickSearchLabel: 'Быстрый поиск:',\r\n    searchPlaceholder: 'исследование'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * Componente com as ações de pesquisa já definidas, bastando que o desenvolvedor implemente apenas a chamada para as APIs\r\n * e exiba as informações.\r\n */\r\n@Directive()\r\nexport abstract class PoPageDynamicSearchBaseComponent {\r\n  /** Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`. */\r\n  @Input('p-actions') actions?: Array<PoPageAction> = [];\r\n\r\n  /** Objeto com propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Mantém na busca avançada os valores preenchidos do último filtro realizado pelo usuário.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @InputBoolean()\r\n  @Input('p-keep-filters')\r\n  keepFilters: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Permite a utilização da pesquisa rápida junto com a pesquisa avançada.\r\n   *\r\n   * Desta forma, ao ter uma pesquisa avançada estabelecida e ser\r\n   * preenchido a pesquisa rápida, o filtro será concatenado adicionando a pesquisa\r\n   * rápida também na lista de `disclaimers`.\r\n   *\r\n   * > Os valores que são emitidos no `p-quick-search` e no `p-advanced-search`\r\n   * permanecem separados durante a emissão dos valores alterados. A concatenação\r\n   * é apenas nos `disclaimers`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @InputBoolean()\r\n  @Input('p-concat-filters')\r\n  concatFilters: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Oculta o botão para remover todos os *disclaimers* do grupo.\r\n   *\r\n   * > Por padrão, o mesmo é exibido à partir de dois ou mais *disclaimers* com a opção `hideClose` habilitada.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @InputBoolean()\r\n  @Input('p-hide-remove-all-disclaimer')\r\n  hideRemoveAllDisclaimer?: boolean = false;\r\n\r\n  /**\r\n   * Função ou serviço que será executado na inicialização do componente.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\r\n   * - `function`: Método que será executado.\r\n   *\r\n   * O retorno desta função deve ser do tipo `PoPageDynamicSearchOptions`,\r\n   * onde o usuário poderá customizar novos filtros, breadcrumb, title e actions\r\n   *\r\n   * Por exemplo:\r\n   *\r\n   * ```\r\n   * getPageOptions(): PoPageDynamicSearchOptions {\r\n   * return {\r\n   *   actions: [\r\n   *     { label: 'Find on Google' },\r\n   *   ],\r\n   *   filters: [\r\n   *     { property: 'idCard', gridColumns: 6 }\r\n   *   ]\r\n   * };\r\n   * }\r\n   *\r\n   * ```\r\n   * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\r\n   * ```\r\n   *  [p-load]=\"onLoadOptions.bind(this)\"\r\n   * ```\r\n   */\r\n  @Input('p-load') onLoad: string | (() => PoPageDynamicSearchOptions);\r\n\r\n  /** Título da página. */\r\n  @Input('p-title') title: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao executar a pesquisa avançada, o mesmo irá repassar um objeto com os valores preenchidos no modal de pesquisa.\r\n   *\r\n   * > Campos não preenchidos não irão aparecer no objeto passado por parâmetro.\r\n   */\r\n  @Output('p-advanced-search') advancedSearch: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao remover um ou todos os disclaimers pelo usuário.\r\n   */\r\n  @Output('p-change-disclaimers') changeDisclaimers: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao realizar uma busca pelo campo de pesquisa rápida, o mesmo será chamado repassando o valor digitado.\r\n   */\r\n  @Output('p-quick-search') quickSearch: EventEmitter<string> = new EventEmitter();\r\n\r\n  advancedFilterLiterals: PoAdvancedFilterLiterals;\r\n\r\n  private _filters: Array<PoDynamicFormField> = [];\r\n  private _hideCloseDisclaimers: Array<string> = [];\r\n  private _literals: PoPageDynamicSearchLiterals;\r\n  private _quickSearchWidth: number;\r\n\r\n  private previousFilters: Array<PoDynamicFormField>;\r\n  private language: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-page-dynamic-search`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageDynamicSearchLiterals = {\r\n   *    disclaimerGroupTitle: 'Filtros aplicados:',\r\n   *    filterTitle: 'Filtro avançado',\r\n   *    filterCancelLabel: 'Fechar',\r\n   *    filterConfirmLabel: 'Aplicar',\r\n   *    quickSearchLabel: 'Valor pesquisado:',\r\n   *    searchPlaceholder: 'Pesquise aqui'\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageDynamicSearchLiterals = {\r\n   *    filterTitle: 'Filtro avançado'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-page-dynamic-search\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-page-dynamic-search>\r\n   * ```\r\n   *\r\n   * > O valor padrão será traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\r\n   */\r\n  @Input('p-literals') set literals(value: PoPageDynamicSearchLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poPageDynamicSearchLiteralsDefault[poLocaleDefault],\r\n        ...poPageDynamicSearchLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poPageDynamicSearchLiteralsDefault[this.language];\r\n    }\r\n\r\n    this.setAdvancedFilterLiterals(this.literals);\r\n  }\r\n\r\n  get literals() {\r\n    return this._literals || poPageDynamicSearchLiteralsDefault[this.language];\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista dos campos usados na busca avançada. Caso o mesmo não seja passado a busca avançada não será exibida.\r\n   */\r\n  @Input('p-filters') set filters(filters: Array<PoPageDynamicSearchFilters>) {\r\n    this._filters = Array.isArray(filters) ? [...filters] : [];\r\n\r\n    if (this.stringify(this._filters) !== this.stringify(this.previousFilters)) {\r\n      this.onChangeFilters(this.filters);\r\n\r\n      this.previousFilters = [...this._filters];\r\n    }\r\n  }\r\n\r\n  get filters(): Array<PoPageDynamicSearchFilters> {\r\n    return this._filters;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Largura do campo de busca, utilizando o *Grid System*,\r\n   * e limitado ao máximo de 6 colunas. O tamanho mínimo é controlado\r\n   * conforme resolução de tela para manter a consistência do layout.\r\n   */\r\n  @Input('p-quick-search-width') set quickSearchWidth(value: number) {\r\n    this._quickSearchWidth = convertToInt(value);\r\n  }\r\n\r\n  get quickSearchWidth(): number {\r\n    return this._quickSearchWidth;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista de filtros que terão a opção de fechar ocultada\r\n   * em seu respectivo disclaimer. Utilizar o atributo `property` do filtro.\r\n   *\r\n   * Exemplo de utilização:\r\n   * ```\r\n   * ['city','name'];\r\n   * ```\r\n   */\r\n  @Input('p-hide-close-disclaimers') set hideCloseDisclaimers(value: Array<string>) {\r\n    this._hideCloseDisclaimers = Array.isArray(value) ? value : [];\r\n  }\r\n\r\n  get hideCloseDisclaimers(): Array<string> {\r\n    return this._hideCloseDisclaimers;\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  protected setAdvancedFilterLiterals(literals: PoPageDynamicSearchLiterals) {\r\n    this.advancedFilterLiterals = {\r\n      cancelLabel: literals.filterCancelLabel,\r\n      confirmLabel: literals.filterConfirmLabel,\r\n      title: literals.filterTitle\r\n    };\r\n  }\r\n\r\n  private stringify(columns: Array<PoPageDynamicSearchFilters>) {\r\n    // não faz o stringify da propriedade searchService, pois pode conter objeto complexo e disparar um erro.\r\n    return JSON.stringify(columns, (key, value) => {\r\n      if (key !== 'searchService') {\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  abstract onChangeFilters(filters: Array<PoPageDynamicSearchFilters>);\r\n}\r\n","import { Component, ViewChild, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport {\r\n  PoDisclaimerGroup,\r\n  PoDynamicFieldType,\r\n  PoDynamicFormField,\r\n  PoLanguageService,\r\n  PoPageFilter,\r\n  PoDisclaimerGroupRemoveAction,\r\n  PoComboOption\r\n} from '@po-ui/ng-components';\r\n\r\nimport { capitalizeFirstLetter, getBrowserLanguage } from '../../utils/util';\r\nimport { PoPageCustomizationService } from '../../services/po-page-customization/po-page-customization.service';\r\n\r\nimport { PoAdvancedFilterComponent } from './po-advanced-filter/po-advanced-filter.component';\r\nimport { PoPageDynamicSearchBaseComponent } from './po-page-dynamic-search-base.component';\r\nimport { PoPageDynamicSearchOptions } from './po-page-dynamic-search-options.interface';\r\nimport { PoPageDynamicOptionsSchema } from '../../services';\r\nimport { PoPageDynamicSearchFilters } from './po-page-dynamic-search-filters.interface';\r\n\r\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicSearchOptions);\r\n\r\n/**\r\n * @docsExtends PoPageDynamicSearchBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-dynamic-search-basic\" title=\"PO Page Dynamic Search Basic\">\r\n *  <file name=\"sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-dynamic-search-hiring-processes\" title=\"PO Page Dynamic Search - Hiring processes\">\r\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.ts\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.service.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-dynamic-search',\r\n  templateUrl: './po-page-dynamic-search.component.html'\r\n})\r\nexport class PoPageDynamicSearchComponent extends PoPageDynamicSearchBaseComponent implements OnInit, OnDestroy {\r\n  @ViewChild(PoAdvancedFilterComponent, { static: true }) poAdvancedFilter: PoAdvancedFilterComponent;\r\n\r\n  private loadSubscription: Subscription;\r\n\r\n  private readonly _disclaimerGroup: PoDisclaimerGroup = {\r\n    remove: this.onRemoveDisclaimer.bind(this),\r\n    removeAll: this.onRemoveAllDisclaimers.bind(this),\r\n    disclaimers: [],\r\n    title: this.literals.disclaimerGroupTitle,\r\n    hideRemoveAll: this.hideRemoveAllDisclaimer\r\n  };\r\n\r\n  private readonly _filterSettings: PoPageFilter = {\r\n    action: this.onAction.bind(this),\r\n    advancedAction: this.onAdvancedAction.bind(this),\r\n    placeholder: this.literals.searchPlaceholder,\r\n    width: this.quickSearchWidth\r\n  };\r\n\r\n  constructor(\r\n    languageService: PoLanguageService,\r\n    private poPageCustomizationService: PoPageCustomizationService,\r\n    private changeDetector: ChangeDetectorRef\r\n  ) {\r\n    super(languageService);\r\n  }\r\n\r\n  get disclaimerGroup() {\r\n    return Object.assign({}, this._disclaimerGroup, {\r\n      title: this.literals.disclaimerGroupTitle,\r\n      hideRemoveAll: this.hideRemoveAllDisclaimer\r\n    });\r\n  }\r\n\r\n  get filterSettings() {\r\n    const thereAreValidFilters =\r\n      this.filters.length > 0 && this.filters.some(filter => filter.visible === true || filter.visible === undefined);\r\n    this._filterSettings.advancedAction = thereAreValidFilters ? this.onAdvancedAction.bind(this) : undefined;\r\n\r\n    return Object.assign({}, this._filterSettings, {\r\n      placeholder: this.literals.searchPlaceholder,\r\n      width: this.quickSearchWidth\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setAdvancedFilterLiterals(this.literals);\r\n    if (this.onLoad) {\r\n      this.loadOptionsOnInitialize(this.onLoad);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.loadSubscription) {\r\n      this.loadSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onChangeFilters(filters: Array<PoPageDynamicSearchFilters>) {\r\n    const filterObjectWithValue = filters\r\n      .filter(filter => filter.initValue)\r\n      .reduce((prev, current) => ({ ...prev, ...{ [current.property]: current.initValue } }), {});\r\n\r\n    if (Object.keys(filterObjectWithValue).length) {\r\n      this.onAdvancedSearch({ filter: filterObjectWithValue });\r\n    }\r\n  }\r\n\r\n  onAction(quickFilter: string) {\r\n    const disclaimerQuickSearchUpdated = {\r\n      property: 'search',\r\n      label: `${this.literals.quickSearchLabel} ${quickFilter}`,\r\n      value: quickFilter,\r\n      hideClose: this.hideCloseDisclaimers.some(hideCloseDisclaimer => hideCloseDisclaimer === 'search') || false\r\n    };\r\n\r\n    const getDisclaimersWithConcatFilters = () => [\r\n      ...this.getDisclaimersWithoutQuickSearch(),\r\n      disclaimerQuickSearchUpdated\r\n    ];\r\n\r\n    this._disclaimerGroup.disclaimers = this.concatFilters\r\n      ? getDisclaimersWithConcatFilters()\r\n      : [disclaimerQuickSearchUpdated];\r\n\r\n    if (this.quickSearch.observers && this.quickSearch.observers.length > 0) {\r\n      this.quickSearch.emit(quickFilter);\r\n    }\r\n\r\n    if (this.keepFilters && !this.concatFilters) {\r\n      this.filters.forEach(element => delete element.initValue);\r\n    }\r\n\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  onAdvancedAction() {\r\n    this.poAdvancedFilter.open();\r\n  }\r\n\r\n  onAdvancedSearch(filteredItems) {\r\n    const { filter, optionsService } = filteredItems;\r\n\r\n    this._disclaimerGroup.disclaimers = this.setDisclaimers(filter, optionsService);\r\n\r\n    this.setFilters(filter);\r\n\r\n    this.advancedSearch.emit(filter);\r\n  }\r\n\r\n  private getDisclaimersWithoutQuickSearch() {\r\n    const quickSearchProperty = 'search';\r\n    return this._disclaimerGroup.disclaimers.filter(item => item.property !== quickSearchProperty);\r\n  }\r\n\r\n  private setFilters(filters) {\r\n    const formattedFilters = this.convertToFilters(filters);\r\n\r\n    this.filters.forEach(element => {\r\n      const compatibleObject = formattedFilters.find(item => item.property === element.property);\r\n\r\n      if (compatibleObject) {\r\n        element.initValue = compatibleObject.value;\r\n      } else {\r\n        delete element.initValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private convertToFilters(filters) {\r\n    return Object.entries(filters).map(([property, value]) => ({ property, value }));\r\n  }\r\n\r\n  private optionsServiceDisclaimerLabel(value: any, optionsServiceObjectsList: Array<PoComboOption>) {\r\n    const optionServiceMatch = optionsServiceObjectsList.find(option => option.value === value);\r\n\r\n    return optionServiceMatch.label || optionServiceMatch.value;\r\n  }\r\n\r\n  private applyDisclaimerLabelValue(field: any, filterValue: any) {\r\n    const values = Array.isArray(filterValue) ? filterValue : [filterValue];\r\n\r\n    const labels = values.map(value => {\r\n      const filteredField = field.options.find(option => option.value === value || option === value);\r\n\r\n      if (filteredField) {\r\n        return filteredField.label || filteredField.value || filteredField;\r\n      }\r\n    });\r\n\r\n    return labels.join(', ');\r\n  }\r\n\r\n  private formatDate(date: string) {\r\n    const year = parseInt(date.substr(0, 4), 10);\r\n    const month = parseInt(date.substr(5, 2), 10);\r\n    const day = parseInt(date.substr(8, 2), 10);\r\n\r\n    return new Date(year, month - 1, day).toLocaleDateString(getBrowserLanguage());\r\n  }\r\n\r\n  private formatArrayToObjectKeyValue(\r\n    filters: Array<{ property: string; value?: any; initValue?: any }>\r\n  ): { [key: string]: any } {\r\n    const formattedObject = filters.reduce(\r\n      (result, item) => Object.assign(result, { [item.property]: item.value || item.initValue }),\r\n      {}\r\n    );\r\n\r\n    Object.keys(formattedObject).forEach(key => {\r\n      if (!formattedObject[key]) {\r\n        delete formattedObject[key];\r\n      }\r\n    });\r\n\r\n    return formattedObject;\r\n  }\r\n\r\n  private getFieldByProperty(fields: Array<PoDynamicFormField>, fieldName: string) {\r\n    return fields.find((field: PoDynamicFormField) => field.property === fieldName);\r\n  }\r\n\r\n  private getFilterValueToDisclaimer(field: any, value: any, optionsServiceObjectsList?: Array<PoComboOption>) {\r\n    if (field.optionsService && optionsServiceObjectsList) {\r\n      return this.optionsServiceDisclaimerLabel(value, optionsServiceObjectsList);\r\n    }\r\n\r\n    if (field.type === PoDynamicFieldType.Date) {\r\n      return field.range ? this.formatDate(value.start) + ' - ' + this.formatDate(value.end) : this.formatDate(value);\r\n    }\r\n\r\n    if (field.options && value) {\r\n      return this.applyDisclaimerLabelValue(field, value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  private onRemoveDisclaimer(removeData: PoDisclaimerGroupRemoveAction) {\r\n    const { currentDisclaimers } = removeData;\r\n\r\n    this.emitChangesDisclaimers(currentDisclaimers);\r\n  }\r\n\r\n  private emitChangesDisclaimers(currentDisclaimers: any) {\r\n    this.changeDisclaimers.emit(currentDisclaimers);\r\n    this.setFilters(this.formatArrayToObjectKeyValue(currentDisclaimers));\r\n  }\r\n\r\n  private onRemoveAllDisclaimers() {\r\n    this.emitChangesDisclaimers([]);\r\n  }\r\n\r\n  private setDisclaimers(filters, optionsServiceObjects?: Array<PoComboOption>) {\r\n    const disclaimers = [];\r\n    const properties = Object.keys(filters);\r\n\r\n    properties.forEach(property => {\r\n      const field = this.getFieldByProperty(this.filters, property);\r\n      const label = field.label || capitalizeFirstLetter(field.property);\r\n      const value = filters[property];\r\n      const hideClose =\r\n        this.hideCloseDisclaimers.some(hideCloseDisclaimer => hideCloseDisclaimer === property) || false;\r\n\r\n      const valueDisplayedOnTheDisclaimerLabel = this.getFilterValueToDisclaimer(field, value, optionsServiceObjects);\r\n\r\n      if (valueDisplayedOnTheDisclaimerLabel !== '') {\r\n        disclaimers.push({\r\n          label: `${label}: ${valueDisplayedOnTheDisclaimerLabel}`,\r\n          property,\r\n          value,\r\n          hideClose\r\n        });\r\n      }\r\n    });\r\n\r\n    return disclaimers;\r\n  }\r\n\r\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\r\n    this.loadSubscription = this.getPoDynamicPageOptions(onLoad).subscribe(responsePoOption =>\r\n      this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption)\r\n    );\r\n  }\r\n\r\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicSearchOptions> {\r\n    const originalOption: PoPageDynamicSearchOptions = {\r\n      title: this.title,\r\n      actions: this.actions,\r\n      breadcrumb: this.breadcrumb,\r\n      filters: this.filters,\r\n      keepFilters: this.keepFilters,\r\n      concatFilters: this.concatFilters,\r\n      hideRemoveAllDisclaimer: this.hideRemoveAllDisclaimer,\r\n      hideCloseDisclaimers: this.hideCloseDisclaimers,\r\n      quickSearchWidth: this.quickSearchWidth\r\n    };\r\n\r\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicSearchOptions> = {\r\n      schema: [\r\n        {\r\n          nameProp: 'filters',\r\n          merge: true,\r\n          keyForMerge: 'property'\r\n        },\r\n        {\r\n          nameProp: 'actions',\r\n          merge: true,\r\n          keyForMerge: 'label'\r\n        },\r\n        {\r\n          nameProp: 'breadcrumb'\r\n        },\r\n        {\r\n          nameProp: 'title'\r\n        },\r\n        {\r\n          nameProp: 'keepFilters'\r\n        },\r\n        {\r\n          nameProp: 'concatFilters'\r\n        },\r\n        {\r\n          nameProp: 'hideRemoveAllDisclaimer'\r\n        },\r\n        {\r\n          nameProp: 'hideCloseDisclaimers'\r\n        },\r\n        {\r\n          nameProp: 'quickSearchWidth'\r\n        }\r\n      ]\r\n    };\r\n\r\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\r\n  }\r\n}\r\n","<po-page-list\r\n  [p-actions]=\"actions\"\r\n  [p-breadcrumb]=\"breadcrumb\"\r\n  [p-disclaimer-group]=\"disclaimerGroup\"\r\n  [p-filter]=\"filterSettings\"\r\n  [p-title]=\"title\"\r\n>\r\n  <po-advanced-filter\r\n    [p-filters]=\"filters\"\r\n    [p-keep-filters]=\"keepFilters\"\r\n    [p-literals]=\"advancedFilterLiterals\"\r\n    (p-search-event)=\"onAdvancedSearch($event)\"\r\n  >\r\n  </po-advanced-filter>\r\n\r\n  <ng-content></ng-content>\r\n</po-page-list>\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoDynamicModule, PoLanguageModule, PoModalModule, PoPageModule } from '@po-ui/ng-components';\r\n\r\nimport { PoPageCustomizationModule } from '../../services/po-page-customization/po-page-customization.module';\r\n\r\nimport { PoAdvancedFilterComponent } from './po-advanced-filter/po-advanced-filter.component';\r\nimport { PoPageDynamicSearchComponent } from './po-page-dynamic-search.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do template do po-page-dynamic-search.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n\r\n    PoDynamicModule,\r\n    PoLanguageModule,\r\n    PoModalModule,\r\n    PoPageModule,\r\n    PoPageCustomizationModule\r\n  ],\r\n  declarations: [PoAdvancedFilterComponent, PoPageDynamicSearchComponent],\r\n  exports: [PoPageDynamicSearchComponent]\r\n})\r\nexport class PoPageDynamicSearchModule {}\r\n","export const poPageDynamicTableLiteralsDefault = {\r\n  en: {\r\n    pageAction: 'New',\r\n    pageActionRemoveAll: 'Delete',\r\n    tableActionView: 'View',\r\n    tableActionEdit: 'Edit',\r\n    tableActionDuplicate: 'Duplicate',\r\n    tableActionDelete: 'Delete',\r\n    confirmRemoveTitle: 'Confirm delete',\r\n    confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',\r\n    confirmRemoveAllTitle: 'Confirm batch deletion',\r\n    confirmRemoveAllMessage: 'Are you sure you want to delete all these records? You can not undo this action.',\r\n    loadDataErrorNotification: 'Service not found',\r\n    removeSuccessNotification: 'Item deleted successfully',\r\n    removeAllSuccessNotification: 'Items deleted successfully'\r\n  },\r\n  es: {\r\n    pageAction: 'Nuevo',\r\n    pageActionRemoveAll: 'Borrar',\r\n    tableActionView: 'Visualizar',\r\n    tableActionEdit: 'Editar',\r\n    tableActionDuplicate: 'Duplicar',\r\n    tableActionDelete: 'Borrar',\r\n    confirmRemoveTitle: 'Confirmar la exclusión',\r\n    confirmRemoveMessage: '¿Está seguro de que desea eliminar este registro? No puede deshacer esta acción.',\r\n    confirmRemoveAllTitle: 'Confirmar la exclusión por lotes',\r\n    confirmRemoveAllMessage: '¿Está seguro de que desea eliminar todos estos registros? No puede deshacer esta acción.',\r\n    loadDataErrorNotification: 'Servicio no informado.',\r\n    removeSuccessNotification: 'Elemento eliminado con éxito',\r\n    removeAllSuccessNotification: 'Elementos eliminados con éxito'\r\n  },\r\n  pt: {\r\n    pageAction: 'Novo',\r\n    pageActionRemoveAll: 'Excluir',\r\n    tableActionView: 'Visualizar',\r\n    tableActionEdit: 'Editar',\r\n    tableActionDuplicate: 'Duplicar',\r\n    tableActionDelete: 'Excluir',\r\n    confirmRemoveTitle: 'Confirmar exclusão',\r\n    confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? Você não poderá desfazer essa ação.',\r\n    confirmRemoveAllTitle: 'Confirmar exclusão em lote',\r\n    confirmRemoveAllMessage:\r\n      'Tem certeza de que deseja excluir todos esses registros? Você não poderá desfazer essa ação.',\r\n    loadDataErrorNotification: 'Serviço não informado.',\r\n    removeSuccessNotification: 'Item excluido com sucesso',\r\n    removeAllSuccessNotification: 'Items excluidos com sucesso'\r\n  },\r\n  ru: {\r\n    pageAction: 'Новый',\r\n    pageActionRemoveAll: 'Удалить',\r\n    tableActionView: 'Просмотр',\r\n    tableActionEdit: 'Редактировать',\r\n    tableActionDuplicate: 'Дублировать',\r\n    tableActionDelete: 'Удалить',\r\n    confirmRemoveTitle: 'Подтверждение удаления',\r\n    confirmRemoveMessage: 'Вы уверены, что хотите удалить эту запись?  Вы не можете отменить это действие.',\r\n    confirmRemoveAllTitle: 'Подтвердите удаление пакета',\r\n    confirmRemoveAllMessage: 'Вы уверены, что хотите удалить все эти записи? Вы не можете отменить это действие.',\r\n    loadDataErrorNotification: 'Сервис не найден',\r\n    removeSuccessNotification: 'Элемент успешно удален',\r\n    removeAllSuccessNotification: 'Элементы успешно удалены'\r\n  }\r\n};\r\n","import { Input, Directive, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { PoBreadcrumb, PoTableColumnSort } from '@po-ui/ng-components';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\n\r\nimport { PoPageDynamicTableFilters } from './interfaces/po-page-dynamic-table-filters.interface';\r\n\r\n@Directive()\r\nexport class PoPageDynamicListBaseComponent {\r\n  /** Objeto com propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\r\n\r\n  /** Endpoint da API dos recursos que serão exibidos. */\r\n  /**\r\n   * @description\r\n   *\r\n   * Endpoint usado pelo template para requisição dos recursos que serão exibidos.\r\n   *\r\n   * Ao realizar requisições de busca, podem ser enviados os parâmetros (caso possuam valor): `page`, `pageSize`, `search` e `order`.\r\n   *\r\n   * Caso a coluna estiver ordenada descendentemente será enviada da seguinte forma: `-name`, se for ordenada\r\n   * ascendentemente será enviada apenas com o nome da coluna, por exemplo: `name`.\r\n   *\r\n   * Exemplo de uma requisição de busca:\r\n   *\r\n   * > `GET {end-point}/{resource}?page=1&pageSize=10&search=components&order=-name`\r\n   *\r\n   * Caso a ação `remove` estiver configurada, será feito uma requisição de exclusão nesse mesmo endpoint passando os campos\r\n   * setados como `key: true`.\r\n   *\r\n   * > `DELETE {end-point}/{keys}`\r\n   *\r\n   * ```\r\n   *  <po-page-dynamic-table\r\n   *    [p-actions]=\"{ remove: true }\"\r\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\r\n   *    p-service=\"/api/po-samples/v1/people\"\r\n   *    ...>\r\n   *  </po-page-dynamic-table>\r\n   * ```\r\n   *\r\n   * Resquisição disparada, onde a propriedade `id` é igual a 2:\r\n   *\r\n   * ```\r\n   *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\r\n   *  Host: localhost:4000\r\n   *  Connection: keep-alive\r\n   *  Accept: application/json, text/plain\r\n   *  ...\r\n   * ```\r\n   *\r\n   * Para a ação `removeAll`, será feito uma requisição de exclusão em lote para esse mesmo endpoint passando, uma lista\r\n   * de objetos com os campos setados como `key: true` via `payload`.\r\n   *\r\n   * > `DELETE {end-point}`\r\n   *\r\n   * > `Payload: [ {key}, {key} ... {key} ]`\r\n   *\r\n   * ```\r\n   *  <po-page-dynamic-table\r\n   *    [p-actions]=\"{ removeAll: true }\"\r\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\r\n   *    p-service=\"/api/po-samples/v1/people\"\r\n   *    ...>\r\n   *  </po-page-dynamic-table>\r\n   * ```\r\n   *\r\n   * Resquisição disparada, onde foram selecionados 3 itens para serem removidos:\r\n   *\r\n   * ```\r\n   *  DELETE /api/po-samples/v1/people HTTP/1.1\r\n   *  Host: localhost:4000\r\n   *  Connection: keep-alive\r\n   *  Accept: application/json, text/plain\r\n   *  ...\r\n   * ```\r\n   *\r\n   * Request payload:\r\n   *\r\n   * ```\r\n   * [{\"id\":2},{\"id\":4},{\"id\":5}]\r\n   * ```\r\n   *\r\n   * > Caso esteja usando metadados com o template, será disparado uma requisição na inicialização do template para buscar\r\n   * > os metadados da página passando o tipo do metadado esperado e a versão cacheada pelo browser.\r\n   * >\r\n   * > `GET {end-point}/metadata?type=list&version={version}`\r\n   */\r\n  @Input('p-service-api') serviceApi: string;\r\n\r\n  /** Título da página. */\r\n  @Input('p-title') title: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Evento disparado ao fechar o popover do gerenciador de colunas após alterar as colunas visíveis.\r\n   *\r\n   * O componente envia como parâmetro um array de string com as colunas visíveis atualizadas.\r\n   * Por exemplo: [\"idCard\", \"name\", \"hireStatus\", \"age\"].\r\n   */\r\n  @Output('p-change-visible-columns') changeVisibleColumns = new EventEmitter<Array<string>>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Evento disparado ao clicar no botão de restaurar padrão no gerenciador de colunas.\r\n   *\r\n   * O componente envia como parâmetro um array de string com as colunas configuradas inicialmente.\r\n   * Por exemplo: [\"idCard\", \"name\", \"hireStatus\", \"age\"].\r\n   */\r\n  @Output('p-restore-column-manager') columnRestoreManager = new EventEmitter<Array<String>>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento executado ao ordenar colunas da tabela.\r\n   *\r\n   * Recebe um objeto `{ column, type }` onde:\r\n   *\r\n   * - column (`PoTableColumn`): objeto da coluna que foi clicada/ordenada.\r\n   * - type (`PoTableColumnSortType`): tipo da ordenação.\r\n   */\r\n  @Output('p-sort-by') sortBy: EventEmitter<PoTableColumnSort> = new EventEmitter<PoTableColumnSort>();\r\n\r\n  private _autoRouter: boolean = false;\r\n  private _columns: Array<any> = [];\r\n  private _duplicates: Array<string> = [];\r\n  private _fields: Array<any> = [];\r\n  private _filters: Array<any> = [];\r\n  private _keys: Array<string> = [];\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso sejam definidas ações na propriedade `p-actions`\r\n   *\r\n   * As rotas criadas serão baseadas na propriedade `p-actions`.\r\n   *\r\n   * > Para o correto funcionamento não pode haver nenhuma rota coringa (`**`) especificada.\r\n   *\r\n   * @default false\r\n   */\r\n  @Input('p-auto-router') set autoRouter(value: boolean) {\r\n    this._autoRouter = convertToBoolean(value);\r\n  }\r\n\r\n  get autoRouter(): boolean {\r\n    return this._autoRouter;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista dos campos usados na tabela e busca avançada.\r\n   *\r\n   *\r\n   * > Caso não seja definido fields a tabela assumirá o comportamento padrão.\r\n   */\r\n  @Input('p-fields') set fields(fields: Array<PoPageDynamicTableFilters>) {\r\n    this._fields = Array.isArray(fields) ? [...fields] : [];\r\n\r\n    this.setFieldsProperties(this.fields);\r\n  }\r\n\r\n  get fields(): Array<PoPageDynamicTableFilters> {\r\n    return this._fields;\r\n  }\r\n\r\n  set columns(value) {\r\n    this._columns = [...value];\r\n  }\r\n\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  set duplicates(value: Array<string>) {\r\n    this._duplicates = [...value];\r\n  }\r\n\r\n  get duplicates() {\r\n    return this._duplicates;\r\n  }\r\n\r\n  set filters(value: Array<PoPageDynamicTableFilters>) {\r\n    this._filters = [...value];\r\n  }\r\n\r\n  get filters() {\r\n    return this._filters;\r\n  }\r\n\r\n  set keys(value: Array<string>) {\r\n    this._keys = [...value];\r\n  }\r\n\r\n  get keys() {\r\n    return this._keys;\r\n  }\r\n\r\n  private setFieldsProperties(fields: Array<any>) {\r\n    let visibleFilter: boolean;\r\n    this.filters = fields\r\n      .filter(field => field.filter === true)\r\n      .map(filterField => {\r\n        visibleFilter = !(filterField.initValue && filterField.fixed);\r\n        return { ...filterField, visible: visibleFilter };\r\n      });\r\n    this.columns = fields.filter(\r\n      field => field.visible === undefined || field.visible === true || field.allowColumnsManager === true\r\n    );\r\n    this.keys = fields.filter(field => field.key === true).map(field => field.property);\r\n    this.duplicates = fields.filter(field => field.duplicate === true).map(field => field.property);\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { PoPageDynamicTableActions } from './interfaces/po-page-dynamic-table-actions.interface';\r\nimport { PoPageDynamicTableBeforeDuplicate } from './interfaces/po-page-dynamic-table-before-duplicate.interface';\r\nimport { PoPageDynamicTableBeforeEdit } from './interfaces/po-page-dynamic-table-before-edit.interface';\r\nimport { PoPageDynamicTableBeforeNew } from './interfaces/po-page-dynamic-table-before-new.interface';\r\nimport { PoPageDynamicTableBeforeRemove } from './interfaces/po-page-dynamic-table-before-remove.interface';\r\nimport { PoPageDynamicTableBeforeDetail } from './interfaces/po-page-dynamic-table-before-detail.interface';\r\nimport { PoPageDynamicTableBeforeRemoveAll } from './interfaces/po-page-dynamic-table-before-remove-all.interface';\r\nimport { PoPageDynamicTableCustomAction } from './interfaces/po-page-dynamic-table-custom-action.interface';\r\n\r\ninterface ExecuteActionParameter {\r\n  action: string | Function;\r\n  resource?: any;\r\n  id?: string | number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoPageDynamicTableActionsService {\r\n  readonly headers: HttpHeaders = new HttpHeaders({\r\n    'X-PO-SCREEN-LOCK': 'true'\r\n  });\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  beforeDuplicate(\r\n    action: PoPageDynamicTableActions['beforeDuplicate'],\r\n    id: any,\r\n    body: any\r\n  ): Observable<PoPageDynamicTableBeforeDuplicate> {\r\n    const resource = body ?? {};\r\n\r\n    return this.executeAction({ action, resource, id });\r\n  }\r\n\r\n  beforeEdit(\r\n    action: PoPageDynamicTableActions['beforeEdit'],\r\n    id: any,\r\n    body: any\r\n  ): Observable<PoPageDynamicTableBeforeEdit> {\r\n    const resource = body ?? {};\r\n\r\n    return this.executeAction({ action, resource, id });\r\n  }\r\n\r\n  beforeNew(action?: PoPageDynamicTableActions['beforeNew']): Observable<PoPageDynamicTableBeforeNew> {\r\n    return this.executeAction({ action });\r\n  }\r\n\r\n  beforeRemove(\r\n    action: PoPageDynamicTableActions['beforeRemove'],\r\n    id: string,\r\n    resource: any\r\n  ): Observable<PoPageDynamicTableBeforeRemove> {\r\n    return this.executeAction({ action, id, resource });\r\n  }\r\n\r\n  beforeRemoveAll(\r\n    action: PoPageDynamicTableActions['beforeRemoveAll'],\r\n    resources: Array<any>\r\n  ): Observable<PoPageDynamicTableBeforeRemoveAll> {\r\n    return this.executeAction({ action, resource: resources });\r\n  }\r\n\r\n  beforeDetail(\r\n    action: PoPageDynamicTableActions['beforeDetail'],\r\n    id: string,\r\n    resource: any\r\n  ): Observable<PoPageDynamicTableBeforeDetail> {\r\n    return this.executeAction({ action, id, resource });\r\n  }\r\n\r\n  customAction(action: PoPageDynamicTableCustomAction['action'], resource: any = []) {\r\n    return this.executeAction({ action, resource });\r\n  }\r\n\r\n  private executeAction<T>({ action, resource = {}, id }: ExecuteActionParameter): Observable<T> {\r\n    if (!action) {\r\n      return of(<T>{});\r\n    }\r\n\r\n    if (typeof action === 'string') {\r\n      const url = id ? `${action}/${id}` : action;\r\n\r\n      return this.http.post<T>(url, resource, { headers: this.headers });\r\n    }\r\n    if (id) {\r\n      return of(action(id, resource));\r\n    }\r\n    return of(action(resource));\r\n  }\r\n}\r\n","import { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription, Observable, EMPTY, concat, of } from 'rxjs';\r\nimport { tap, switchMap, map } from 'rxjs/operators';\r\n\r\nimport {\r\n  InputBoolean,\r\n  PoDialogConfirmOptions,\r\n  PoDialogService,\r\n  PoLanguageService,\r\n  PoNotificationService,\r\n  PoPageAction,\r\n  PoTableAction,\r\n  PoTableColumnSort,\r\n  PoTableColumnSortType,\r\n  poLocaleDefault\r\n} from '@po-ui/ng-components';\r\n\r\nimport * as util from '../../utils/util';\r\n\r\nimport { PoPageDynamicDetailComponent } from '../po-page-dynamic-detail/po-page-dynamic-detail.component';\r\n\r\nimport { poPageDynamicTableLiteralsDefault } from './po-page-dynamic-table-literals';\r\nimport { PoPageDynamicListBaseComponent } from './po-page-dynamic-list-base.component';\r\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\r\nimport { PoPageDynamicTableActions } from './interfaces/po-page-dynamic-table-actions.interface';\r\nimport { PoPageDynamicTableOptions } from './interfaces/po-page-dynamic-table-options.interface';\r\nimport { PoPageCustomizationService } from './../../services/po-page-customization/po-page-customization.service';\r\nimport { PoPageDynamicOptionsSchema } from './../../services/po-page-customization/po-page-dynamic-options.interface';\r\nimport { PoPageDynamicTableMetaData } from './interfaces/po-page-dynamic-table-metadata.interface';\r\nimport { PoPageDynamicTableActionsService } from './po-page-dynamic-table-actions.service';\r\nimport { PoPageDynamicTableBeforeEdit } from './interfaces/po-page-dynamic-table-before-edit.interface';\r\nimport { PoPageDynamicTableBeforeNew } from './interfaces/po-page-dynamic-table-before-new.interface';\r\nimport { PoPageDynamicTableBeforeRemove } from './interfaces/po-page-dynamic-table-before-remove.interface';\r\nimport { PoPageDynamicTableBeforeDetail } from './interfaces/po-page-dynamic-table-before-detail.interface';\r\nimport { PoPageDynamicTableBeforeDuplicate } from './interfaces/po-page-dynamic-table-before-duplicate.interface';\r\nimport { PoPageDynamicTableBeforeRemoveAll } from './interfaces/po-page-dynamic-table-before-remove-all.interface';\r\nimport { PoPageDynamicTableCustomAction } from './interfaces/po-page-dynamic-table-custom-action.interface';\r\nimport { PoPageDynamicTableCustomTableAction } from './interfaces/po-page-dynamic-table-custom-table-action.interface';\r\nimport { isExternalLink, openExternalLink, removeDuplicateItems } from '../../utils/util';\r\n\r\nconst PAGE_SIZE_DEFAULT = 10;\r\n\r\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicTableOptions);\r\n\r\n/**\r\n * @docsExtends PoPageDynamicListBaseComponent\r\n *\r\n * @description\r\n *\r\n * O `po-page-dynamic-table` é uma página que exibe uma lista de registros em uma tabela baseado em uma lista de fields,\r\n * o mesmo também suporta metadados conforme especificado na documentação.\r\n *\r\n * ### Utilização via rota\r\n *\r\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-table` disponibiliza propriedades para\r\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:\r\n *\r\n * O componente primeiro irá carregar o metadado da rota definida na propriedade serviceMetadataApi\r\n * e depois irá buscar da rota definida na propriedade serviceLoadApi\r\n *\r\n * > Caso o servidor retornar um erro ao recuperar o metadados, será repassado o metadados salvo em cache,\r\n * se o cache não existe será disparado uma notificação.\r\n *\r\n * ```\r\n * {\r\n *   path: 'people',\r\n *   component: PoPageDynamicTableComponent,\r\n *   data: {\r\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\r\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados utilizando o método HTTP Get\r\n *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados utilizando o método HTTP Post\r\n *   }\r\n * }\r\n *\r\n * ```\r\n *\r\n * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o\r\n * tipo do metadado esperado e a versão cacheada pelo browser.\r\n *\r\n * O formato esperado na resposta da requisição está especificado na interface\r\n * [PoPageDynamicTableMetadata](/documentation/po-page-dynamic-table#po-page-dynamic-table-metadata). Por exemplo:\r\n *\r\n * ```\r\n *  {\r\n *   version: 1,\r\n *   title: 'Person Table',\r\n *   fields: [\r\n *     { property: 'id', key: true, disabled: true },\r\n *     { property: 'status' },\r\n *     { property: 'name' },\r\n *     { property: 'nickname' },\r\n *     { property: 'birthdate', label: 'Birth date' },\r\n *     { property: 'genre' },\r\n *     { property: 'city' },\r\n *     { property: 'country' }\r\n *   ],\r\n *   keepFilters: true\r\n * }\r\n * ```\r\n *\r\n * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:\r\n * ```\r\n * GET {end-point}/metadata?type=list&version={version}\r\n * ```\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-dynamic-table-basic\" title=\"PO Page Dynamic Table Basic\">\r\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-dynamic-table-people\" title=\"PO Page Dynamic Table - People\">\r\n *  <file name=\"sample-po-page-dynamic-table-people/sample-po-page-dynamic-table-people.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-table-people/sample-po-page-dynamic-table-people.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-dynamic-table-users\" title=\"PO Page Dynamic Table - Users\">\r\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.ts\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.service.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-dynamic-table-hotels\" title=\"PO Page Dynamic Table - Hotels\">\r\n *  <file name=\"sample-po-page-dynamic-table-hotels/sample-po-page-dynamic-table-hotels.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-table-hotels/sample-po-page-dynamic-table-hotels.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-dynamic-table',\r\n  templateUrl: './po-page-dynamic-table.component.html',\r\n  providers: [PoPageDynamicService]\r\n})\r\nexport class PoPageDynamicTableComponent extends PoPageDynamicListBaseComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Função ou serviço que será executado na inicialização do componente.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\r\n   * - `function`: Método que será executado.\r\n   *\r\n   * O retorno desta função deve ser do tipo `PoPageDynamicTableOptions`,\r\n   * onde o usuário poderá customizar novos campos, breadcrumb, title e actions\r\n   *\r\n   * Por exemplo:\r\n   *\r\n   * ```\r\n   * getPageOptions(): PoPageDynamicTableOptions {\r\n   * return {\r\n   *   actions:\r\n   *     { new: 'new', edit: 'edit/:id', remove: true },\r\n   *   fields: [\r\n   *     { property: 'idCard', gridColumns: 6 }\r\n   *   ]\r\n   * };\r\n   * }\r\n   *\r\n   * ```\r\n   * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\r\n   * ```\r\n   *  [p-load]=\"onLoadOptions.bind(this)\"\r\n   * ```\r\n   */\r\n  @Input('p-load') onLoad: string | (() => PoPageDynamicTableOptions);\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Mantém na modal de `Busca Avançada` os valores preenchidos do último filtro realizado pelo usuário.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @InputBoolean()\r\n  @Input('p-keep-filters')\r\n  keepFilters: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define que a coluna de ações ficará no lado direito da tabela.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @InputBoolean()\r\n  @Input('p-actions-right')\r\n  actionRight?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Permite a utilização da pesquisa rápida junto com a pesquisa avançada.\r\n   *\r\n   * Desta forma, ao ter uma pesquisa avançada estabelecida e ser\r\n   * preenchido a pesquisa rápida, o filtro será concatenado adicionando a pesquisa\r\n   * rápida também na lista de `disclaimers` a aplicando uma nova busca com a concatenação.\r\n   *\r\n   * Por exemplo, com os seguintes filtros aplicados:\r\n   *   - filtro avançado: `{ name: 'Mike', age: '12' }`\r\n   *   - filtro rápido: `{ search: 'paper' }`\r\n   *\r\n   * A requisição dos dados na API ficará com os parâmetros:\r\n   * ```\r\n   * page=1&pageSize=10&name=Mike&age=12&search=paper\r\n   * ```\r\n   *\r\n   * @default `false`\r\n   */\r\n  @InputBoolean()\r\n  @Input('p-concat-filters')\r\n  concatFilters: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Oculta o botão para remover todos os *disclaimers* do grupo.\r\n   *\r\n   * > Por padrão, o mesmo é exibido à partir de dois ou mais *disclaimers* com a opção `hideClose` habilitada.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @InputBoolean()\r\n  @Input('p-hide-remove-all-disclaimer')\r\n  hideRemoveAllDisclaimer?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Se verdadeiro, ativa a funcionalidade de scroll infinito para a tabela e o botão \"Carregar Mais\" deixará de ser exibido. Ao chegar no fim da tabela\r\n   * executará a função `p-show-more`.\r\n   *\r\n   * **Regras de utilização:**\r\n   *  - O scroll infinito só funciona para tabelas que utilizam a propriedade `p-height` e que possuem o scroll já na carga inicial dos dados.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @InputBoolean()\r\n  @Input('p-infinite-scroll')\r\n  infiniteScroll?: boolean = false;\r\n\r\n  hasNext = false;\r\n  items = [];\r\n  literals;\r\n  pageActions: Array<PoPageAction> = [];\r\n  tableActions: Array<PoTableAction> = [];\r\n\r\n  private _actions: PoPageDynamicTableActions = {};\r\n  private _pageCustomActions: Array<PoPageDynamicTableCustomAction> = [];\r\n  private _height: number;\r\n  private _quickSearchWidth: number;\r\n  private _tableCustomActions: Array<PoPageDynamicTableCustomTableAction> = [];\r\n\r\n  private page: number = 1;\r\n  private currentPage: number = 1;\r\n  private itemSelectedAction;\r\n  private params = {};\r\n  private sortedColumn: PoTableColumnSort;\r\n  private subscriptions = new Subscription();\r\n  private hasCustomActionWithSelectable = false;\r\n\r\n  private _customPageListActions: Array<PoPageAction> = [];\r\n  private _customTableActions: Array<PoTableAction> = [];\r\n  private _defaultPageActions: Array<PoPageAction> = [];\r\n  private _defaultTableActions: Array<PoTableAction> = [];\r\n  private _hideCloseDisclaimers: Array<string> = [];\r\n\r\n  private set defaultPageActions(value: Array<PoPageAction>) {\r\n    this._defaultPageActions = value;\r\n    this.updatePageActions();\r\n  }\r\n\r\n  private set defaultTableActions(value: Array<PoTableAction>) {\r\n    this._defaultTableActions = value;\r\n    this.updateTableActions();\r\n  }\r\n\r\n  private set customPageListActions(value: Array<PoPageAction>) {\r\n    this._customPageListActions = value;\r\n    this.updatePageActions();\r\n  }\r\n\r\n  private set customTableActions(value: Array<PoTableAction>) {\r\n    this._customTableActions = value;\r\n    this.updateTableActions();\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ações da página e da tabela.\r\n   * > Caso utilizar a ação padrão de excluir, a mesma será exibida por último na tabela.\r\n   */\r\n  @Input('p-actions') set actions(value: PoPageDynamicTableActions) {\r\n    this._actions = value && typeof value === 'object' && Object.keys(value).length > 0 ? value : {};\r\n\r\n    this.setPageActions(this.actions);\r\n    this.setRemoveAllAction();\r\n    this.setTableActions(this.actions);\r\n  }\r\n\r\n  get actions(): PoPageDynamicTableActions {\r\n    return this._actions;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista de ações customizadas da página que serão incorporadas às ações\r\n   * informadas através da propriedade `p-actions`.\r\n   *\r\n   * Essas ações ficam localizadas na parte superior da página em botões com ações.\r\n   *\r\n   * Exemplo de utilização:\r\n   * ```\r\n   * [\r\n   *  { label: 'Export', action: this.export.bind(this) },\r\n   *  { label: 'Print', action: this.print.bind(this) }\r\n   * ];\r\n   * ```\r\n   */\r\n  @Input('p-page-custom-actions') set pageCustomActions(value: Array<PoPageDynamicTableCustomAction>) {\r\n    this._pageCustomActions = Array.isArray(value) ? value : [];\r\n\r\n    this.customPageListActions = this.transformCustomActionsToPageListAction(this.pageCustomActions);\r\n    this.hasCustomActionWithSelectable = this.pageCustomActions.some(customAction => customAction.selectable);\r\n  }\r\n\r\n  get pageCustomActions(): Array<PoPageDynamicTableCustomAction> {\r\n    return this._pageCustomActions;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista de ações customizadas na tabela da página que serão incorporadas às ações\r\n   * informadas através da propriedade `p-actions`.\r\n   *\r\n   * Exemplo de utilização:\r\n   * ```\r\n   * [\r\n   *  { label: 'Apply discount', action: this.applyDiscount.bind(this) },\r\n   *  { label: 'Details', action: this.details.bind(this) }\r\n   * ];\r\n   * ```\r\n   * > Caso utilizar a ação padrão de excluir, a mesma será exibida por último na tabela.\r\n   */\r\n  @Input('p-table-custom-actions') set tableCustomActions(value: Array<PoPageDynamicTableCustomTableAction>) {\r\n    this._tableCustomActions = Array.isArray(value) ? value : [];\r\n\r\n    this.customTableActions = this.transformTableCustomActionsToTableActions(this.tableCustomActions);\r\n  }\r\n\r\n  get tableCustomActions(): Array<PoPageDynamicTableCustomTableAction> {\r\n    return this._tableCustomActions;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Largura do campo de busca, utilizando o *Grid System*,\r\n   * e limitado ao máximo de 6 colunas. O tamanho mínimo é controlado\r\n   * conforme resolução de tela para manter a consistência do layout.\r\n   */\r\n  @Input('p-quick-search-width') set quickSearchWidth(value: number) {\r\n    this._quickSearchWidth = util.convertToInt(value);\r\n  }\r\n\r\n  get quickSearchWidth(): number {\r\n    return this._quickSearchWidth;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a altura da tabela em *pixels* e fixa o cabeçalho.\r\n   */\r\n  @Input('p-height') set height(value: number) {\r\n    this._height = util.convertToInt(value);\r\n  }\r\n\r\n  get height(): number {\r\n    return this._height;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista de filtros que terão a opção de fechar ocultada\r\n   * em seu respectivo disclaimer. Utilizar o atributo `property` do campo.\r\n   *\r\n   * Exemplo de utilização:\r\n   * ```\r\n   * ['city','name'];\r\n   * ```\r\n   */\r\n  @Input('p-hide-close-disclaimers') set hideCloseDisclaimers(value: Array<string>) {\r\n    this._hideCloseDisclaimers = Array.isArray(value) ? value : [];\r\n  }\r\n\r\n  get hideCloseDisclaimers(): Array<string> {\r\n    return this._hideCloseDisclaimers;\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private poDialogService: PoDialogService,\r\n    private poNotification: PoNotificationService,\r\n    private poPageDynamicService: PoPageDynamicService,\r\n    private poPageCustomizationService: PoPageCustomizationService,\r\n    private poPageDynamicTableActionsService: PoPageDynamicTableActionsService,\r\n    languageService: PoLanguageService\r\n  ) {\r\n    super();\r\n\r\n    const language = languageService.getShortLanguage();\r\n\r\n    this.literals = {\r\n      ...poPageDynamicTableLiteralsDefault[poLocaleDefault],\r\n      ...poPageDynamicTableLiteralsDefault[language]\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadDataFromAPI();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  onAdvancedSearch(filter) {\r\n    this.subscriptions.add(this.loadData({ page: 1, ...filter }).subscribe());\r\n    this.params = filter;\r\n\r\n    if (this.keepFilters) {\r\n      this.updateFilterValue(filter);\r\n    }\r\n  }\r\n\r\n  onChangeDisclaimers(disclaimers) {\r\n    const filter = {};\r\n\r\n    disclaimers.forEach(disclaimer => {\r\n      filter[disclaimer.property] = disclaimer.value;\r\n    });\r\n\r\n    this.onAdvancedSearch(filter);\r\n  }\r\n\r\n  onQuickSearch(termTypedInQuickSearch) {\r\n    const quickSearchParam = termTypedInQuickSearch ? { search: termTypedInQuickSearch } : {};\r\n    this.params = this.concatFilters ? { ...this.params, ...quickSearchParam } : { ...quickSearchParam };\r\n\r\n    this.subscriptions.add(this.loadData(termTypedInQuickSearch ? { page: 1, ...this.params } : undefined).subscribe());\r\n  }\r\n\r\n  onSort(sortedColumn: PoTableColumnSort) {\r\n    this.sortedColumn = sortedColumn;\r\n  }\r\n\r\n  onChangeVisibleColumns(value) {\r\n    this.changeVisibleColumns.emit(value);\r\n  }\r\n\r\n  onColumnRestoreManager(value: Array<String>) {\r\n    this.columnRestoreManager.emit(value);\r\n  }\r\n\r\n  onSortBy(sortedColumn: PoTableColumnSort) {\r\n    this.sortBy.emit(sortedColumn);\r\n  }\r\n\r\n  showMore() {\r\n    this.subscriptions.add(this.loadData({ page: ++this.page, ...this.params }).subscribe());\r\n  }\r\n\r\n  get enableSelectionTable() {\r\n    return this.hasActionRemoveAll || this.hasCustomActionWithSelectable;\r\n  }\r\n\r\n  get hasActionRemoveAll() {\r\n    return !!this.actions.removeAll;\r\n  }\r\n\r\n  /**\r\n   * Função que realiza a atualização dos dados da tabela.\r\n   *\r\n   * Para utilizá-la é necessário capturar a instância do `page dynamic table`, como por exemplo:\r\n   *\r\n   * ``` html\r\n   * <po-page-dynamic-table #dynamicTable [p-service-api]=\"serviceApi\"></po-page-dynamic-table>\r\n   * ```\r\n   *\r\n   * ``` javascript\r\n   * import { PoPageDynamicTableComponent, PoDynamicFormField } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild('dynamicTable', { static: true }) dynamicTable: PoPageDynamicTableComponent;\r\n   *\r\n   * pageCustomActions: Array<PoPageDynamicTableCustomAction> = [\r\n   * {\r\n   *   label: 'Update',\r\n   *   action: this.updateTable.bind(this),\r\n   *   icon: 'po-icon-refresh'\r\n   * }]\r\n   *\r\n   * updateTable() {\r\n   *   this.dynamicTable.updateDataTable();\r\n   * }\r\n   * ```\r\n   *\r\n   *\r\n   * @param {{page: number, key: value }} filter Propriedade para envio de um filtro customizado.\r\n   * Exemplo de envio:\r\n   *\r\n   *```\r\n   * this.dynamicTable.updateDataTable({page: 3, search: 'Brasil'});\r\n   * ```\r\n   * Caso não seja passado um filtro customizado para o método `updateDataTable` a tabela será atualizada conforme a página do ultimo item modificado.\r\n   */\r\n  public updateDataTable(filter?: any) {\r\n    const indexItemSelected = this.items.findIndex(item => item === this.itemSelectedAction);\r\n    const pageNumber = Math.floor(indexItemSelected / PAGE_SIZE_DEFAULT);\r\n    this.currentPage = pageNumber < 0 ? this.currentPage : pageNumber + 1;\r\n    if (this.currentPage === undefined) {\r\n      this.currentPage = 1;\r\n    }\r\n\r\n    if (filter) {\r\n      this.subscriptions.add(this.loadData(filter).subscribe());\r\n    } else {\r\n      this.subscriptions.add(this.loadData({ page: this.currentPage, ...this.params }).subscribe());\r\n    }\r\n  }\r\n\r\n  private confirmRemove(\r\n    actionRemove: PoPageDynamicTableActions['remove'],\r\n    actionBeforeRemove: PoPageDynamicTableActions['beforeRemove'],\r\n    item\r\n  ) {\r\n    const confirmOptions: PoDialogConfirmOptions = {\r\n      title: this.literals.confirmRemoveTitle,\r\n      message: this.literals.confirmRemoveMessage,\r\n      confirm: this.remove.bind(this, item, actionRemove, actionBeforeRemove)\r\n    };\r\n\r\n    this.poDialogService.confirm(confirmOptions);\r\n  }\r\n\r\n  private confirmRemoveAll(\r\n    actionRemoveAll: PoPageDynamicTableActions['remove'],\r\n    actionBeforeRemoveAll: PoPageDynamicTableActions['beforeRemove']\r\n  ) {\r\n    const confirmOptions: PoDialogConfirmOptions = {\r\n      title: this.literals.confirmRemoveAllTitle,\r\n      message: this.literals.confirmRemoveAllMessage,\r\n      confirm: this.removeAll.bind(this, actionRemoveAll, actionBeforeRemoveAll)\r\n    };\r\n\r\n    this.poDialogService.confirm(confirmOptions);\r\n  }\r\n\r\n  private formatUniqueKey(item) {\r\n    const keys = util.mapObjectByProperties(item, this.keys);\r\n\r\n    return util.valuesFromObject(keys).join('|');\r\n  }\r\n\r\n  private getOrderParam(sortedColumn: PoTableColumnSort = { type: undefined }) {\r\n    const { column, type } = sortedColumn;\r\n\r\n    if (!column) {\r\n      return {};\r\n    }\r\n\r\n    if (type === PoTableColumnSortType.Descending) {\r\n      return { order: `-${column.property}` };\r\n    }\r\n\r\n    return { order: `${column.property}` };\r\n  }\r\n\r\n  private loadData(params: { page?: number; search?: string } = {}) {\r\n    const key = this.keys ? this.keys[0] : 'id';\r\n    if (!this.serviceApi) {\r\n      this.poNotification.error(this.literals.loadDataErrorNotification);\r\n      return EMPTY;\r\n    }\r\n\r\n    const orderParam = this.getOrderParam(this.sortedColumn);\r\n    const defaultParams: any = { page: 1, pageSize: PAGE_SIZE_DEFAULT };\r\n    const fullParams: any = { ...defaultParams, ...params, ...orderParam };\r\n\r\n    return this.poPageDynamicService.getResources(fullParams).pipe(\r\n      tap(response => {\r\n        removeDuplicateItems(response.items, this.items, key);\r\n        this.items = fullParams.page === 1 ? response.items : [...this.items, ...response.items];\r\n        this.page = fullParams.page;\r\n        this.hasNext = response.hasNext;\r\n      })\r\n    );\r\n  }\r\n\r\n  private getMetadata(\r\n    serviceApiFromRoute: string,\r\n    onLoad: UrlOrPoCustomizationFunction\r\n  ): Observable<PoPageDynamicTableMetaData> {\r\n    if (serviceApiFromRoute) {\r\n      return this.poPageDynamicService.getMetadata<PoPageDynamicTableMetaData>().pipe(\r\n        tap(response => {\r\n          this.autoRouter = response.autoRouter || this.autoRouter;\r\n          this.actions = response.actions || this.actions;\r\n          this.breadcrumb = response.breadcrumb || this.breadcrumb;\r\n          this.fields = response.fields || this.fields;\r\n          this.title = response.title || this.title;\r\n          this.pageCustomActions = response.pageCustomActions || this.pageCustomActions;\r\n          this.tableCustomActions = response.tableCustomActions || this.tableCustomActions;\r\n          this.keepFilters = response.keepFilters || this.keepFilters;\r\n          this.concatFilters = response.concatFilters || this.concatFilters;\r\n          this.hideRemoveAllDisclaimer = response.hideRemoveAllDisclaimer || this.hideRemoveAllDisclaimer;\r\n          this.hideCloseDisclaimers = response.hideCloseDisclaimers || this.hideCloseDisclaimers;\r\n          this.quickSearchWidth = response.quickSearchWidth || this.quickSearchWidth;\r\n        }),\r\n        switchMap(() => this.loadOptionsOnInitialize(onLoad))\r\n      );\r\n    }\r\n\r\n    return this.loadOptionsOnInitialize(onLoad);\r\n  }\r\n\r\n  // @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.\r\n  private navigateTo(\r\n    route: { path: string; component?; url?: string; params?: any },\r\n    forceStopAutoRouter: boolean = false\r\n  ) {\r\n    this.router.navigate([route.url || route.path], { queryParams: route.params }).catch(() => {\r\n      if (forceStopAutoRouter || !this.autoRouter) {\r\n        return;\r\n      }\r\n\r\n      this.router.config.unshift(<Route>{\r\n        path: route.path,\r\n        component: route.component,\r\n        data: { serviceApi: this.serviceApi, autoRouter: true }\r\n      });\r\n\r\n      this.navigateTo(route, true);\r\n    });\r\n  }\r\n\r\n  private createConcatenatedUrl(concatKeys: boolean, url: string, selectedItem): string {\r\n    const keys = this.keys.map(key => encodeURIComponent(selectedItem[key])).join();\r\n    return concatKeys ? `${url}/${keys}` : url;\r\n  }\r\n\r\n  private openDetail(action: PoPageDynamicTableActions['detail'], item) {\r\n    const id = this.formatUniqueKey(item);\r\n    this.subscriptions.add(\r\n      this.poPageDynamicTableActionsService\r\n        .beforeDetail(this.actions.beforeDetail, id, item)\r\n        .subscribe((beforeDetailResult: PoPageDynamicTableBeforeDetail) =>\r\n          this.executeDetail(action, beforeDetailResult, id, item)\r\n        )\r\n    );\r\n  }\r\n\r\n  private executeDetail(\r\n    action: PoPageDynamicTableActions['detail'],\r\n    beforeDetailResult?: PoPageDynamicTableBeforeNew,\r\n    id?: string,\r\n    item?: any\r\n  ) {\r\n    const before = beforeDetailResult ?? {};\r\n    const allowAction = typeof before.allowAction === 'boolean' ? before.allowAction : true;\r\n    const { newUrl } = before;\r\n\r\n    if (allowAction && action) {\r\n      if (newUrl) {\r\n        const path = this.getPathFromNewUrl(newUrl, id);\r\n        return this.navigateTo({ path });\r\n      }\r\n\r\n      if (typeof action === 'string') {\r\n        const url = this.resolveUrl(item, action);\r\n        this.navigateTo({ path: action, url, component: PoPageDynamicDetailComponent });\r\n      } else {\r\n        action(id, item);\r\n      }\r\n    }\r\n  }\r\n\r\n  private getPathFromNewUrl(newUrl: string, id: string): string {\r\n    if (newUrl.includes(':id')) {\r\n      return newUrl.replace(/:id/g, id);\r\n    }\r\n    return newUrl;\r\n  }\r\n\r\n  private openDuplicate(actionDuplicate: PoPageDynamicTableActions['duplicate'], item: any) {\r\n    const id = this.formatUniqueKey(item);\r\n    const duplicates = util.removeKeysProperties(this.keys, util.mapObjectByProperties(item, this.duplicates));\r\n\r\n    this.subscriptions.add(\r\n      this.poPageDynamicTableActionsService\r\n        .beforeDuplicate(this.actions.beforeDuplicate, id, duplicates)\r\n        .subscribe((beforeDuplicateResult: PoPageDynamicTableBeforeDuplicate) =>\r\n          this.executeDuplicate(actionDuplicate, beforeDuplicateResult, duplicates)\r\n        )\r\n    );\r\n  }\r\n\r\n  private executeDuplicate(\r\n    actionDuplicate: PoPageDynamicTableActions['duplicate'],\r\n    beforeDuplicateResult: PoPageDynamicTableBeforeDuplicate,\r\n    duplicates: any\r\n  ) {\r\n    const before = beforeDuplicateResult ?? {};\r\n    const allowAction = typeof before.allowAction === 'boolean' ? before.allowAction : true;\r\n    const beforeDuplicateResource = before.resource;\r\n    const newAction = before.newUrl ?? actionDuplicate;\r\n\r\n    if (allowAction && actionDuplicate) {\r\n      if (typeof beforeDuplicateResource === 'object' && beforeDuplicateResource !== null) {\r\n        duplicates = util.removeKeysProperties(this.keys, beforeDuplicateResource);\r\n      }\r\n\r\n      if (typeof newAction === 'string') {\r\n        return this.navigateTo({ path: newAction, params: { duplicate: JSON.stringify(duplicates) } });\r\n      }\r\n\r\n      return newAction(duplicates);\r\n    }\r\n  }\r\n\r\n  private openEdit(actionEdit: PoPageDynamicTableActions['edit'], item) {\r\n    const id = this.formatUniqueKey(item);\r\n\r\n    this.subscriptions.add(\r\n      this.poPageDynamicTableActionsService\r\n        .beforeEdit(this.actions.beforeEdit, id, item)\r\n        .pipe(\r\n          switchMap((beforeEditResult: PoPageDynamicTableBeforeEdit) =>\r\n            this.executeEditAction(actionEdit, beforeEditResult, item, id)\r\n          )\r\n        )\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private executeEditAction(\r\n    action: PoPageDynamicTableActions['edit'],\r\n    beforeEditResult: PoPageDynamicTableBeforeEdit,\r\n    item: any,\r\n    id: string\r\n  ) {\r\n    const newEditAction = beforeEditResult?.newUrl ?? action;\r\n    const allowAction = beforeEditResult?.allowAction ?? true;\r\n\r\n    if (!allowAction) {\r\n      return EMPTY;\r\n    }\r\n\r\n    if (typeof newEditAction === 'string') {\r\n      this.openEditUrl(newEditAction, item);\r\n    } else {\r\n      const updatedItem = newEditAction(id, item);\r\n      if (typeof updatedItem === 'object' && updatedItem !== null) {\r\n        this.modifyUITableItem(item, util.removeKeysProperties(this.keys, updatedItem));\r\n      }\r\n    }\r\n\r\n    return EMPTY;\r\n  }\r\n\r\n  private openEditUrl(path: string, item) {\r\n    const url = this.resolveUrl(item, path);\r\n\r\n    this.navigateTo({ path, url });\r\n  }\r\n\r\n  private modifyUITableItem(currentItem, newItemValue) {\r\n    const tableItem = this.items.findIndex(item => item === currentItem);\r\n    this.items[tableItem] = { ...currentItem, ...newItemValue };\r\n  }\r\n\r\n  private openNew(actionNew: PoPageDynamicTableActions['new']) {\r\n    this.subscriptions.add(\r\n      this.poPageDynamicTableActionsService\r\n        .beforeNew(this.actions.beforeNew)\r\n        .subscribe((beforeNewResult: PoPageDynamicTableBeforeNew) => this.executeNew(actionNew, beforeNewResult))\r\n    );\r\n  }\r\n\r\n  private executeNew(actionNew: PoPageDynamicTableActions['new'], beforeNewResult?: PoPageDynamicTableBeforeNew) {\r\n    const before = beforeNewResult ?? {};\r\n    const allowAction = typeof before.allowAction === 'boolean' ? before.allowAction : true;\r\n    const { newUrl } = before;\r\n\r\n    if (allowAction && actionNew) {\r\n      if (newUrl) {\r\n        return this.navigateTo({ path: newUrl });\r\n      }\r\n\r\n      if (typeof actionNew === 'string') {\r\n        return this.navigateTo({ path: actionNew });\r\n      }\r\n\r\n      return actionNew();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Caso exista mais de um identificador, será concatenado com '|'.\r\n   *\r\n   * Ex: { id: 1, company: 'po' }\r\n   *\r\n   * Para o endpoint /resources/:id será executada a url /resources/1|po\r\n   */\r\n  private remove(\r\n    item,\r\n    actionRemove: PoPageDynamicTableActions['remove'],\r\n    actionBeforeRemove: PoPageDynamicTableActions['beforeRemove']\r\n  ) {\r\n    const uniqueKey = this.formatUniqueKey(item);\r\n\r\n    this.subscriptions.add(\r\n      this.poPageDynamicTableActionsService\r\n        .beforeRemove(actionBeforeRemove, uniqueKey, item)\r\n        .pipe(switchMap(beforeRemove => this.deleteAction(item, actionRemove, beforeRemove)))\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private deleteAction(\r\n    item,\r\n    actionRemove: PoPageDynamicTableActions['remove'],\r\n    beforeRemove: PoPageDynamicTableBeforeRemove\r\n  ): Observable<any> {\r\n    const { allowAction, newUrl } = beforeRemove || {};\r\n    const allow = allowAction ?? true;\r\n\r\n    if (allow) {\r\n      let uniqueKey = this.formatUniqueKey(item);\r\n      const resourceToRemoveKey = this.returnResourcesKeys([item]);\r\n\r\n      if (typeof actionRemove === 'boolean' || newUrl) {\r\n        uniqueKey = newUrl ? undefined : uniqueKey;\r\n        return this.poPageDynamicService\r\n          .deleteResource(uniqueKey, newUrl)\r\n          .pipe(map(() => this.removeFromUI(resourceToRemoveKey, this.literals.removeSuccessNotification)));\r\n      }\r\n\r\n      return of(actionRemove(uniqueKey, item)).pipe(\r\n        tap(remove => {\r\n          const removeItem = remove ?? false;\r\n          this.removeFromUI(resourceToRemoveKey, this.literals.removeSuccessNotification, removeItem);\r\n        })\r\n      );\r\n    }\r\n\r\n    return of({});\r\n  }\r\n\r\n  private removeFromUI(items: Array<any>, message: string, remove = true) {\r\n    if (remove === true && items?.length) {\r\n      this.removeLocalItems(items);\r\n      this.poNotification.success(message);\r\n    }\r\n  }\r\n\r\n  private removeAll(\r\n    actionRemoveAll: PoPageDynamicTableActions['removeAll'],\r\n    actionBeforeRemoveAll: PoPageDynamicTableActions['beforeRemoveAll']\r\n  ) {\r\n    const originalResourcesKeys = this.getSelectedItemsKeys();\r\n    this.subscriptions.add(\r\n      this.poPageDynamicTableActionsService\r\n        .beforeRemoveAll(actionBeforeRemoveAll, originalResourcesKeys)\r\n        .pipe(switchMap(beforeRemove => this.deleteAllAction(actionRemoveAll, beforeRemove, originalResourcesKeys)))\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private getSelectedItemsKeys() {\r\n    const resources = this.items.filter(item => item.$selected);\r\n\r\n    if (resources.length === 0) {\r\n      return;\r\n    }\r\n    return this.returnResourcesKeys(resources);\r\n  }\r\n\r\n  private returnResourcesKeys(resources) {\r\n    return util.mapArrayByProperties(resources, this.keys);\r\n  }\r\n\r\n  private deleteAllAction(\r\n    actionRemoveAll: PoPageDynamicTableActions['removeAll'],\r\n    beforeRemoveAll: PoPageDynamicTableBeforeRemoveAll,\r\n    originalResources: Array<any>\r\n  ) {\r\n    const { allowAction, newUrl, resources } = beforeRemoveAll ?? {};\r\n    const allow = allowAction ?? true;\r\n    const resourcestoDelete = resources ?? originalResources;\r\n\r\n    if (allow && Array.isArray(resourcestoDelete)) {\r\n      if (typeof actionRemoveAll === 'boolean' || newUrl) {\r\n        return this.poPageDynamicService.deleteResources(resourcestoDelete, newUrl).pipe(\r\n          tap(() => {\r\n            this.removeFromUI(resourcestoDelete, this.literals.removeAllSuccessNotification);\r\n          })\r\n        );\r\n      }\r\n      return of(actionRemoveAll(resourcestoDelete)).pipe(\r\n        tap(removeItems => this.removeFromUI(removeItems, this.literals.removeSuccessNotification))\r\n      );\r\n    }\r\n\r\n    return of({});\r\n  }\r\n\r\n  private removeLocalItems(itemsKeysToRemove = []) {\r\n    if (itemsKeysToRemove.length) {\r\n      this.items = this.items.filter(item => {\r\n        const itemKey = this.formatUniqueKey(item);\r\n        return !itemsKeysToRemove.find(itemKeyToRemove => util.valuesFromObject(itemKeyToRemove).join('|') === itemKey);\r\n      });\r\n    }\r\n  }\r\n\r\n  private resolveUrl(item: any, path: string) {\r\n    const uniqueKey = this.formatUniqueKey(item);\r\n\r\n    return path.replace(/:id/g, uniqueKey);\r\n  }\r\n\r\n  private setPageActions(actions: PoPageDynamicTableActions) {\r\n    if (actions?.new) {\r\n      this.defaultPageActions = [{ label: this.literals.pageAction, action: this.openNew.bind(this, actions.new) }];\r\n    }\r\n  }\r\n\r\n  private transformCustomActionsToPageListAction(\r\n    customActions: Array<PoPageDynamicTableCustomAction>\r\n  ): Array<PoPageAction> {\r\n    /* istanbul ignore next */\r\n    return customActions.map(customAction => ({\r\n      label: customAction.label,\r\n      action: this.callPageCustomAction.bind(this, customAction),\r\n      disabled: this.isDisablePageCustomAction.bind(this, customAction),\r\n      ...(customAction.icon && { icon: customAction.icon }),\r\n      visible: customAction.visible\r\n    }));\r\n  }\r\n\r\n  private transformTableCustomActionsToTableActions(\r\n    tableCustomActions: Array<PoPageDynamicTableCustomTableAction>\r\n  ): Array<PoTableAction> {\r\n    return tableCustomActions.map(tableCustomAction => ({\r\n      label: tableCustomAction.label,\r\n      icon: tableCustomAction.icon,\r\n      action: this.callTableCustomAction.bind(this, tableCustomAction),\r\n      disabled: tableCustomAction.disabled,\r\n      visible: tableCustomAction.visible\r\n    }));\r\n  }\r\n\r\n  private isDisablePageCustomAction(customAction): boolean {\r\n    return customAction.selectable && !this.getSelectedItemsKeys();\r\n  }\r\n\r\n  private callPageCustomAction(customAction: PoPageDynamicTableCustomAction) {\r\n    if (customAction.action) {\r\n      const selectedItems = customAction.selectable ? this.getSelectedItemsKeys() : undefined;\r\n\r\n      const sendCustomActionSubscription = this.poPageDynamicTableActionsService\r\n        .customAction(customAction.action, selectedItems)\r\n        .subscribe();\r\n\r\n      this.subscriptions.add(sendCustomActionSubscription);\r\n    } else if (customAction.url) {\r\n      this.navigateTo({ path: customAction.url });\r\n    }\r\n  }\r\n\r\n  private callTableCustomAction(customAction: PoPageDynamicTableCustomTableAction, selectedItem) {\r\n    this.itemSelectedAction = selectedItem;\r\n    if (customAction.action) {\r\n      const sendCustomActionSubscription = this.poPageDynamicTableActionsService\r\n        .customAction(customAction.action, selectedItem)\r\n        .subscribe(updatedItem => {\r\n          if (typeof updatedItem === 'object' && updatedItem !== null) {\r\n            this.modifyUITableItem(selectedItem, util.removeKeysProperties(this.keys, updatedItem));\r\n          }\r\n        });\r\n\r\n      this.subscriptions.add(sendCustomActionSubscription);\r\n    } else if (customAction.url) {\r\n      if (isExternalLink(customAction.url)) {\r\n        openExternalLink(this.createConcatenatedUrl(customAction.concatKeys, customAction.url, selectedItem));\r\n      } else {\r\n        this.navigateTo({\r\n          path: this.createConcatenatedUrl(customAction.concatKeys, customAction.url, selectedItem)\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private setRemoveAllAction() {\r\n    const action = this._actions;\r\n    if (this.showRemove(action.removeAll)) {\r\n      this.defaultPageActions = [\r\n        ...this._defaultPageActions,\r\n        {\r\n          label: this.literals.pageActionRemoveAll,\r\n          action: this.confirmRemoveAll.bind(this, action.removeAll, action.beforeRemoveAll),\r\n          disabled: this.disableRemoveAll.bind(this)\r\n        }\r\n      ];\r\n    }\r\n  }\r\n\r\n  private disableRemoveAll(): boolean {\r\n    return !this.getSelectedItemsKeys();\r\n  }\r\n\r\n  private setTableActions(actions: PoPageDynamicTableActions) {\r\n    if (actions) {\r\n      const visibleRemove = this.showRemove(actions.remove);\r\n      this.defaultTableActions = [\r\n        {\r\n          action: this.openDetail.bind(this, actions.detail),\r\n          label: this.literals.tableActionView,\r\n          visible: !!this._actions.detail\r\n        },\r\n        {\r\n          action: this.openEdit.bind(this, actions.edit),\r\n          label: this.literals.tableActionEdit,\r\n          visible: !!this._actions.edit\r\n        },\r\n        {\r\n          action: this.openDuplicate.bind(this, actions.duplicate),\r\n          label: this.literals.tableActionDuplicate,\r\n          visible: !!this._actions.duplicate\r\n        },\r\n        {\r\n          action: this.confirmRemove.bind(this, actions.remove, actions.beforeRemove),\r\n          label: this.literals.tableActionDelete,\r\n          separator: true,\r\n          type: 'danger',\r\n          visible: visibleRemove\r\n        }\r\n      ];\r\n    }\r\n  }\r\n\r\n  private loadDataFromAPI() {\r\n    const { serviceApi: serviceApiFromRoute, serviceMetadataApi, serviceLoadApi } = this.activatedRoute.snapshot.data;\r\n\r\n    const onLoad = serviceLoadApi || this.onLoad;\r\n    this.serviceApi = serviceApiFromRoute || this.serviceApi;\r\n\r\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\r\n\r\n    const metadata$ = this.getMetadata(serviceApiFromRoute, onLoad);\r\n    const data$ = this.loadData();\r\n\r\n    this.subscriptions.add(\r\n      metadata$\r\n        .pipe(\r\n          switchMap(() => {\r\n            const initialFilters = this.getInitialValuesFromFilter();\r\n\r\n            if (!Object.keys(initialFilters).length) {\r\n              return data$;\r\n            }\r\n\r\n            return EMPTY;\r\n          })\r\n        )\r\n        .subscribe()\r\n    );\r\n  }\r\n\r\n  private getInitialValuesFromFilter() {\r\n    const initialFilters = this.filters.reduce(\r\n      (result, item) => Object.assign(result, { [item.property]: item.initValue }),\r\n      {}\r\n    );\r\n\r\n    Object.keys(initialFilters).forEach(key => {\r\n      if (!initialFilters[key]) {\r\n        delete initialFilters[key];\r\n      }\r\n    });\r\n\r\n    return initialFilters;\r\n  }\r\n\r\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\r\n    if (onLoad) {\r\n      return this.getPoDynamicPageOptions(onLoad).pipe(\r\n        tap(responsePoOption =>\r\n          this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption)\r\n        )\r\n      );\r\n    }\r\n\r\n    return of(null);\r\n  }\r\n\r\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicTableOptions> {\r\n    const originalOption: PoPageDynamicTableOptions = {\r\n      fields: this.fields,\r\n      actions: this.actions,\r\n      breadcrumb: this.breadcrumb,\r\n      title: this.title,\r\n      keepFilters: this.keepFilters,\r\n      concatFilters: this.concatFilters,\r\n      hideRemoveAllDisclaimer: this.hideRemoveAllDisclaimer,\r\n      hideCloseDisclaimers: this.hideCloseDisclaimers,\r\n      pageCustomActions: this.pageCustomActions,\r\n      tableCustomActions: this.tableCustomActions,\r\n      quickSearchWidth: this.quickSearchWidth\r\n    };\r\n\r\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicTableOptions> = {\r\n      schema: [\r\n        {\r\n          nameProp: 'fields',\r\n          merge: true,\r\n          keyForMerge: 'property'\r\n        },\r\n        {\r\n          nameProp: 'actions',\r\n          merge: true\r\n        },\r\n        {\r\n          nameProp: 'breadcrumb'\r\n        },\r\n        {\r\n          nameProp: 'title'\r\n        },\r\n        {\r\n          nameProp: 'keepFilters'\r\n        },\r\n        {\r\n          nameProp: 'quickSearchWidth'\r\n        },\r\n        {\r\n          nameProp: 'concatFilters'\r\n        },\r\n        {\r\n          nameProp: 'hideRemoveAllDisclaimer'\r\n        },\r\n        {\r\n          nameProp: 'hideCloseDisclaimers'\r\n        },\r\n        {\r\n          nameProp: 'pageCustomActions',\r\n          merge: true,\r\n          keyForMerge: 'label'\r\n        },\r\n        {\r\n          nameProp: 'tableCustomActions',\r\n          merge: true,\r\n          keyForMerge: 'label'\r\n        }\r\n      ]\r\n    };\r\n\r\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\r\n  }\r\n\r\n  private showRemove<T>(actionRemove: T): boolean {\r\n    const action = actionRemove ?? false;\r\n    if (typeof action === 'boolean') {\r\n      return action;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private updateFilterValue(filter) {\r\n    return this.fields.map(item => {\r\n      if (filter.hasOwnProperty(item.property)) {\r\n        item.initValue = filter[item.property];\r\n      }\r\n    });\r\n  }\r\n\r\n  private updatePageActions() {\r\n    this.pageActions = [...this._defaultPageActions, ...this._customPageListActions];\r\n  }\r\n\r\n  private updateTableActions() {\r\n    const defaultTableActionsWithoutActionDelete = this._defaultTableActions.filter(\r\n      tableAction => tableAction.label !== this.literals.tableActionDelete\r\n    );\r\n\r\n    const tableActionDelete = this._defaultTableActions.find(\r\n      tableAction => tableAction.label === this.literals.tableActionDelete\r\n    );\r\n\r\n    const newTableActions = [...defaultTableActionsWithoutActionDelete, ...this._customTableActions];\r\n\r\n    if (tableActionDelete) {\r\n      newTableActions.push(tableActionDelete);\r\n    }\r\n\r\n    this.tableActions = newTableActions;\r\n  }\r\n}\r\n","<po-page-dynamic-search\r\n  [p-actions]=\"pageActions\"\r\n  [p-breadcrumb]=\"breadcrumb\"\r\n  [p-hide-close-disclaimers]=\"hideCloseDisclaimers\"\r\n  [p-filters]=\"filters\"\r\n  [p-keep-filters]=\"keepFilters\"\r\n  [p-concat-filters]=\"concatFilters\"\r\n  [p-hide-remove-all-disclaimer]=\"hideRemoveAllDisclaimer\"\r\n  [p-quick-search-width]=\"quickSearchWidth\"\r\n  [p-title]=\"title\"\r\n  (p-advanced-search)=\"onAdvancedSearch($event)\"\r\n  (p-change-disclaimers)=\"onChangeDisclaimers($event)\"\r\n  (p-quick-search)=\"onQuickSearch($event)\"\r\n>\r\n  <po-table\r\n    [p-sort]=\"true\"\r\n    [p-actions]=\"tableActions\"\r\n    [p-actions-right]=\"actionRight\"\r\n    [p-selectable]=\"enableSelectionTable\"\r\n    [p-columns]=\"columns\"\r\n    [p-items]=\"items\"\r\n    [p-height]=\"height\"\r\n    [p-infinite-scroll]=\"infiniteScroll\"\r\n    [p-show-more-disabled]=\"!hasNext\"\r\n    (p-show-more)=\"showMore()\"\r\n    (p-sort-by)=\"onSort($event)\"\r\n    (p-change-visible-columns)=\"onChangeVisibleColumns($event)\"\r\n    (p-restore-column-manager)=\"onColumnRestoreManager($event)\"\r\n    (p-sort-by)=\"onSortBy($event)\"\r\n  >\r\n  </po-table>\r\n</po-page-dynamic-search>\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoTableModule } from '@po-ui/ng-components';\r\n\r\nimport { PoPageDynamicSearchModule } from '../po-page-dynamic-search/po-page-dynamic-search.module';\r\n\r\nimport { PoPageDynamicTableComponent } from './po-page-dynamic-table.component';\r\nimport { PoPageCustomizationModule } from '../../services/po-page-customization/po-page-customization.module';\r\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do template do po-page-dynamic-table.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n\r\n    PoTableModule,\r\n    PoPageDynamicSearchModule,\r\n    PoPageCustomizationModule,\r\n    PoPageDynamicModule\r\n  ],\r\n  declarations: [PoPageDynamicTableComponent],\r\n  exports: [PoPageDynamicTableComponent]\r\n})\r\nexport class PoPageDynamicTableModule {}\r\n","import { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\r\n\r\nexport class PoPageJobSchedulerInternal implements PoJobSchedulerInternal {\r\n  periodicity = 'single';\r\n  firstExecution = new Date();\r\n  firstExecutionHour = this.getCurrentHour(this.firstExecution);\r\n  recurrent = true;\r\n  frequency = {};\r\n\r\n  private getCurrentHour(date: Date): string {\r\n    const hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\r\n    const minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { addZero, convertDateToISOExtended } from '../../utils/util';\r\nimport { PoDynamicFormField } from '@po-ui/ng-components';\r\n\r\nimport { PoJobScheduler } from './interfaces/po-job-scheduler.interface';\r\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\r\n\r\n@Injectable()\r\nexport class PoPageJobSchedulerService {\r\n  readonly headers: HttpHeaders = new HttpHeaders({\r\n    'X-PO-SCREEN-LOCK': 'true'\r\n  });\r\n\r\n  private endpoint = '/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  configServiceApi(config: { endpoint?: string } = {}) {\r\n    this.endpoint = config.endpoint;\r\n  }\r\n\r\n  // Cria um recurso\r\n  createResource(resource): Observable<any> {\r\n    const newResouce = this.convertToJobScheduler(resource);\r\n\r\n    return this.http.post(`${this.endpoint}`, newResouce, { headers: this.headers });\r\n  }\r\n\r\n  getHeadProcesses() {\r\n    const headers = { 'X-PO-No-Error': 'true' };\r\n\r\n    return this.http.head(`${this.endpoint}/processes`, { headers });\r\n  }\r\n\r\n  // Busca parametros pelo processo id\r\n  getParametersByProcess(processId: string | number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.endpoint}/processes/${processId}/parameters`, { headers: this.headers })\r\n      .pipe(map((resource: { items: Array<PoDynamicFormField> }) => resource.items));\r\n  }\r\n\r\n  // Busca um único recurso\r\n  getProcess(id: string | number): Observable<any> {\r\n    return this.http.get(`${this.endpoint}/processes/${id}`, { headers: this.headers });\r\n  }\r\n\r\n  // Busca uma lista de processos\r\n  getProcesses(params: {} = {}): Observable<any> {\r\n    return this.http.get(`${this.endpoint}/processes`, { params });\r\n  }\r\n\r\n  // Busca um único recurso\r\n  getResource(id: string | number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.endpoint}/${id}`, { headers: this.headers })\r\n      .pipe(map(resource => this.convertToJobSchedulerInternal(resource)));\r\n  }\r\n\r\n  // Atualiza um recurso\r\n  updateResource(id, resource): Observable<any> {\r\n    const newResouce = this.convertToJobScheduler(resource);\r\n    return this.http.put(`${this.endpoint}/${id}`, newResouce, { headers: this.headers });\r\n  }\r\n\r\n  convertToJobScheduler(jobSchedulerInternal): PoJobScheduler {\r\n    const jobScheduler = { ...jobSchedulerInternal };\r\n\r\n    if (jobSchedulerInternal.periodicity) {\r\n      if (jobSchedulerInternal.periodicity === 'single') {\r\n        jobScheduler.recurrent = false;\r\n      } else {\r\n        Object.assign(jobScheduler, this.convertToPeriodicity(jobSchedulerInternal));\r\n      }\r\n    }\r\n\r\n    if (jobSchedulerInternal.firstExecutionHour) {\r\n      jobScheduler.firstExecution = this.replaceHourFirstExecution(\r\n        jobSchedulerInternal.firstExecution,\r\n        jobSchedulerInternal.firstExecutionHour\r\n      );\r\n    }\r\n\r\n    if (jobSchedulerInternal.frequency && jobSchedulerInternal.frequency.type) {\r\n      jobScheduler.rangeExecutions = {\r\n        frequency: { ...jobSchedulerInternal.frequency }\r\n      };\r\n\r\n      if (jobSchedulerInternal.rangeLimitHour) {\r\n        const splitRangeLimitHour = jobSchedulerInternal.rangeLimitHour.split(':');\r\n\r\n        jobScheduler.rangeExecutions.rangeLimit = {\r\n          hour: parseInt(splitRangeLimitHour[0], 10),\r\n          minute: parseInt(splitRangeLimitHour[1], 10)\r\n        };\r\n      }\r\n\r\n      if (jobSchedulerInternal.rangeLimitDay) {\r\n        jobScheduler.rangeExecutions.rangeLimit = {\r\n          ...jobScheduler.rangeExecutions.rangeLimit,\r\n          day: jobSchedulerInternal.rangeLimitDay\r\n        };\r\n      }\r\n    }\r\n\r\n    if (!Object.keys(this.returnValidExecutionParameter(jobScheduler.executionParameter)).length) {\r\n      delete jobScheduler.executionParameter;\r\n    }\r\n\r\n    this.removeInvalidKeys(jobScheduler);\r\n\r\n    return jobScheduler;\r\n  }\r\n\r\n  convertToJobSchedulerInternal(jobScheduler = <any>{}): PoJobSchedulerInternal {\r\n    const jobSchedulerInternal = { ...jobScheduler };\r\n\r\n    if (jobScheduler.firstExecution) {\r\n      jobSchedulerInternal.firstExecutionHour = this.getHourFirstExecution(jobScheduler.firstExecution);\r\n    }\r\n\r\n    Object.assign(jobSchedulerInternal, this.convertToPeriodicityInternal(jobScheduler));\r\n\r\n    if (jobScheduler.rangeExecutions) {\r\n      jobSchedulerInternal.rangeLimitHour = `${\r\n        jobScheduler.rangeExecutions.rangeLimit.hour < 10\r\n          ? '0' + jobScheduler.rangeExecutions.rangeLimit.hour\r\n          : jobScheduler.rangeExecutions.rangeLimit.hour\r\n      }:${\r\n        jobScheduler.rangeExecutions.rangeLimit.minute < 10\r\n          ? '0' + jobScheduler.rangeExecutions.rangeLimit.minute\r\n          : jobScheduler.rangeExecutions.rangeLimit.minute\r\n      }`;\r\n      jobSchedulerInternal.rangeLimitDay = jobScheduler.rangeExecutions.rangeLimit.day;\r\n      jobSchedulerInternal.frequency = {\r\n        type: jobScheduler.rangeExecutions.frequency.type,\r\n        value: jobScheduler.rangeExecutions.frequency.value\r\n      };\r\n    }\r\n\r\n    this.removeInvalidKeys(jobSchedulerInternal, ['weekly', 'monthly', 'daily']);\r\n\r\n    return jobSchedulerInternal;\r\n  }\r\n\r\n  private convertToPeriodicity(value: {\r\n    periodicity: string;\r\n    dayOfMonth?: string;\r\n    daysOfWeek?: number;\r\n    hour?: string;\r\n  }) {\r\n    const newValue = {};\r\n    const valuePeriodicity = value.periodicity;\r\n\r\n    if (valuePeriodicity) {\r\n      newValue[valuePeriodicity] = {};\r\n\r\n      if (valuePeriodicity === 'monthly') {\r\n        newValue[valuePeriodicity].day = value.dayOfMonth ? parseInt(value.dayOfMonth, 10) : 0;\r\n      } else if (valuePeriodicity === 'weekly') {\r\n        newValue[valuePeriodicity].daysOfWeek = value.daysOfWeek;\r\n      }\r\n\r\n      newValue[valuePeriodicity].hour = value.hour ? parseInt(value.hour.split(':')[0], 10) : 0;\r\n      newValue[valuePeriodicity].minute = value.hour ? parseInt(value.hour.split(':')[1], 10) : 0;\r\n    }\r\n\r\n    return newValue;\r\n  }\r\n\r\n  private convertToPeriodicityInternal(value = <any>{}) {\r\n    if (value.monthly) {\r\n      return {\r\n        periodicity: 'monthly',\r\n        hour: `${addZero(value.monthly.hour)}:${addZero(value.monthly.minute)}`,\r\n        dayOfMonth: value.monthly.day\r\n      };\r\n    } else if (value.daily) {\r\n      return {\r\n        periodicity: 'daily',\r\n        hour: `${addZero(value.daily.hour)}:${addZero(value.daily.minute)}`\r\n      };\r\n    } else if (value.weekly) {\r\n      return {\r\n        periodicity: 'weekly',\r\n        hour: `${addZero(value.weekly.hour)}:${addZero(value.weekly.minute)}`,\r\n        daysOfWeek: [...value.weekly.daysOfWeek]\r\n      };\r\n    } else {\r\n      return {\r\n        periodicity: 'single'\r\n      };\r\n    }\r\n  }\r\n\r\n  private getCurrentHour(date: Date): string {\r\n    const hours = addZero(date.getHours());\r\n    const minutes = addZero(date.getMinutes());\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  private getHourFirstExecution(firstExecutionDate: string): string {\r\n    return this.getCurrentHour(new Date(firstExecutionDate));\r\n  }\r\n\r\n  private removeInvalidKeys(value: object, keys?: Array<string>) {\r\n    const invalidKeys = keys || [\r\n      'periodicity',\r\n      'hour',\r\n      'minute',\r\n      'day',\r\n      'daysOfWeek',\r\n      'dayOfMonth',\r\n      'firstExecutionHour',\r\n      'frequency',\r\n      'rangeLimitHour',\r\n      'rangeLimitDay'\r\n    ];\r\n\r\n    Object.keys(value).forEach(key => {\r\n      if (invalidKeys.includes(key)) {\r\n        delete value[key];\r\n      } else if (key === 'rangeExecutions' && value['periodicity'] === 'single') {\r\n        delete value[key];\r\n      }\r\n    });\r\n  }\r\n\r\n  private replaceHourFirstExecution(date: string, time: string): string {\r\n    const firstExecutionDate = new Date(date);\r\n\r\n    const timeSplited = time.split(':');\r\n\r\n    const hours = parseInt(timeSplited[0], 10);\r\n    const minutes = parseInt(timeSplited[1], 10);\r\n\r\n    firstExecutionDate.setHours(hours, minutes);\r\n\r\n    return convertDateToISOExtended(firstExecutionDate);\r\n  }\r\n\r\n  private returnValidExecutionParameter(parameter: object) {\r\n    const newParameter = { ...parameter };\r\n\r\n    for (const key in newParameter) {\r\n      if (newParameter.hasOwnProperty(key) && newParameter[key] === undefined) {\r\n        delete newParameter[key];\r\n      }\r\n    }\r\n\r\n    return newParameter;\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Input, Directive, OnDestroy } from '@angular/core';\r\n\r\nimport { PoBreadcrumb, PoDynamicFormField } from '@po-ui/ng-components';\r\n\r\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\r\nimport { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';\r\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { PoJobSchedulerCustomSteps } from './interfaces/po-job-scheduler-custom-steps.interface';\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-page-job-scheduler` é uma página para criação e atualização de agendamentos da execução de processos (Job Scheduler),\r\n * como por exemplo: a geração da folha de pagamento dos funcionários.\r\n *\r\n * Para utilizar esta página, basta informar o serviço (endpoint) para consumo,\r\n * sem a necessidade de criar componentes e tratamentos dos dados.\r\n *\r\n * Veja mais sobre os padrões utilizados nas requisições no [Guia de implementação de APIs](guides/api).\r\n */\r\n@Directive()\r\nexport class PoPageJobSchedulerBaseComponent implements OnDestroy {\r\n  /** Objeto com as propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\r\n\r\n  /**\r\n   * Endpoint usado pelo componente para busca dos processos e parâmetros que serão utilizados para criação e edição dos agendamentos.\r\n   *\r\n   * #### Processos\r\n   *\r\n   * Os processos são as tarefas que estarão disponíveis para o usuário poder fazer os agendamentos.\r\n   * Ao inicializar o componente, será feito uma requisição `GET` para o endpoint `{service-api}/processes`, para buscar\r\n   * essa lista de processos.\r\n   *\r\n   * Este endpoint `{service-api}/processes` deve retornar uma lista de objetos que seguem a definição de dados abaixo:\r\n   *\r\n   * ```\r\n   * GET {service-api}/processes\r\n   * ```\r\n   *\r\n   * ```\r\n   * {\r\n   *   items: [\r\n   *     { \"processID\": \"ac4f\", \"description\": \"Gerar folha de pagamento\" },\r\n   *     { \"processID\": \"df6l\", \"description\": \"Relatório de imposto a recolher\" },\r\n   *     { \"processID\": \"dk3p\", \"description\": \"Títulos em aberto\" },\r\n   *   ]\r\n   * }\r\n   * ```\r\n   *\r\n   * Desta forma será renderizado um componente para selecionar o processo e/ou filtrá-los.\r\n   *\r\n   * Para realizar o filtro de busca do processo, será feita uma requisição enviando o conteúdo digitado na busca através do\r\n   * parâmetro `search`. Da seguinte forma:\r\n   *\r\n   * ```\r\n   * GET {service-api}/processes?search=relatorio\r\n   * ```\r\n   *\r\n   * > Veja mais sobre paginação e filtros no [Guia de implementação de APIs](guides/api).\r\n   * Caso seja informada a propriedade `p-parameters` não serão realizadas as requisições de processos e nem de parametros automaticamente.\r\n   *\r\n   * Também é possível fazer um agendamento de um processo específico, sem que seja necessário um endpoint para busca desses\r\n   * processos. Então, caso o endpoint `{service-api}/processes` não seja válido, será apresentado um campo de entrada de\r\n   * texto para o usuário informar diretamente\r\n   * o **identificador do processo - `processID`** e ao salvar será enviado um `POST` para o endpoint difinido `serviceApi` conforme abaixo:\r\n   *\r\n   * ```\r\n   * POST {service-api}\r\n   * ```\r\n   *\r\n   * *Request payload* - estrutura de dados enviada no corpo da requisição conforme interface `PoJobScheduler`:\r\n   *\r\n   * ```\r\n   * {\r\n   *   \"daily\": { \"hour\": 10, \"minute\": 12 },\r\n   *   \"firstExecution\": \"2018-12-07T00:00:01-00:00\",\r\n   *   \"recurrent\": true,\r\n   *   \"processID\": \"ac0405\"\r\n   *   ...\r\n   * }\r\n   * ```\r\n   *\r\n   * Caso seja necessário informar parâmetros e adicionar configurações no processo selecionado, será realizado um `GET`\r\n   * como exemplificado abaixo. Os parâmetros devem retornar uma lista de objetos que seguem a interface\r\n   * [PoDynamicFormField](/documentation/po-dynamic-form). Porém, caso utilizar a propriedade `p-parameters` o componente não\r\n   * realizará a busca automática e o campo de processos não será exibido.\r\n   *\r\n   * ```\r\n   * GET {service-api}/processes/:id/parameters\r\n   * ...\r\n   * {\r\n   *   items: [\r\n   *     { \"property\": \"vencimento\", type: \"date\" },\r\n   *     { \"property\": \"imposto-retido\", \"label\": \"Imposto Retido\", type: \"boolean\" }\r\n   *   ]\r\n   * }\r\n   * ```\r\n   *\r\n   * #### Salvar e Atualizar\r\n   *\r\n   * Para salvar o agendamento, será feita uma requisição de criação, passando os valores preenchidos pelo usuário via *payload*.\r\n   * Abaixo uma requisição `POST` disparada, onde as propriedades do *Job Scheduler* foram preenchidas:\r\n   *\r\n   * ```\r\n   *  POST {service-api}\r\n   * ```\r\n   *\r\n   * *Request payload* - estrutura de dados enviada no corpo da requisição conforme interface `PoJobScheduler`:\r\n   *\r\n   * ```\r\n   * {\r\n   *   \"firstExecution\": \"2018-12-07T00:00:01-00:00\",\r\n   *   \"recurrent\": true,\r\n   *   \"monthly\": { \"day\": 1, \"hour\": 10, \"minute\": 0 },\r\n   *   \"processID\": \"ac0405\",\r\n   *   \"rangeExecutions: { \"frequency\": { \"type\": \"hour\", \"value\": 2 }, \"rangeLimit\": { \"hour\": 18, \"minute\": 0, \"day\": 20 } }\r\n   * }\r\n   * ```\r\n   *\r\n   * Caso queira que o componente carregue um agendamento já existente, deve ser incluído um parâmetro na rota chamado `id`.\r\n   *\r\n   * Exemplo de configuração de rota:\r\n   *\r\n   * ```\r\n   *  RouterModule.forRoot([\r\n   *    ...\r\n   *    { path: 'edit/:id', component: ExampleJobSchedulerComponent },\r\n   *    ...\r\n   *  ],\r\n   * ```\r\n   *\r\n   * Baseado nisso, na inicialização do template será disparado uma requisição para buscar o recurso que será editado.\r\n   *\r\n   * ```\r\n   * GET {service-api}/{id}\r\n   * ```\r\n   *\r\n   * Ao atualizar o agendamento, será disparado um `PUT` com os dados preenchidos.\r\n   * Veja abaixo uma requisição `PUT` disparada, onde a propriedade *recurrent* e *daily* foram atualizadas:\r\n   *\r\n   * ```\r\n   *  PUT {service-api}/{id}\r\n   * ```\r\n   *\r\n   * *Request payload* - estrutura de dados enviada no corpo da requisição conforme interface `PoJobScheduler`:\r\n   *\r\n   * ```\r\n   * {\r\n   *   \"firstExecution\": \"2018-12-07T00:00:01-00:00\",\r\n   *   \"recurrent\": true,\r\n   *   \"processID\": \"ac0405\",\r\n   *   \"monthly\": { \"day\": 1, \"hour\": 10, \"minute\": 0 },\r\n   *   \"processID\": \"ac0405\",\r\n   *   \"rangeExecutions: { \"frequency\": { \"type\": \"hour\", \"value\": 2 }, \"rangeLimit\": { \"hour\": 18, \"minute\": 0, \"day\": 20 } }\r\n   * }\r\n   * ```\r\n   */\r\n  @Input('p-service-api') serviceApi: string;\r\n\r\n  /** Título da página. */\r\n  @Input('p-title') title: string;\r\n\r\n  /**\r\n   * Parâmetros que serão utilizados para criação e edição dos agendamentos.\r\n   *\r\n   * Ao utilizar esta propriedade, o componente não buscará automaticamente os parâmetros da API e o campo para preenchimento do processo não será exibido.\r\n   *\r\n   */\r\n  @Input('p-parameters') parameters: Array<PoDynamicFormField> = [];\r\n\r\n  @Input('p-value') set value(value: any) {\r\n    this.model = this.poPageJobSchedulerService.convertToJobSchedulerInternal(value);\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   * @todo stepsCustomization\r\n   * Componente customizado que será renderizado na etapa de parametrizações\r\n   */\r\n  // @Input('p-custom-steps') stepsCustomization: PoJobSchedulerCustomSteps; //@todo => change to ng-template value\r\n\r\n  model: PoJobSchedulerInternal = new PoPageJobSchedulerInternal();\r\n\r\n  private _subscription = new Subscription();\r\n\r\n  constructor(protected poPageJobSchedulerService: PoPageJobSchedulerService) {}\r\n\r\n  ngOnDestroy() {\r\n    this._subscription.unsubscribe();\r\n  }\r\n\r\n  protected loadData(id: string | number) {\r\n    if (!id) {\r\n      this.model = this.model || new PoPageJobSchedulerInternal();\r\n      return;\r\n    }\r\n\r\n    this._subscription.add(\r\n      this.poPageJobSchedulerService.getResource(id).subscribe(\r\n        (response: PoJobSchedulerInternal) => {\r\n          this.model = response;\r\n        },\r\n        () => {\r\n          this.model = new PoPageJobSchedulerInternal();\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  protected markAsDirtyInvalidControls(controls: { [key: string]: AbstractControl }) {\r\n    for (const key in controls) {\r\n      if (controls.hasOwnProperty(key)) {\r\n        const control = controls[key];\r\n\r\n        if (control.invalid) {\r\n          control.markAsDirty();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","export const poPageJobSchedulerLiteralsDefault = {\r\n  en: {\r\n    at: 'at',\r\n    back: 'Back',\r\n    next: 'Next',\r\n    periodicity: 'Periodicity',\r\n    execution: 'Execution',\r\n    process: 'Process',\r\n    enterProcess: 'Enter a process',\r\n    recurrent: 'Recurrent',\r\n    single: 'Single',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    scheduling: 'Scheduling',\r\n    parameterization: 'Parameterization',\r\n    conclude: 'Conclude',\r\n    firstExecution: 'First Execution',\r\n    startTime: 'Start time',\r\n    endTime: 'End time',\r\n    time: 'Time',\r\n    hour: 'Hour',\r\n    minute: 'Minute',\r\n    day: 'Day',\r\n    endDay: 'End day',\r\n    startDay: 'Start day',\r\n    weekDays: 'Week days',\r\n    sunday: 'Sunday',\r\n    monday: 'Monday',\r\n    tuesday: 'Tuesday',\r\n    wednesday: 'Wednesday',\r\n    thursday: 'Thursday',\r\n    friday: 'Friday',\r\n    saturday: 'Saturday',\r\n    parameters: 'Parameters',\r\n    yes: 'Yes',\r\n    no: 'No',\r\n    notReported: 'Not reported',\r\n    periodicityData: 'Periodicity data',\r\n    confirmation: 'Confirmation',\r\n    confirmSaveMessage: 'Are you sure you want to complete this schedule?',\r\n    confirmUpdateMessage: 'Are you sure you want to update this schedule?',\r\n    saveNotificationSuccessUpdate: 'Successfully updated scheduling',\r\n    saveNotificationSuccessSave: 'Successfully saved scheduling',\r\n    parametersNotFound: 'Parameters not found.',\r\n    frequency: 'Frequency',\r\n    to: 'to',\r\n    from: 'from'\r\n  },\r\n  es: {\r\n    at: 'a las',\r\n    back: 'Volver',\r\n    next: 'Avanzar',\r\n    periodicity: 'Periodicidad',\r\n    execution: 'Ejecución',\r\n    process: 'Proceso',\r\n    enterProcess: 'Informe un proceso',\r\n    recurrent: 'Recurrente',\r\n    single: 'Única',\r\n    daily: 'Diaria',\r\n    weekly: 'Semanal',\r\n    monthly: 'Mensual',\r\n    scheduling: 'Programación',\r\n    parameterization: 'Parametrización',\r\n    conclude: 'Completar',\r\n    firstExecution: 'Primera ejecución',\r\n    startTime: 'Hora de inicio',\r\n    endTime: 'Hora de finalización',\r\n    time: 'Horário',\r\n    hour: 'Hora',\r\n    minute: 'Minute',\r\n    day: 'Día',\r\n    endDay: 'Último Día',\r\n    startDay: 'Día de inicio',\r\n    weekDays: 'Dias de la semana',\r\n    sunday: 'Domingo',\r\n    monday: 'Lunes',\r\n    tuesday: 'Martes',\r\n    wednesday: 'Miércoles',\r\n    thursday: 'Jueves',\r\n    friday: 'Viernes',\r\n    saturday: 'Sábado',\r\n    parameters: 'Parámetros',\r\n    yes: 'Sí',\r\n    no: 'No',\r\n    notReported: 'No informado',\r\n    periodicityData: 'Dados da periodicidade',\r\n    confirmation: 'Confirmación',\r\n    confirmSaveMessage: '¿Está seguro de que desea completar esta programación de proceso?',\r\n    confirmUpdateMessage: '¿Está seguro de que desea cambiar esta programación de proceso?',\r\n    saveNotificationSuccessUpdate: 'Programación de proceso actualizada con éxito.',\r\n    saveNotificationSuccessSave: 'Programación de proceso salvo con éxito.',\r\n    parametersNotFound: 'No se encontraron parámetros.',\r\n    frequency: 'Frecuencia',\r\n    to: 'de',\r\n    from: 'a'\r\n  },\r\n  pt: {\r\n    at: 'às',\r\n    back: 'Voltar',\r\n    next: 'Avançar',\r\n    periodicity: 'Periodicidade',\r\n    execution: 'Execução',\r\n    process: 'Processo',\r\n    enterProcess: 'Informe um processo',\r\n    recurrent: 'Recorrente',\r\n    single: 'Única',\r\n    daily: 'Diária',\r\n    weekly: 'Semanal',\r\n    monthly: 'Mensal',\r\n    scheduling: 'Agendamento',\r\n    parameterization: 'Parametrização',\r\n    conclude: 'Concluir',\r\n    firstExecution: 'Primeira execução',\r\n    startTime: 'Horário inicial',\r\n    endTime: 'Horário final',\r\n    time: 'Horário',\r\n    hour: 'Hora',\r\n    minute: 'Minuto',\r\n    day: 'Dia',\r\n    endDay: 'Dia final',\r\n    startDay: 'Dia inicial',\r\n    weekDays: 'Dias de semana',\r\n    sunday: 'Domingo',\r\n    monday: 'Segunda-feira',\r\n    tuesday: 'Terça-feira',\r\n    wednesday: 'Quarta-feira',\r\n    thursday: 'Quinta-feira',\r\n    friday: 'Sexta-feira',\r\n    saturday: 'Sábado',\r\n    parameters: 'Parâmetros',\r\n    yes: 'Sim',\r\n    no: 'Não',\r\n    notReported: 'Não informado',\r\n    periodicityData: 'Dados da periodicidade',\r\n    confirmation: 'Confirmação',\r\n    confirmSaveMessage: 'Tem certeza que deseja concluir este agendamento de processo?',\r\n    confirmUpdateMessage: 'Tem certeza que deseja alterar este agendamento de processo?',\r\n    saveNotificationSuccessUpdate: 'Agendamento de processo atualizado com sucesso.',\r\n    saveNotificationSuccessSave: 'Agendamento de processo salvo com sucesso.',\r\n    parametersNotFound: 'Parâmetros não foram encontrados.',\r\n    frequency: 'Frequência',\r\n    to: 'das',\r\n    from: 'até'\r\n  },\r\n  ru: {\r\n    at: 'в',\r\n    back: 'Назад',\r\n    next: 'Следующий',\r\n    periodicity: 'Периодичность',\r\n    execution: 'Выполнение',\r\n    process: 'Процесс',\r\n    enterProcess: 'Укажите процесс',\r\n    recurrent: 'Периодически',\r\n    single: 'Одиночный',\r\n    daily: 'Ежедневно',\r\n    weekly: 'Еженедельно',\r\n    monthly: 'Ежемесячно',\r\n    scheduling: 'Планирование',\r\n    parameterization: 'Параметризация',\r\n    conclude: 'Завершить',\r\n    firstExecution: 'Первичное выполнение',\r\n    startTime: 'начальное время',\r\n    endTime: 'время окончания',\r\n    time: 'расписание',\r\n    hour: 'Час',\r\n    day: 'День',\r\n    minute: 'минута',\r\n    endDay: 'последний день',\r\n    startDay: 'день начала',\r\n    weekDays: 'Рабочие дни',\r\n    sunday: 'Воскресенье',\r\n    monday: 'Понедельник',\r\n    tuesday: 'Вторник',\r\n    wednesday: 'Среда',\r\n    thursday: 'Четверг',\r\n    friday: 'Пятница',\r\n    saturday: 'Суббота',\r\n    parameters: 'Параметры',\r\n    yes: 'Да',\r\n    no: 'Нет',\r\n    notReported: 'Не сообщается',\r\n    periodicityData: 'Данные о периодичности',\r\n    confirmation: 'Подтверждение',\r\n    confirmSaveMessage: 'Вы уверены, что хотите завершить это расписание?',\r\n    confirmUpdateMessage: 'Вы уверены, что хотите обновить это расписание?',\r\n    saveNotificationSuccessUpdate: 'Расписание успешно обновлено',\r\n    saveNotificationSuccessSave: 'Расписание успешно сохранено ',\r\n    parametersNotFound: 'Параметры не найдены',\r\n    frequency: 'Частота',\r\n    to: 'с',\r\n    from: 'до'\r\n  }\r\n};\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n * @usedBy PoPageJobScheduler\r\n *\r\n * @description\r\n *\r\n * Esta diretiva permite personalizar o conteúdo da etapa de parametrização do componente de PoPageJobScheduler.\r\n *\r\n * > .....\r\n *\r\n * Para personalizar o conteúdo de cada item da lista deve-se utilizar a diretiva `p-combo-option-template` com `ng-template`\r\n * dentro da *tag* `po-combo`.\r\n *\r\n * Para obter a referência do item atual utilize `let-option`, com isso você terá acesso aos valores e poderá personalizar sua exibição.\r\n *\r\n * Esta diretiva compõe-se de dois meios para uso, de forma explícita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\r\n * @todo documentar\r\n * ```\r\n * ...\r\n * <po-combo\r\n *   name=\"combo\"\r\n *   [(ngModel)]=\"combo\"\r\n *   [p-options]=\"options\">\r\n *     <ng-template p-combo-option-template let-option>\r\n *       <option-template [option]=\"option\"></option-template>\r\n *     </ng-template>\r\n * </po-combo>\r\n * ...\r\n * ```\r\n *\r\n * ```\r\n * ...\r\n * <po-combo\r\n *   name=\"combo\"\r\n *   [(ngModel)]=\"combo\"\r\n *   [p-options]=\"options\">\r\n *     <div *p-combo-option-template=\"let option\">\r\n *       <option-template [option]=\"option\"></option-template>\r\n *     </div>\r\n * </po-combo>\r\n * ...\r\n *\r\n * ```\r\n * Para o caso de personalização de opções com agrupamentos, deve-se seguir a mesma orientação acima. Porém, cabe ao desenvolvedor\r\n * a responsabilidade de estilização dos elementos da lista, tais como título e links dos grupos. Abaixo há um exemplo de aplicação:\r\n *\r\n * ```\r\n * ...\r\n * <ng-template p-combo-option-template let-option>\r\n *   <ng-container *ngIf=\"option.options; then optionsGroupTitle; else optionsGroupList\"></ng-container>\r\n *   <ng-template #optionsGroupTitle>\r\n *     <p class=\"po-combo-item-title\" [innerHtml]=\"option.label\"></p>\r\n *   </ng-template>\r\n *   <ng-template #optionsGroupList>\r\n *     <div class=\"po-combo-item\">\r\n *       <div class=\"po-row\">\r\n *         <po-avatar class=\"po-md-1\" p-size=\"sm\"></po-avatar>\r\n *         <div class=\"po-md-11\" [innerHtml]=\"option.label\"></div>\r\n *       </div>\r\n *     </div>\r\n *   </ng-template>\r\n * </ng-template>\r\n * ...\r\n *\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[p-job-scheduler-parameters-template]'\r\n})\r\nexport class PoJobSchedulerParametersTemplateDirective {\r\n  // Necessário manter templateRef para o funcionamento do row template. @todo\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","/* import { NgModule } from '@angular/core';\r\nimport { PoJobSchedulerParametersTemplateDirective } from './po-job-scheduler-parameters-template.directive';\r\n\r\n@NgModule({\r\n  declarations: [PoJobSchedulerParametersTemplateDirective],\r\n  exports: [PoJobSchedulerParametersTemplateDirective],\r\n})\r\nexport class PoJobSchedulerParametersTemplateModule { }\r\n */\r\n\r\nexport {}","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PoLookupFilter } from '@po-ui/ng-components';\r\n\r\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\r\n\r\n@Injectable()\r\nexport class PoPageJobSchedulerLookupService implements PoLookupFilter {\r\n  constructor(private poPageJobSchedulerService: PoPageJobSchedulerService) {}\r\n\r\n  getFilteredItems({ filter, page, pageSize }): Observable<any> {\r\n    const params = { page, pageSize, search: filter };\r\n\r\n    return this.poPageJobSchedulerService.getProcesses(params);\r\n  }\r\n\r\n  getObjectByValue(processId: string): Observable<any> {\r\n    return this.poPageJobSchedulerService.getProcess(processId);\r\n  }\r\n}\r\n","<form #formExecution=\"ngForm\">\n  <div class=\"po-row\">\n    <ng-container *ngIf=\"existProcessAPI; then lookupProcessesID; else inputProcessesID\"></ng-container>\n  </div>\n\n  <div class=\"po-row\">\n    <po-divider class=\"po-md-12\" [p-label]=\"literals.firstExecution\"></po-divider>\n\n    <po-datepicker\n      class=\"po-md-4\"\n      name=\"firstExecution\"\n      [(ngModel)]=\"value.firstExecution\"\n      p-placeholder=\"dd/mm/aaaa\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.day\"\n      [p-min-date]=\"startDateFirstExecution\"\n    >\n    </po-datepicker>\n\n    <po-input\n      class=\"po-md-2\"\n      name=\"firstExecutionHour\"\n      [(ngModel)]=\"value.firstExecutionHour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.time\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n  </div>\n\n  <hr />\n\n  <div class=\"po-row\">\n    <po-radio-group\n      class=\"po-sm-12\"\n      name=\"periodicity\"\n      [(ngModel)]=\"value.periodicity\"\n      p-columns=\"4\"\n      p-required\n      [p-label]=\"literals.periodicity\"\n      [p-options]=\"periodicityOptions\"\n      (p-change)=\"onChangePeriodicityOptions($event)\"\n    >\n    </po-radio-group>\n\n    <ng-container *ngIf=\"value.periodicity !== 'single'\">\n      <div class=\"po-row\">\n        <po-switch\n          class=\"po-md-12\"\n          name=\"containsFrequency\"\n          [(ngModel)]=\"containsFrequency\"\n          [p-label]=\"literals.frequency\"\n          [p-label-off]=\"literals.no\"\n          [p-label-on]=\"literals.yes\"\n          (p-change)=\"onChangeContainsFrequency($event)\"\n        >\n        </po-switch>\n        <ng-container *ngIf=\"containsFrequency\">\n          <po-radio-group\n            class=\"po-md-10\"\n            name=\"frequencyType\"\n            p-required\n            [(ngModel)]=\"value.frequency.type\"\n            [p-columns]=\"3\"\n            [p-options]=\"frequencyOptions\"\n            (p-change)=\"onChangeFrequencyOptions()\"\n          >\n          </po-radio-group>\n\n          <po-number class=\"po-md-2\" name=\"frequencyValue\" p-required [(ngModel)]=\"value.frequency.value\"> </po-number>\n        </ng-container>\n      </div>\n\n      <div class=\"po-row\">\n        <po-divider class=\"po-md-12\" [p-label]=\"literals.periodicityData\"> </po-divider>\n\n        <ng-container *ngTemplateOutlet=\"periodicityTemplates[value.periodicity]\"> </ng-container>\n      </div>\n\n      <div class=\"po-row\">\n        <po-switch\n          class=\"po-md-3\"\n          name=\"recurrent\"\n          [(ngModel)]=\"value.recurrent\"\n          [p-label]=\"literals.recurrent\"\n          [p-label-off]=\"literals.no\"\n          [p-label-on]=\"literals.yes\"\n        >\n        </po-switch>\n      </div>\n    </ng-container>\n  </div>\n\n  <ng-template #lookupProcessesID>\n    <po-lookup\n      *ngIf=\"noParameters && noCustomParamsComponent\"\n      class=\"po-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      p-field-label=\"description\"\n      p-field-value=\"processID\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-filter-service]=\"poPageJobSchedulerLookup\"\n      [p-label]=\"literals.process\"\n      [p-placeholder]=\"literals.enterProcess\"\n    >\n    </po-lookup>\n  </ng-template>\n\n  <ng-template #inputProcessesID>\n    <po-input\n      class=\"po-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.process\"\n      [p-placeholder]=\"literals.enterProcess\"\n    >\n    </po-input>\n  </ng-template>\n\n  <ng-template #dailyTemplate>\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n  </ng-template>\n\n  <ng-template #weeklyTemplate>\n    <div class=\"po-row\">\n      <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n    </div>\n\n    <po-checkbox-group\n      class=\"po-md-12\"\n      name=\"daysOfWeek\"\n      [(ngModel)]=\"value.daysOfWeek\"\n      p-columns=\"4\"\n      p-required\n      [p-label]=\"literals.weekDays\"\n      [p-options]=\"weekDays\"\n    >\n    </po-checkbox-group>\n  </ng-template>\n\n  <ng-template #monthlyTemplate>\n    <po-number\n      class=\"po-md-3\"\n      name=\"dayOfMonth\"\n      [(ngModel)]=\"value.dayOfMonth\"\n      p-required\n      [p-error-pattern]=\"'Dia inválido'\"\n      [p-label]=\"dayLabel\"\n      [p-max]=\"31\"\n      [p-pattern]=\"dayPattern\"\n    >\n    </po-number>\n\n    <po-number\n      *ngIf=\"containsFrequency\"\n      class=\"po-md-3\"\n      name=\"rangeLimitDay\"\n      [(ngModel)]=\"value.rangeLimitDay\"\n      p-required\n      [p-error-pattern]=\"'Dia inválido'\"\n      [p-label]=\"literals.endDay\"\n      [p-max]=\"31\"\n      [p-pattern]=\"dayPattern\"\n    >\n    </po-number>\n\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n  </ng-template>\n\n  <ng-template #inputHourTemplate>\n    <po-input\n      class=\"po-md-2\"\n      name=\"hour\"\n      [(ngModel)]=\"value.hour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-label]=\"hourLabel\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n\n    <po-input\n      *ngIf=\"containsFrequency && value.frequency.type !== 'day'\"\n      class=\"po-md-2\"\n      name=\"rangeLimitHour\"\n      [(ngModel)]=\"value.rangeLimitHour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-label]=\"literals.endTime\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n  </ng-template>\n</form>\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { PoCheckboxGroupOption, PoRadioGroupOption } from '@po-ui/ng-components';\n\nimport { isTypeof } from '../../../utils/util';\n\nimport { PoPageJobSchedulerLookupService } from '../po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerService } from '../po-page-job-scheduler.service';\n\n@Component({\n  selector: 'po-page-job-scheduler-execution',\n  templateUrl: 'po-page-job-scheduler-execution.component.html'\n})\nexport class PoPageJobSchedulerExecutionComponent implements OnInit, AfterViewInit {\n  @ViewChild('formExecution', { static: true }) form: NgForm;\n\n  // templates\n  @ViewChild('dailyTemplate', { static: true }) dailyTemplate;\n  @ViewChild('monthlyTemplate', { static: true }) monthlyTemplate;\n  @ViewChild('weeklyTemplate', { static: true }) weeklyTempalte;\n\n  @Input('p-is-edit') isEdit: boolean = false;\n\n  @Input('p-literals') literals = <any>{};\n\n  @Input('p-no-parameters') noParameters: Boolean = true;\n  @Input('p-no-custom-params-component') noCustomParamsComponent: Boolean = true;\n\n  @Output('p-change-process') changeProcess: EventEmitter<any> = new EventEmitter<any>();\n\n  dayPattern = '^(3[0-1]|[0-2][0-9]|[1-9]|0[1-9])$';\n  existProcessAPI = true;\n  minDateFirstExecution = new Date();\n  periodicityOptions: Array<PoRadioGroupOption> = [];\n  periodicityTemplates: { daily: TemplateRef<any>; weekly: TemplateRef<any>; monthly: TemplateRef<any> };\n  timePattern = '^(2[0-3]|[01][0-9]):?([0-5][0-9])$';\n  weekDays: Array<PoCheckboxGroupOption> = [];\n  frequencyOptions: Array<PoRadioGroupOption> = [];\n  containsFrequency = false;\n  frequency: string = 'hour';\n  rangeLimitHour: string;\n\n  private _value: any = {};\n\n  @Input('p-value') set value(value: any) {\n    this._value = value && isTypeof(value, 'object') ? value : {};\n\n    this.containsFrequency = this._value.frequency && this._value.frequency.value ? true : false;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  constructor(\n    private poPageJobSchedulerService: PoPageJobSchedulerService,\n    public poPageJobSchedulerLookup: PoPageJobSchedulerLookupService\n  ) {}\n\n  get startDateFirstExecution() {\n    return this.isEdit ? undefined : this.minDateFirstExecution;\n  }\n\n  get hourLabel() {\n    return this.containsFrequency ? this.literals.startTime : this.literals.time;\n  }\n\n  get dayLabel() {\n    return this.containsFrequency ? this.literals.startDay : this.literals.day;\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.subscribeProcessIdValueChanges();\n\n      if (this.value.periodicity) {\n        this.frequencyOptions = this.frequencyOptions.map(frequencyOption => ({\n          ...frequencyOption,\n          disabled: frequencyOption.value === 'day' && this.value.periodicity !== 'monthly'\n        }));\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.periodicityTemplates = {\n      daily: this.dailyTemplate,\n      monthly: this.monthlyTemplate,\n      weekly: this.weeklyTempalte\n    };\n\n    if (this.noParameters && this.noCustomParamsComponent) {\n      this.checkExistsProcessesAPI();\n    }\n\n    this.periodicityOptions = this.getPeriodicityOptions();\n    this.weekDays = this.getWeekDays();\n    this.frequencyOptions = this.getFrequencyOptions();\n  }\n\n  onChangeContainsFrequency(containsFrequency) {\n    if (containsFrequency) {\n      this.value.frequency = { type: 'hour', value: null };\n    } else {\n      this.value.frequency = {};\n    }\n\n    this.value.rangeLimitHour = null;\n    this.value.rangeLimitDay = null;\n    this.value.dayOfMonth = null;\n  }\n\n  onChangePeriodicityOptions(periodicity) {\n    this.frequencyOptions = this.frequencyOptions.map(frequencyOption => ({\n      ...frequencyOption,\n      disabled: frequencyOption.value === 'day' && periodicity !== 'monthly'\n    }));\n\n    this.value.frequency.type = null;\n  }\n\n  onChangeFrequencyOptions() {\n    this.value.rangeLimitHour = null;\n  }\n\n  private checkExistsProcessesAPI() {\n    this.poPageJobSchedulerService.getHeadProcesses().subscribe(undefined, error => {\n      this.existProcessAPI = false;\n    });\n  }\n\n  private getPeriodicityOptions() {\n    return [\n      { label: this.literals.single, value: 'single' },\n      { label: this.literals.daily, value: 'daily' },\n      { label: this.literals.weekly, value: 'weekly' },\n      { label: this.literals.monthly, value: 'monthly' }\n    ];\n  }\n\n  private getFrequencyOptions() {\n    return [\n      { label: this.literals.day, value: 'day' },\n      { label: this.literals.hour, value: 'hour' },\n      { label: this.literals.minute, value: 'minute' }\n    ];\n  }\n\n  private getWeekDays() {\n    return [\n      { label: this.literals.sunday, value: 'Sunday' },\n      { label: this.literals.monday, value: 'Monday' },\n      { label: this.literals.tuesday, value: 'Tuesday' },\n      { label: this.literals.wednesday, value: 'Wednesday' },\n      { label: this.literals.thursday, value: 'Thursday' },\n      { label: this.literals.friday, value: 'Friday' },\n      { label: this.literals.saturday, value: 'Saturday' }\n    ];\n  }\n\n  private subscribeProcessIdValueChanges() {\n    this.form.controls['processID']?.valueChanges.subscribe(processId => {\n      this.changeProcess.emit({ processId, existAPI: this.existProcessAPI });\n    });\n  }\n}\n","<ng-container\r\n  *ngIf=\"\r\n    parameters && parameters.length;\r\n    then formFieldsTemplate;\r\n    else (parametersTemplate?.templateRef && dynamicContent) || parametersNotFoundTemplate\r\n  \"\r\n>\r\n</ng-container>\r\n\r\n<ng-template #parametersNotFoundTemplate>\r\n  <div class=\"po-text-center\">\r\n    <span class=\"po-icon po-icon-info\"></span>\r\n    <span class=\"po-font-text-large\">\r\n      {{ literals.parametersNotFound }}\r\n    </span>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #formFieldsTemplate>\r\n  <form #parametersForm=\"ngForm\">\r\n    <po-dynamic-form p-group-form [p-fields]=\"parameters\" [p-value]=\"value\"> </po-dynamic-form>\r\n  </form>\r\n</ng-template>\r\n\r\n<!-- <ng-template #dynamicContent>\r\n  <dynamic-load-component\r\n    [component]=\"customComponent.component\"\r\n    [dataProps]=\"customComponent?.properties\"\r\n    #poParamsCustom\r\n  >\r\n  </dynamic-load-component></ng-template>\r\n -->\r\n\r\n<!-- <ng-template #dynamicContent [ngTemplateOutlet]=\"parametersTemplate?.templateRef\"> </ng-template> -->\r\n\r\n<ng-template #dynamicContent>\r\n  <ng-container *ngTemplateOutlet=\"parametersTemplate?.templateRef\"> </ng-container>\r\n</ng-template>\r\n","import { AfterViewInit, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { PoDynamicFormField } from '@po-ui/ng-components';\r\n//import { PoJobSchedulerCustomSteps } from '../interfaces/po-job-scheduler-custom-steps.interface';\r\nimport { PoJobSchedulerParametersTemplateDirective } from './po-job-scheduler-parameters-template/po-job-scheduler-parameters-template.directive';\r\n\r\n@Component({\r\n  selector: 'po-page-job-scheduler-parameters',\r\n  templateUrl: 'po-page-job-scheduler-parameters.component.html'\r\n})\r\nexport class PoPageJobSchedulerParametersComponent implements AfterViewInit {\r\n  @ViewChild('parametersForm') form: NgForm;\r\n\r\n  @Input('p-literals') literals = <any>{};\r\n\r\n  @Input('p-parameters') parameters: Array<PoDynamicFormField> = [];\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Componente customizado para parametrizações\r\n   * @todo trocar para ng-template\r\n   */\r\n  // @Input('p-custom-component') customComponent?: PoJobSchedulerCustomSteps['parameters'];\r\n\r\n  @Input('p-template') parametersTemplate: PoJobSchedulerParametersTemplateDirective;\r\n\r\n  @Input('p-value') value;\r\n\r\n  @Output('p-valueChange') valueChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  ngAfterViewInit() {\r\n    if (this.form) {\r\n      setTimeout(() => {\r\n        this.form.valueChanges.subscribe(value => {\r\n          this.valueChange.emit(value);\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"po-md-12\">\r\n  <po-info\r\n    *ngIf=\"noParameters\"\r\n    [p-label]=\"literals.process\"\r\n    [p-orientation]=\"infoOrientation\"\r\n    [p-value]=\"value.processID\"\r\n  >\r\n  </po-info>\r\n\r\n  <po-info [p-label]=\"literals.periodicity\" [p-orientation]=\"infoOrientation\" [p-value]=\"periodicityValue\"> </po-info>\r\n\r\n  <po-info\r\n    *ngIf=\"frequencyValue !== ''\"\r\n    [p-label]=\"literals.frequency\"\r\n    [p-orientation]=\"infoOrientation\"\r\n    [p-value]=\"frequencyValue\"\r\n  >\r\n  </po-info>\r\n\r\n  <po-info\r\n    *ngIf=\"value.periodicity !== 'single'\"\r\n    [p-label]=\"literals.execution\"\r\n    [p-orientation]=\"infoOrientation\"\r\n    [p-value]=\"executionValue\"\r\n  >\r\n  </po-info>\r\n\r\n  <po-info [p-label]=\"literals.recurrent\" [p-orientation]=\"infoOrientation\" [p-value]=\"recurrentValue\"> </po-info>\r\n\r\n  <po-info [p-label]=\"literals.firstExecution\" [p-orientation]=\"infoOrientation\" [p-value]=\"firstExecutionValue\">\r\n  </po-info>\r\n</div>\r\n\r\n<po-widget *ngIf=\"parameters && parameters.length\" class=\"po-pt-1 po-pb-1 po-md-12\" [p-title]=\"literals.parameters\">\r\n  <po-dynamic-view [p-fields]=\"parameters\" [p-value]=\"value.executionParameter\"> </po-dynamic-view>\r\n</po-widget>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport { PoDynamicViewField, PoInfoOrientation } from '@po-ui/ng-components';\r\n\r\nimport { PoJobSchedulerInternal } from '../interfaces/po-job-scheduler-internal.interface';\r\n\r\n@Component({\r\n  selector: 'po-page-job-scheduler-summary',\r\n  templateUrl: 'po-page-job-scheduler-summary.component.html'\r\n})\r\nexport class PoPageJobSchedulerSummaryComponent implements OnInit {\r\n  @Input('p-literals') literals = <any>{};\r\n\r\n  @Input('p-parameters') parameters: Array<PoDynamicViewField> = [];\r\n\r\n  @Input('p-value') value: PoJobSchedulerInternal = <any>{};\r\n\r\n  @Input('p-no-parameters') noParameters: Boolean = true;\r\n\r\n  executionValue = '';\r\n  firstExecutionValue = '';\r\n  infoOrientation = PoInfoOrientation.Horizontal;\r\n  periodicityValue = '';\r\n  frequencyValue = '';\r\n  rangeLimitHour = '';\r\n  rangeLimitDay = '';\r\n  recurrentValue = '';\r\n\r\n  constructor(private datePipe: DatePipe) {}\r\n\r\n  ngOnInit() {\r\n    const {\r\n      periodicity,\r\n      hour,\r\n      dayOfMonth,\r\n      daysOfWeek,\r\n      recurrent,\r\n      firstExecution,\r\n      firstExecutionHour,\r\n      frequency,\r\n      rangeLimitHour,\r\n      rangeLimitDay\r\n    } = this.value;\r\n\r\n    this.periodicityValue = this.getPeriodicityLabel(periodicity);\r\n    if (frequency) {\r\n      this.frequencyValue = this.getFrequencyValue(frequency, periodicity);\r\n    }\r\n    this.executionValue = this.getExecutionValue(\r\n      periodicity,\r\n      hour,\r\n      daysOfWeek,\r\n      dayOfMonth,\r\n      rangeLimitHour,\r\n      rangeLimitDay\r\n    );\r\n    this.firstExecutionValue = this.getFirstExecutionLabel(firstExecution, firstExecutionHour);\r\n    this.recurrentValue = this.getRecurrentValue(recurrent);\r\n  }\r\n\r\n  private getFrequencyValue(frequency, periodicity) {\r\n    return frequency['value'] && frequency['type'] && periodicity !== 'single'\r\n      ? `${frequency['value']} - ${frequency['type']}`\r\n      : '';\r\n  }\r\n\r\n  private getExecutionValue(\r\n    periodicity: string,\r\n    hour?: string,\r\n    daysOfWeek?: Array<string>,\r\n    dayOfMonth?: number,\r\n    rangeLimitHour?: string,\r\n    rangeLimitDay?: number\r\n  ) {\r\n    switch (periodicity) {\r\n      case 'daily':\r\n        return this.getHourLabel(hour, rangeLimitHour);\r\n      case 'monthly':\r\n        return this.getMonthlyLabelExecution(dayOfMonth, hour, rangeLimitHour, rangeLimitDay);\r\n      case 'weekly':\r\n        return this.getWeeklyLabelExecution(daysOfWeek, hour, rangeLimitHour);\r\n      default:\r\n        return this.literals.notReported;\r\n    }\r\n  }\r\n\r\n  private getFirstExecutionLabel(firstExecution: Date, firstExecutionHour?: string): string {\r\n    if (firstExecution) {\r\n      const date = this.datePipe.transform(firstExecution, 'dd/MM/yyyy', '-0200');\r\n\r\n      return `${date} ${this.getHourLabel(firstExecutionHour)}`;\r\n    } else {\r\n      return this.literals.notReported;\r\n    }\r\n  }\r\n\r\n  private getHourLabel(hour: string, rangeLimitHour?) {\r\n    return `${rangeLimitHour ? this.literals.from : this.literals.at} ${hour || '00:00'} ${\r\n      rangeLimitHour ? this.literals.to + ' ' + rangeLimitHour : ''\r\n    }`;\r\n  }\r\n\r\n  private getMonthlyLabelExecution(dayOfMonth: number, hour: string, rangeLimitHour?: string, rangeLimitDay?: number) {\r\n    const hourLabel = this.getHourLabel(hour, rangeLimitHour);\r\n\r\n    return `${rangeLimitDay ? this.literals.from : ''} ${dayOfMonth} ${rangeLimitDay ? this.literals.to : ''} ${\r\n      rangeLimitDay ? rangeLimitDay : ''\r\n    } ${hourLabel}`;\r\n  }\r\n\r\n  private getPeriodicityLabel(periodicity) {\r\n    switch (periodicity) {\r\n      case 'daily':\r\n        return this.literals.daily;\r\n      case 'monthly':\r\n        return this.literals.monthly;\r\n      case 'weekly':\r\n        return this.literals.weekly;\r\n      default:\r\n        return this.literals.single;\r\n    }\r\n  }\r\n\r\n  private getRecurrentValue(recurrent: boolean): string {\r\n    return recurrent ? this.literals.yes : this.literals.no;\r\n  }\r\n\r\n  private getSorterWeekDays() {\r\n    return {\r\n      'sunday': 0,\r\n      'monday': 1,\r\n      'tuesday': 2,\r\n      'wednesday': 3,\r\n      'thursday': 4,\r\n      'friday': 5,\r\n      'saturday': 6\r\n    };\r\n  }\r\n\r\n  private getTranslateWeekDay(day: string): string {\r\n    const days = {\r\n      Sunday: this.literals.sunday,\r\n      Monday: this.literals.monday,\r\n      Tuesday: this.literals.tuesday,\r\n      Wednesday: this.literals.wednesday,\r\n      Thursday: this.literals.thursday,\r\n      Friday: this.literals.friday,\r\n      Saturday: this.literals.saturday\r\n    };\r\n\r\n    return days[day] || '';\r\n  }\r\n\r\n  private getWeekDaysLabel(days: Array<string> = []): string {\r\n    const weekDaysSorted = this.sortWeekDays(days);\r\n\r\n    return weekDaysSorted.map(day => this.getTranslateWeekDay(day)).join(', ');\r\n  }\r\n\r\n  private getWeeklyLabelExecution(daysOfWeek: Array<string>, hour: string, rangeLimitHour?: string) {\r\n    if (daysOfWeek && Array.isArray(daysOfWeek)) {\r\n      return `${this.getWeekDaysLabel(daysOfWeek)} ${this.getHourLabel(hour, rangeLimitHour)}`;\r\n    } else {\r\n      return this.literals.notReported;\r\n    }\r\n  }\r\n\r\n  private sortWeekDays(days: Array<string> = []) {\r\n    const sorterWeekDays = this.getSorterWeekDays();\r\n\r\n    return days.sort((a: string, b: string) => {\r\n      const currDay = a.toLowerCase();\r\n      const nextDay = b.toLowerCase();\r\n\r\n      return sorterWeekDays[currDay] > sorterWeekDays[nextDay] ? 1 : -1;\r\n    });\r\n  }\r\n}\r\n","<po-page-default [p-actions]=\"jobSchedulerActions\" [p-breadcrumb]=\"breadcrumb\" [p-title]=\"'TEST V1'\">\r\n  <div class=\"po-row\">\r\n    <po-stepper\r\n      class=\"po-lg-3 po-xl-2\"\r\n      p-sequential=\"true\"\r\n      [p-orientation]=\"stepperOrientation\"\r\n      [p-step]=\"step\"\r\n      [p-steps]=\"steps\"\r\n      (p-change-step)=\"nextStep($event)\"\r\n    >\r\n    </po-stepper>\r\n\r\n    <po-container class=\"po-lg-8 po-xl-9\">\r\n      <form #formScheduler=\"ngForm\">\r\n        <div class=\"po-row\">\r\n          <po-page-job-scheduler-execution\r\n            [p-no-parameters]=\"parametersEmpty\"\r\n            [p-no-custom-params-component]=\"!parametersTemplate?.templateRef\"\r\n            [hidden]=\"step !== 1\"\r\n            #schedulerExecution\r\n            class=\"po-md-12\"\r\n            [p-is-edit]=\"isEdit\"\r\n            [p-literals]=\"literals\"\r\n            [p-value]=\"model\"\r\n            (p-change-process)=\"onChangeProcess($event)\"\r\n          >\r\n          </po-page-job-scheduler-execution>\r\n\r\n          <po-page-job-scheduler-parameters\r\n            *ngIf=\"stepParametersInitialized\"\r\n            [hidden]=\"step !== 2\"\r\n            #schedulerParameters\r\n            class=\"po-md-12\"\r\n            [p-literals]=\"literals\"\r\n            [p-parameters]=\"parameters || []\"\r\n            [(p-value)]=\"model.executionParameter\"\r\n            [p-template]=\"parametersTemplate\"\r\n          >\r\n          </po-page-job-scheduler-parameters>\r\n\r\n          <po-page-job-scheduler-summary\r\n            [p-no-parameters]=\"parametersEmpty\"\r\n            *ngIf=\"step === 3\"\r\n            class=\"po-md-12\"\r\n            [p-literals]=\"literals\"\r\n            [p-parameters]=\"parameters || [{}]\"\r\n            [p-value]=\"publicValues\"\r\n          >\r\n          </po-page-job-scheduler-summary>\r\n        </div>\r\n      </form>\r\n    </po-container>\r\n  </div>\r\n</po-page-default>\r\n","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, ContentChild, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport {\r\n  PoDialogService,\r\n  PoDynamicFormField,\r\n  PoLanguageService,\r\n  PoNotificationService,\r\n  PoPageAction,\r\n  PoStepperItem,\r\n  PoStepperStatus,\r\n  poLocaleDefault\r\n} from '@po-ui/ng-components';\r\n\r\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\r\nimport { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';\r\nimport { PoPageJobSchedulerBaseComponent } from './po-page-job-scheduler-base.component';\r\nimport { poPageJobSchedulerLiteralsDefault } from './po-page-job-scheduler-literals';\r\nimport { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';\r\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\r\nimport { PoJobSchedulerParametersTemplateDirective } from './po-page-job-scheduler-parameters';\r\n\r\n/**\r\n * @docsExtends PoPageJobSchedulerBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-job-scheduler-background-process\" title=\"PO Page Job Scheduler - Background Process\">\r\n *  <file name=\"sample-po-page-job-scheduler-background-process/sample-po-page-job-scheduler-background-process.component.html\"> </file>\r\n *  <file name=\"sample-po-page-job-scheduler-background-process/sample-po-page-job-scheduler-background-process.component.ts\"> </file>\r\n * </example>\r\n *\r\n */\r\n@Component({\r\n  selector: 'po-page-job-scheduler',\r\n  templateUrl: './po-page-job-scheduler.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styles: [\r\n    `\r\n      po-container .po-container {\r\n        overflow-y: unset;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class PoPageJobSchedulerComponent extends PoPageJobSchedulerBaseComponent implements OnInit {\r\n  @ViewChild('schedulerExecution', { static: true }) schedulerExecution: { form: NgForm };\r\n  @ViewChild('schedulerParameters') schedulerParameters: { form: NgForm };\r\n  @ContentChild(PoJobSchedulerParametersTemplateDirective, { static: true }) parametersTemplate: PoJobSchedulerParametersTemplateDirective;\r\n\r\n  isEdit = false;\r\n  literals = {\r\n    ...poPageJobSchedulerLiteralsDefault[poLocaleDefault]\r\n  };\r\n\r\n  publicValues: PoJobSchedulerInternal;\r\n  saveOperation: Observable<any>;\r\n  step: number = 1;\r\n  parametersEmpty: boolean = true;\r\n\r\n  stepParametersInitialized = false;\r\n\r\n  readonly steps: Array<PoStepperItem> = [];\r\n\r\n  private backPageAction: PoPageAction = {\r\n    label: this.literals.back,\r\n    action: this.nextStepOperation.bind(this, 'back'),\r\n    disabled: this.isDisabledBack.bind(this)\r\n  };\r\n\r\n  private concludePageAction: PoPageAction = {\r\n    label: this.literals.conclude,\r\n    action: this.confirmJobScheduler.bind(this)\r\n  };\r\n\r\n  private nextPageAction: PoPageAction = {\r\n    label: this.literals.next,\r\n    action: this.nextStepOperation.bind(this, 'next'),\r\n    disabled: this.isDisabledAdvance.bind(this)\r\n  };\r\n\r\n  private concludePageActions: Array<PoPageAction> = [this.concludePageAction, this.backPageAction];\r\n\r\n  private nextPageActions: Array<PoPageAction> = [this.nextPageAction, this.backPageAction];\r\n\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  jobSchedulerActions: Array<PoPageAction> = [...this.nextPageActions];\r\n\r\n  constructor(\r\n    public poPageDynamicLookupService: PoPageJobSchedulerLookupService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private poDialogService: PoDialogService,\r\n    private poNotification: PoNotificationService,\r\n    protected poPageJobSchedulerService: PoPageJobSchedulerService,\r\n    languageService: PoLanguageService\r\n  ) {\r\n    super(poPageJobSchedulerService);\r\n\r\n    const language = languageService.getShortLanguage();\r\n\r\n    this.literals = {\r\n      ...this.literals,\r\n      ...poPageJobSchedulerLiteralsDefault[language]\r\n    };\r\n\r\n    this.backPageAction.label = this.literals.back;\r\n    this.concludePageAction.label = this.literals.conclude;\r\n    this.nextPageAction.label = this.literals.next;\r\n\r\n    this.steps = [\r\n      { label: this.literals.scheduling },\r\n      { label: this.literals.parameterization },\r\n      { label: this.literals.conclude }\r\n    ];\r\n  }\r\n\r\n  get stepperOrientation(): 'horizontal' | 'vertical' {\r\n    return window.innerWidth > 481 && window.innerWidth < 960 ? 'horizontal' : 'vertical';\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('V1', this.parametersTemplate)\r\n    const paramId = this.activatedRoute.snapshot.params['id'];\r\n\r\n    this.isEdit = !!paramId;\r\n\r\n    this.poPageJobSchedulerService.configServiceApi({ endpoint: this.serviceApi });\r\n\r\n    if (this.parameters.length) {\r\n      this.parametersEmpty = false;\r\n    }\r\n\r\n    this.loadData(paramId);\r\n  }\r\n\r\n  changePageActionsBySteps(currentStep: number, nextStep: number) {\r\n    const stepsLength = this.steps.length;\r\n\r\n    if (nextStep === stepsLength) {\r\n      this.jobSchedulerActions = [...this.concludePageActions];\r\n    } else if (currentStep === stepsLength && nextStep < currentStep) {\r\n      this.jobSchedulerActions = [...this.nextPageActions];\r\n    }\r\n  }\r\n\r\n  nextStep(stepNumber: number) {\r\n    this.stepParametersInitialized = this.stepParametersInitialized || stepNumber === 2;\r\n\r\n    if (stepNumber > 1 && this.schedulerExecution.form.invalid) {\r\n      this.markAsDirtyInvalidControls(this.schedulerExecution.form.controls);\r\n      return;\r\n    }\r\n\r\n    if (\r\n      stepNumber > 2 &&\r\n      this.schedulerParameters &&\r\n      this.schedulerParameters.form &&\r\n      this.schedulerParameters.form.invalid\r\n    ) {\r\n      this.markAsDirtyInvalidControls(this.schedulerParameters.form.controls);\r\n      return;\r\n    }\r\n    this.setModelRecurrent();\r\n\r\n    const model = JSON.parse(JSON.stringify(this.model));\r\n\r\n    if (stepNumber === this.steps.length) {\r\n      this.publicValues = this.hidesSecretValues(model);\r\n    }\r\n\r\n    this.changePageActionsBySteps(this.step, stepNumber);\r\n\r\n    const steps = this.steps[this.step - 1];\r\n    this.step = stepNumber;\r\n\r\n    if (steps) {\r\n      steps.status = PoStepperStatus.Done;\r\n    }\r\n  }\r\n\r\n  onChangeProcess(process: { processId: string; existAPI: boolean }) {\r\n    if (process.existAPI && process.processId && this.parametersEmpty && !this.parametersTemplate?.templateRef) {\r\n      this.getParametersByProcess(process.processId);\r\n      if (!this.isEdit) {\r\n        this.model.executionParameter = {};\r\n      }\r\n    }\r\n  }\r\n\r\n  private confirmJobScheduler() {\r\n    const paramId = this.activatedRoute.snapshot.params['id'];\r\n\r\n    const confirmMessage = paramId ? this.literals.confirmUpdateMessage : this.literals.confirmSaveMessage;\r\n\r\n    this.poDialogService.confirm({\r\n      title: this.literals.confirmation,\r\n      message: confirmMessage,\r\n      confirm: () => {\r\n        const model = { ...this.model };\r\n\r\n        this.save(model, paramId);\r\n      }\r\n    });\r\n  }\r\n\r\n  private async emitSuccessMessage(msgSuccess: any, saveOperation: Observable<any>) {\r\n    await saveOperation.toPromise();\r\n    this.poNotification.success(msgSuccess);\r\n    this.resetJobSchedulerForm();\r\n    // @todo emitir evento de finalização\r\n  }\r\n\r\n  private getParametersByProcess(process: any) {\r\n    this.poPageJobSchedulerService.getParametersByProcess(process).subscribe(parameters => {\r\n      this.parameters = parameters;\r\n    });\r\n  }\r\n\r\n  private hidesSecretValues(model: PoJobSchedulerInternal): PoJobSchedulerInternal {\r\n    const hiddenSecretValue = '**********';\r\n    this.parameters.forEach(parameter => {\r\n      if (this.isSecretParameter(model, parameter)) {\r\n        model.executionParameter[parameter.property] = hiddenSecretValue;\r\n      }\r\n    });\r\n    return model;\r\n  }\r\n\r\n  private isDisabledAdvance(): boolean {\r\n    const componentByStep = {\r\n      1: this.schedulerExecution,\r\n      2: this.schedulerParameters\r\n    };\r\n\r\n    return componentByStep[this.step]?.form?.invalid || false;\r\n  }\r\n\r\n  private isDisabledBack(): boolean {\r\n    return this.step === 1;\r\n  }\r\n\r\n  private isSecretParameter(model: PoJobSchedulerInternal, parameter: PoDynamicFormField): boolean {\r\n    return (\r\n      model.executionParameter &&\r\n      parameter.hasOwnProperty('secret') &&\r\n      parameter['secret'] === true &&\r\n      model.executionParameter.hasOwnProperty(parameter.property)\r\n    );\r\n  }\r\n\r\n  private nextStepOperation(operation?: 'back' | 'next') {\r\n    const stepNumber = operation === 'back' ? this.step - 1 : this.step + 1;\r\n\r\n    this.nextStep(stepNumber);\r\n  }\r\n\r\n  private resetJobSchedulerForm() {\r\n    this.schedulerExecution.form.reset();\r\n\r\n    // radiogroup não estava atribuindo novo valor, fica vermelho sem o timetout.\r\n    setTimeout(() => {\r\n      this.model = new PoPageJobSchedulerInternal();\r\n\r\n      this.step = 1;\r\n      this.steps.forEach(step => {\r\n        step.status = PoStepperStatus.Default;\r\n      });\r\n\r\n      this.jobSchedulerActions = [...this.nextPageActions];\r\n    });\r\n  }\r\n\r\n  private save(model: PoJobSchedulerInternal, paramId) {\r\n    const saveOperation = paramId\r\n      ? this.poPageJobSchedulerService.updateResource(paramId, model)\r\n      : this.poPageJobSchedulerService.createResource(model);\r\n\r\n    const msgSuccess = paramId\r\n      ? this.literals.saveNotificationSuccessUpdate\r\n      : this.literals.saveNotificationSuccessSave;\r\n\r\n    this.emitSuccessMessage(msgSuccess, saveOperation);\r\n  }\r\n\r\n  private setModelRecurrent() {\r\n    this.model.recurrent = this.model.periodicity === 'single' ? false : this.model.recurrent;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  PoButtonModule,\r\n  PoContainerModule,\r\n  PoDialogModule,\r\n  PoDividerModule,\r\n  PoDynamicModule,\r\n  PoFieldModule,\r\n  PoInfoModule,\r\n  PoPageModule,\r\n  PoStepperModule,\r\n  PoWidgetModule\r\n} from '@po-ui/ng-components';\r\n\r\nimport { PoPageJobSchedulerComponent } from './po-page-job-scheduler.component';\r\nimport { PoPageJobSchedulerExecutionComponent } from './po-page-job-scheduler-execution/po-page-job-scheduler-execution.component';\r\nimport { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';\r\nimport { PoPageJobSchedulerParametersComponent } from './po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component';\r\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\r\nimport { PoPageJobSchedulerSummaryComponent } from './po-page-job-scheduler-summary/po-page-job-scheduler-summary.component';\r\n//import { DynamicContentComponent } from './po-page-job-scheduler-parameters/dynamic-content.component';\r\n//import { DynamicContentDirective } from './po-page-job-scheduler-parameters/dynamic-component.directive';\r\nimport { PoJobSchedulerParametersTemplateDirective } from './po-page-job-scheduler-parameters';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PoPageJobSchedulerComponent,\r\n    PoPageJobSchedulerExecutionComponent,\r\n    PoPageJobSchedulerParametersComponent,\r\n    PoPageJobSchedulerSummaryComponent,\r\n   /*  DynamicContentComponent,\r\n    DynamicContentDirective, */\r\n    PoJobSchedulerParametersTemplateDirective,\r\n  ],\r\n  exports: [\r\n    PoJobSchedulerParametersTemplateDirective,\r\n    PoPageJobSchedulerComponent,\r\n    /* DynamicContentComponent,\r\n    DynamicContentDirective, */\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PoButtonModule,\r\n    PoContainerModule,\r\n    PoDialogModule,\r\n    PoDividerModule,\r\n    PoDynamicModule,\r\n    PoFieldModule,\r\n    PoInfoModule,\r\n    PoPageModule,\r\n    PoStepperModule,\r\n    PoWidgetModule\r\n  ],\r\n  providers: [PoPageJobSchedulerService, PoPageJobSchedulerLookupService]\r\n})\r\nexport class PoPageJobSchedulerModule { }\r\n","/**\r\n * @usedBy PoPageLoginComponent\r\n *\r\n * @description\r\n *\r\n * *Enum* para definição do tipo de autenticação.\r\n */\r\nexport enum PoPageLoginAuthenticationType {\r\n  /** Autenticação Basic */\r\n  Basic = 'Basic',\r\n\r\n  /** Autenticação Bearer */\r\n  Bearer = 'Bearer'\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PoPageLogin } from './interfaces/po-page-login.interface';\r\nimport { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';\r\n\r\n@Injectable()\r\nexport class PoPageLoginService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  onLogin(url: string, type: PoPageLoginAuthenticationType, loginForm: PoPageLogin): Observable<Object> {\r\n    if (type === PoPageLoginAuthenticationType.Bearer) {\r\n      loginForm.password = btoa(loginForm.password);\r\n      return this.http.post(url, loginForm);\r\n    } else {\r\n      const user = `(${loginForm.login}:${loginForm.password})`;\r\n      const headers = new HttpHeaders({\r\n        'Authorization': `${type} ` + btoa(user)\r\n      });\r\n      delete loginForm.login;\r\n      delete loginForm.password;\r\n      return this.http.post(url, loginForm, { headers });\r\n    }\r\n  }\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { EventEmitter, Input, OnDestroy, Output, Directive } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { convertToBoolean, convertToInt, getShortBrowserLanguage, isExternalLink, isTypeof } from './../../utils/util';\r\n\r\nimport { PoLanguageService, poLocaleDefault, PoLanguage, poLanguageDefault } from '@po-ui/ng-components';\r\n\r\nimport { PoPageLogin } from './interfaces/po-page-login.interface';\r\nimport { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';\r\nimport { PoPageLoginCustomField } from './interfaces/po-page-login-custom-field.interface';\r\nimport { PoPageLoginLiterals } from './interfaces/po-page-login-literals.interface';\r\nimport { PoPageLoginRecovery } from './interfaces/po-page-login-recovery.interface';\r\nimport { PoPageLoginService } from './po-page-login.service';\r\n\r\nconst poPageLoginContentMaxLength = 40;\r\n\r\nexport const poPageLoginLiteralsDefault = {\r\n  en: <PoPageLoginLiterals>{\r\n    title: 'Welcome',\r\n    loginErrorPattern: 'Invalid Login',\r\n    loginHint: `Your login user was given to you at your first day.\r\n    If you don't have this information contact support`,\r\n    loginPlaceholder: 'Insert your e-mail',\r\n    passwordErrorPattern: 'Invalid Password',\r\n    passwordPlaceholder: 'Insert your password',\r\n    customFieldErrorPattern: 'Invalid value',\r\n    customFieldPlaceholder: 'Please enter a value',\r\n    rememberUser: 'Automatic login',\r\n    rememberUserHint: 'You can disable this option in system configuration',\r\n    submitLabel: 'Enter',\r\n    submittedLabel: 'Loading...',\r\n    forgotPassword: 'Forgot your Password?',\r\n    highlightInfo: '',\r\n    registerUrl: 'New register',\r\n    titlePopover: 'Oops!',\r\n    forgotYourPassword: 'Forgot your password?',\r\n    ifYouTryHarder: 'If you try ',\r\n    attempts: '{0} more time(s) ',\r\n    yourUserWillBeBlocked:\r\n      'without success your user will be blocked and you will be left 24 hours without being able to access :(',\r\n    createANewPasswordNow: 'Better create a new password now! You will be able to log into the system right away.',\r\n    iForgotMyPassword: 'I forgot my password',\r\n    welcome: 'Welcome',\r\n    support: 'Support'\r\n  },\r\n  es: <PoPageLoginLiterals>{\r\n    title: 'Bienvenido',\r\n    loginErrorPattern: 'Login inválido',\r\n    loginHint: `Su usuario ha sido entregado para usted en su primer día.\r\n    Si no tiene esta información, póngase en contacto con el soporte técnico`,\r\n    loginPlaceholder: 'Inserte su e-mail',\r\n    passwordErrorPattern: 'Contraseña inválida',\r\n    passwordPlaceholder: 'Inserte su contraseña',\r\n    customFieldErrorPattern: 'Valor no válido.',\r\n    customFieldPlaceholder: 'Por favor introduzca un valor',\r\n    rememberUser: 'Inicio de sesión automáticamente',\r\n    rememberUserHint: 'Puede deshabilitar esta opción en el menú del sistema.',\r\n    submitLabel: 'Entrar',\r\n    submittedLabel: 'Cargando...',\r\n    forgotPassword: 'Olvidaste tu contraseña?',\r\n    highlightInfo: '',\r\n    registerUrl: 'Nuevo registro',\r\n    titlePopover: 'Opa!',\r\n    forgotYourPassword: 'Olvidaste tu contraseña?',\r\n    ifYouTryHarder: 'Si intenta más ',\r\n    attempts: '{0} vez/veces ',\r\n    yourUserWillBeBlocked: 'sin éxito su usuario sera bloqueado y usted vás permanecer 24 horas sin poder acceder a :(',\r\n    createANewPasswordNow:\r\n      '¡Mejor crear una nueva contraseña ahora! Usted podrá entrar en el sistema inmediatamente después.',\r\n    iForgotMyPassword: 'Olvide mi contraseña',\r\n    welcome: 'Bienvenido',\r\n    support: 'Soporte'\r\n  },\r\n  pt: <PoPageLoginLiterals>{\r\n    title: 'Bem-vindo',\r\n    loginErrorPattern: 'Login inválido',\r\n    loginHint: `Seu usuário foi entregue a você no seu primeiro dia.\r\n    Caso não tenha mais essa informação contacte o suporte`,\r\n    loginPlaceholder: 'Insira seu e-mail',\r\n    passwordErrorPattern: 'Senha inválida',\r\n    passwordPlaceholder: 'Insira sua senha',\r\n    customFieldErrorPattern: 'Valor inválido.',\r\n    customFieldPlaceholder: 'Por favor insira um valor',\r\n    rememberUser: 'Logar automaticamente',\r\n    rememberUserHint: 'Você pode desabilitar essa opção no menu do sistema',\r\n    submitLabel: 'Entrar',\r\n    submittedLabel: 'Carregando...',\r\n    forgotPassword: 'Esqueceu sua senha?',\r\n    highlightInfo: '',\r\n    registerUrl: 'Novo registro',\r\n    titlePopover: 'Opa!',\r\n    forgotYourPassword: 'Esqueceu sua senha?',\r\n    ifYouTryHarder: 'Se tentar mais ',\r\n    attempts: '{0} vez(es) ',\r\n    yourUserWillBeBlocked: 'sem sucesso seu usuário será bloqueado e você fica 24 horas sem poder acessar :(',\r\n    createANewPasswordNow: 'Melhor criar uma senha nova agora! Você vai poder entrar no sistema logo em seguida.',\r\n    iForgotMyPassword: 'Esqueci minha senha',\r\n    welcome: 'Boas-vindas',\r\n    support: 'Suporte'\r\n  },\r\n  ru: <PoPageLoginLiterals>{\r\n    title: 'Добро пожаловать!',\r\n    loginErrorPattern: 'Неверный логин',\r\n    loginHint: `Ваш логин был предоставлен вам в первый день.\r\n    Если у вас нет этой информации, обратитесь в службу поддержки`,\r\n    loginPlaceholder: 'Вставьте свой адрес электронной почты',\r\n    passwordErrorPattern: 'Неверный пароль',\r\n    passwordPlaceholder: 'Введите свой пароль',\r\n    customFieldErrorPattern: 'Неверное значение.',\r\n    customFieldPlaceholder: 'Пожалуйста, введите значение',\r\n    rememberUser: 'Автоматический вход',\r\n    rememberUserHint: 'Вы можете отключить эту опцию в конфигурации системы',\r\n    submitLabel: 'Войти',\r\n    submittedLabel: '3агрузка...',\r\n    forgotPassword: 'Забыли пароль?',\r\n    highlightInfo: '',\r\n    registerUrl: 'Новый регистр',\r\n    titlePopover: 'Ой!',\r\n    forgotYourPassword: 'Забыли пароль?',\r\n    ifYouTryHarder: 'Если вы безуспешно попытаетесь войти еще ',\r\n    attempts: '{0} раз(а) ',\r\n    yourUserWillBeBlocked: 'Ваш пользователь будет заблокирован, и Вы останетесь на 24 часа без возможности доступа :(',\r\n    createANewPasswordNow: 'Лучше создайте новый пароль сейчас! Вы сможете сразу войти в систему.',\r\n    iForgotMyPassword: 'Я забыл свой пароль',\r\n    welcome: 'добро пожаловать',\r\n    support: 'Поддержка'\r\n  }\r\n};\r\n\r\nexport const poPageLoginLiteralIn = {\r\n  en: 'in',\r\n  es: 'en',\r\n  pt: 'em',\r\n  ru: 'в'\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-page-login` é utilizado como template para tela de login.\r\n * Com ele é possível definirmos valores para usuário, senha e definir ações para recuperação de senha e gravação de dados do usuário.\r\n * Também é possível inserir uma imagem em conjunto com um texto de destaque.\r\n *\r\n *\r\n * A propriedade `p-authentication-url` automatiza a rotina do componente e simplifica o processo para autenticação do usuário, bastando\r\n * definir uma url para requisição da autenticação. A flexibilidade e praticidade podem chegar a um nível em que o desenvolvimento\r\n * da aplicação no *client side* é desprovida de qualquer código-fonte relacionado à rotina de login de usuário.\r\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\r\n * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.\r\n *\r\n *\r\n * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\r\n * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\r\n * ```\r\n *   \"assets\": [\r\n *     \"src/assets\",\r\n *     \"src/favicon.ico\",\r\n *     {\r\n *       \"glob\": \"**\\/*\",\r\n *       \"input\": \"node_modules/@po-ui/style/images\",\r\n *       \"output\": \"assets/images\"\r\n *     }\r\n *   ]\r\n * ```\r\n */\r\n@Directive()\r\nexport abstract class PoPageLoginBaseComponent implements OnDestroy {\r\n  /**\r\n   * O `p-background` permite inserir uma imagem de destaque ao lado direito do formulário de login, caso a propriedade\r\n   * não seja preenchida o formulário será centralizado no espaço disponível.\r\n   *\r\n   * A fonte da imagem pode ser de um caminho local ou uma url de um servidor externo.\r\n   *\r\n   * Além da imagem, é possível adicionar um texto informativo por cima da imagem da imagem de destaque, para isso informe\r\n   * um valor para a literal `highlightInfo`.\r\n   *\r\n   * > Veja mais sobre as literais na propriedade `p-literals`.\r\n   *\r\n   * Exemplos de valores válidos:\r\n   * - **local**: `./assets/images/login-background.png`\r\n   * - **url externa**: `https://po-ui.io/assets/images/login-background.png`\r\n   *\r\n   * > Essa propriedade é ignorada para aplicações mobile.\r\n   */\r\n  @Input('p-background') background?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada na parte superior.\r\n   *\r\n   * > Caso seja indefinida o espaço se mantém preservado porém vazio.\r\n   */\r\n  @Input('p-logo') logo?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Expressão regular para validar o campo de login, caso a expressão não seja atentida, a literal `loginErrorPattern`\r\n   * será exibida.\r\n   *\r\n   * Exemplos de valores válidos:\r\n   * - email: `[expressao-regular-email]`\r\n   * - cpf: `[expressao-regular-cpf]`\r\n   *\r\n   * > Veja a propriedade `p-literals` para customizar a literal `loginErrorPattern`.\r\n   */\r\n  @Input('p-login-pattern') loginPattern?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Expressão regular para validar o campo de password, caso a expressão não seja atentida, a literal `passwordErrorPattern`\r\n   * será exibida.\r\n   *\r\n   * Exemplos de valores válidos:\r\n   * - Apenas números: `\\d?`\r\n   * - Letras mínusculas: `\\z?`\r\n   *\r\n   * > Veja a propriedade `p-literals` para customizar a literal `passwordErrorPattern`.\r\n   */\r\n  @Input('p-password-pattern') passwordPattern?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada no rodapé.\r\n   */\r\n  @Input('p-secondary-logo') secondaryLogo?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado quando o usuário alterar o input do campo login.\r\n   *\r\n   * Esse evento receberá como parâmetro uma variável do tipo `string` com o texto informado no campo.\r\n   *\r\n   * > Esta propriedade será ignorada se for definido valor para a propriedade `p-authentication-url`.\r\n   */\r\n  @Output('p-login-change') loginChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  /**\r\n   * Evento disparado ao submeter o formulário de login (apertando `Enter` dentro dos campos ou pressionando o botão de confirmação).\r\n   *\r\n   * Esse evento receberá como parâmetro um objeto do tipo `PoPageLogin` com os dados informados no formulário.\r\n   *\r\n   * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-recovery`.\r\n   *\r\n   * > Para mais detalhes consulte a documentação sobre a interface `PoPageLogin` mais abaixo.\r\n   */\r\n  @Output('p-login-submit') loginSubmit = new EventEmitter<PoPageLogin>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado quando o usuário alterar o input do campo password.\r\n   *\r\n   * Esse evento receberá como parâmetro uma variável do tipo `string` com o texto informado no campo.\r\n   *\r\n   * > Esta propriedade será ignorada se for definido valor para a propriedade `p-authentication-url`.\r\n   */\r\n  @Output('p-password-change') passwordChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado quando o usuário alterar o idioma da página.\r\n   *\r\n   * Esse evento receberá como parâmetro um objeto do tipo `PoLanguage` com a linguagem selecionada.\r\n   *\r\n   */\r\n  @Output('p-language-change') languageChange: EventEmitter<PoLanguage> = new EventEmitter<PoLanguage>();\r\n\r\n  allLoginErrors: Array<string> = [];\r\n  allPasswordErrors: Array<string> = [];\r\n  customFieldObject: PoPageLoginCustomField;\r\n  customFieldType: string;\r\n  loginSubscription: Subscription;\r\n  password: string;\r\n  rememberUser: boolean = false;\r\n  selectedLanguage: string;\r\n  showExceededAttemptsWarning = false;\r\n\r\n  private _authenticationType: PoPageLoginAuthenticationType = PoPageLoginAuthenticationType.Basic;\r\n  private _authenticationUrl: string;\r\n  private _blockedUrl: string;\r\n  private _contactEmail: string;\r\n  private _customField: string | PoPageLoginCustomField;\r\n  private _environment?: string;\r\n  private _exceededAttemptsWarning?: number;\r\n  private _hideRememberUser: boolean = false;\r\n  private _literals: PoPageLoginLiterals;\r\n  private _loading?: boolean = false;\r\n  private _login: string;\r\n  private _loginErrors: Array<string> = [];\r\n  private _passwordErrors: Array<string> = [];\r\n  private _productName: string;\r\n  private _recovery: string | PoPageLoginRecovery | Function;\r\n  private _registerUrl: string;\r\n  private _support: string | Function;\r\n  private _languagesList: Array<PoLanguage>;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ao informar um valor do tipo `string`, o mesmo será aplicado como a chave do campo customizado e utilizará\r\n   * os valores padrões contidos na propriedade `literals` como `customFieldErrorPattern` e `customFieldPlaceholder`.\r\n   *\r\n   * Existe a possibilidade de informar um objeto que segue a definição da interface `PoPageLoginCustomField`, onde\r\n   * através dos parâmetros enviados pode gerar um `po-input`, `po-combo` especificamente para serviços\r\n   * ou `po-select` para valores fixos.\r\n   *\r\n   * Abaixo seguem os exemplos de cada tipo de campo.\r\n   *\r\n   * `po-input`:\r\n   *\r\n   * ```\r\n   * {\r\n   *   property: 'domain',\r\n   *   value: 'jv01',\r\n   *   placeholder: 'Enter your domain',\r\n   *   pattern: '[a-z]',\r\n   *   errorPattern: 'Invalid value'\r\n   * }\r\n   * ```\r\n   *\r\n   * `po-combo`:\r\n   *\r\n   * ```\r\n   * {\r\n   *   property: 'domain',\r\n   *   value: 'jv01',\r\n   *   placeholder: 'Enter your domain',\r\n   *   url: 'https://po-ui.io/sample/api/comboOption/domains',\r\n   *   fieldValue: 'nickname'\r\n   * }\r\n   * ```\r\n   *\r\n   * `po-select`:\r\n   *\r\n   * ```\r\n   * {\r\n   *   property: 'domain',\r\n   *   value: 'jv01',\r\n   *   placeholder: 'Enter your domain',\r\n   *   options: [{label: 'Domain 1', value: '1'}, {label: 'Domain 2', value: '2'}]\r\n   * }\r\n   * ```\r\n   *\r\n   * Caso o customField possua options, url e fieldValue preenchidos, será priorizado o po-select\r\n   * utilizando o options.\r\n   *\r\n   */\r\n  @Input('p-custom-field') set customField(value: string | PoPageLoginCustomField) {\r\n    if (value) {\r\n      if (isTypeof(value, 'string')) {\r\n        this.customFieldType = 'input';\r\n        this._customField = value;\r\n        this.customFieldObject = this.getDefaultCustomFieldObject(value);\r\n        return;\r\n      }\r\n\r\n      if (isTypeof(value, 'object') && !Array.isArray(value) && value['property']) {\r\n        this._customField = value;\r\n        this.customFieldObject = <PoPageLoginCustomField>value;\r\n\r\n        if (!this.customFieldObject.options && !this.customFieldObject.url) {\r\n          this.customFieldType = 'input';\r\n        } else {\r\n          this.customFieldType = this.customFieldObject.options ? 'select' : 'combo';\r\n        }\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    this._customField = undefined;\r\n    this.customFieldObject = undefined;\r\n  }\r\n\r\n  get customField(): string | PoPageLoginCustomField {\r\n    return this._customField;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Personaliza o e-mail que é exibido na mensagem de dica de login padrão para contato de suporte.\r\n   */\r\n  @Input('p-contact-email') set contactEmail(value: string) {\r\n    this._contactEmail = value;\r\n  }\r\n  get contactEmail() {\r\n    return this._contactEmail;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Texto customizado que fica entre a logo e a mensagem de boas-vindas.\r\n   */\r\n  @Input('p-product-name') set productName(value: string) {\r\n    this._productName = value;\r\n  }\r\n  get productName() {\r\n    return this._productName;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Adiciona uma `tag` abaixo do título que especifica o ambiente que o usuário está fazendo o login.\r\n   *\r\n   * > Essa propriedade limita o texto em 40 caracteres.\r\n   */\r\n  @Input('p-environment') set environment(environment: string) {\r\n    if (environment && environment.length > poPageLoginContentMaxLength) {\r\n      this._environment = environment.substring(0, poPageLoginContentMaxLength);\r\n    } else {\r\n      this._environment = environment;\r\n    }\r\n  }\r\n  get environment() {\r\n    return this._environment;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Exibe um aviso de bloqueio de acordo com a quantidade restante de tentativas.\r\n   * O aviso será exibido somente se a quantidade for maior que zero.\r\n   *\r\n   * > Caso tenha algum valor atribuído para o atributo `p-authentication-url` e o retorno da requisição estiver atribuindo valor\r\n   * para o `p-exceeded-attempts-warning`, o valor considerado será o do retorno da requisição.\r\n   *\r\n   * @default `0`\r\n   */\r\n  @Input('p-exceeded-attempts-warning') set exceededAttemptsWarning(value: number) {\r\n    this._exceededAttemptsWarning = convertToInt(value);\r\n    this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;\r\n  }\r\n\r\n  get exceededAttemptsWarning(): number {\r\n    return this._exceededAttemptsWarning;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Esconde a função \"Lembrar usuário\" do formulário de login.\r\n   *\r\n   * Quando essa propriedade é setada com `true` a propriedade `rememberUser` enviada no evento `p-login-submit` será sempre\r\n   * `false`.\r\n   *\r\n   * > Veja a propriedade `p-literals` para customizar a literal `rememberUser`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-remember-user') set hideRememberUser(value: boolean) {\r\n    this._hideRememberUser = <any>value === '' ? true : convertToBoolean(value);\r\n\r\n    if (this._hideRememberUser) {\r\n      this.rememberUser = false;\r\n    }\r\n  }\r\n  get hideRememberUser(): boolean {\r\n    return this._hideRememberUser;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-page-login`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageLoginLiterals = {\r\n   *    attempts: '{0} vez(es) ',\r\n   *    createANewPasswordNow: 'Melhor criar uma senha nova agora! Você vai poder entrar no sistema logo em seguida.',\r\n   *    forgotPassword: 'Esqueceu sua senha?',\r\n   *    forgotYourPassword: 'Esqueceu sua senha?',\r\n   *    highlightInfo: '',\r\n   *    iForgotMyPassword: 'Esqueci minha senha',\r\n   *    ifYouTryHarder: 'Se tentar mais ',\r\n   *    welcome: 'Boas-vindas',\r\n   *    loginErrorPattern: 'Login obrigatório',\r\n   *    loginHint: 'Caso não possua usuário entre em contato com o suporte',\r\n   *    loginLabel: 'Insira seu usuário',\r\n   *    loginPlaceholder: 'Insira seu usuário de acesso',\r\n   *    passwordErrorPattern: 'Senha obrigatória',\r\n   *    passwordLabel: 'Insira sua senha',\r\n   *    passwordPlaceholder: 'Insira sua senha de acesso',\r\n   *    customFieldErrorPattern: 'Campo customizado inválido',\r\n   *    customFieldPlaceholder: 'Por favor insira um valor',\r\n   *    registerUrl: 'Novo registro',\r\n   *    rememberUser: 'Lembrar usuário',\r\n   *    rememberUserHint: 'Esta opção pode ser desabilitada nas configurações do sistema',\r\n   *    submitLabel: 'Acessar sistema',\r\n   *    submittedLabel: 'Carregando...',\r\n   *    titlePopover: 'Opa!',\r\n   *    yourUserWillBeBlocked: 'sem sucesso seu usuário será bloqueado e você fica 24 horas sem poder acessar :('\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageLoginLiterals = {\r\n   *    loginPlaceholder: 'Insira seu usuário de acesso',\r\n   *    passwordPlaceholder: 'Insira sua senha de acesso',\r\n   *    submitLabel: 'Acessar sistema'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-page-login\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-page-login>\r\n   * ```\r\n   *\r\n   *  > O objeto padrão de literais será traduzido de acordo com o idioma do browser (pt, en, es).\r\n   *  > É também possível alternar o objeto padrão de literais através do seletor de idiomas localizado na parte inferior do template,\r\n   * nesse caso, há também a opção do idioma russo.\r\n   */\r\n  @Input('p-literals') set literals(value: PoPageLoginLiterals) {\r\n    this._literals = value;\r\n  }\r\n\r\n  get literals() {\r\n    return this._literals;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Habilita um estado de carregamento ao botão de *login*.\r\n   *\r\n   * > É necessário atribuir `true` à esta propriedade na função definida em `p-login-submit`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-loading') set loading(value: boolean) {\r\n    this._loading = convertToBoolean(value);\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this._loading;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor do modelo do campo de login.\r\n   */\r\n  @Input('p-login') set login(value: string) {\r\n    this._login = value;\r\n\r\n    if (!this.authenticationUrl) {\r\n      this.loginChange.emit(this._login);\r\n    }\r\n  }\r\n\r\n  get login(): string {\r\n    return this._login;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Atributo que recebe uma lista de erros e exibe abaixo do campo de login.\r\n   */\r\n  @Input('p-login-errors') set loginErrors(value: Array<string>) {\r\n    this._loginErrors = value || [];\r\n    this.setLoginErrors(this._loginErrors);\r\n  }\r\n  get loginErrors() {\r\n    return this._loginErrors;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Atributo que recebe uma lista de erros e exibe abaixo do campo de password.\r\n   */\r\n  @Input('p-password-errors') set passwordErrors(value: Array<string>) {\r\n    this._passwordErrors = value || [];\r\n    this.setPasswordErrors(this._passwordErrors);\r\n  }\r\n  get passwordErrors() {\r\n    return this._passwordErrors;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Exibe um link abaixo do formulário de login para que os usuários da aplicação façam a recuperação dos dados de autenticação.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   *\r\n   * - **String**: informe uma url externa ou uma rota válida;\r\n   * - **Function**: pode-se customizar a ação. Para esta possilidade basta atribuir:\r\n   * ```\r\n   * <po-page-login>\r\n   *   [recovery]=\"this.myRecovery.bind(this)\">\r\n   * </po-page-login>\r\n   * ```\r\n   *\r\n   * - **PoPageLoginRecovery**: cria-se vínculo automático com o template **po-modal-password-recovery**.\r\n   *   O objeto deve conter a **url** para requisição dos recursos e pode-se definir o **tipo** de modal para recuperação de senha,\r\n   *   **email** para contato e **máscara** do campo de telefone.\r\n   */\r\n  @Input('p-recovery') set recovery(value: string | Function | PoPageLoginRecovery) {\r\n    this._recovery = value;\r\n  }\r\n\r\n  get recovery() {\r\n    return this._recovery;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caso a aplicação tenha um link para novos cadastros, informe uma url externa ou uma rota válida, dessa\r\n   * forma será exibido um link abaixo do formulário de login para os usuários da aplicação.\r\n   *\r\n   * Exemplos de valores válidos:\r\n   * - **local**: `/home`\r\n   * - **url externa**: `https://po-ui.io`\r\n   *\r\n   * > Veja a propriedade `p-literals` para customizar a literal `registerUrl`.\r\n   */\r\n  @Input('p-register-url') set registerUrl(value: string) {\r\n    this._registerUrl = isTypeof(value, 'string') ? value : undefined;\r\n  }\r\n\r\n  get registerUrl(): string {\r\n    return this._registerUrl;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Atributo que recebe o tipo de esquema da autenticação, sendo suportados apenas os valores `Basic` e `Bearer`.\r\n   *\r\n   * > Caso o tipo definido seja `Basic`, o componente fará uma requisição `POST` contendo:\r\n   *\r\n   * ```\r\n   * headers {\r\n   *  Authorization: Basic base64(login:password)\r\n   * }\r\n   *\r\n   * body {\r\n   *  rememberUser: rememberUser\r\n   * }\r\n   * ```\r\n   *\r\n   * > Caso o tipo definido seja `Bearer`, o componente fará uma requisição `POST` contendo:\r\n   *\r\n   * ```\r\n   * body {\r\n   *  login: login,\r\n   *  password: base64(password),\r\n   *  rememberUser: rememberUser\r\n   * }\r\n   * ```\r\n   *\r\n   * @default `PoPageLoginAuthenticationType.Basic`\r\n   */\r\n  @Input('p-authentication-type') set authenticationType(value: PoPageLoginAuthenticationType) {\r\n    this._authenticationType = (<any>Object).values(PoPageLoginAuthenticationType).includes(value)\r\n      ? value\r\n      : PoPageLoginAuthenticationType.Basic;\r\n  }\r\n\r\n  get authenticationType(): PoPageLoginAuthenticationType {\r\n    return this._authenticationType;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Endpoint usado pelo template para requisição do recurso. Quando preenchido, o método `p-login-submit` será ignorado e o\r\n   * componente adquirirá automatização para o processo de autenticação.\r\n   *\r\n   * ### Processos\r\n   * Ao digitar um valor válido no campo de login/password e pressionar **Enter**, o componente fará uma requisição `POST`\r\n   * na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuário:\r\n   *\r\n   * ```\r\n   * headers {\r\n   *  Authorization: Basic base64(login:password)\r\n   * }\r\n   *\r\n   * body {\r\n   *  rememberUser: rememberUser\r\n   * }\r\n   * ```\r\n   *\r\n   * Em caso de **sucesso**, o objeto de retorno é armazenado no `sessionStorage` e o usuário é redirecionado para a página inicial da\r\n   * aplicação `/`.\r\n   *\r\n   * ```\r\n   * 200:\r\n   *  {\r\n   *    user: user\r\n   *  }\r\n   * ```\r\n   *\r\n   * Em caso de **erro** na autenticação, espera-se o seguinte retorno:\r\n   *\r\n   * ```\r\n   * 400/401\r\n   *  {\r\n   *    code: 400/401,\r\n   *    message: message,\r\n   *    detailedMessage: detailedMessage,\r\n   *    helpUrl?: helpUrl\r\n   *  }\r\n   * ```\r\n   *\r\n   * > Pode-se atribuir uma quantidade máxima de tentativas restantes (maxAttemptsRemaining) para o atributo `p-exceeded-attempts-warning`,\r\n   * assim como os avisos relacionados aos campos login e password (loginWarnings, passwordWarnings) para os atributos `p-login-errors` e\r\n   * `p-password-errors` conforme retorno abaixo:\r\n   *\r\n   * ```\r\n   * 400\r\n   *  {\r\n   *    code: 400/401,\r\n   *    message: message,\r\n   *    detailedMessage: detailedMessage,\r\n   *    helpUrl?: helpUrl,\r\n   *    maxAttemptsRemaining?: maxAttemptsRemaining,\r\n   *    loginWarnings?: [loginWarnings],\r\n   *    passwordWarnings?: [passwordWarnings]\r\n   *  }\r\n   * ```\r\n   *\r\n   * > Caso o valor atribuído para `p-exceeded-attempts-warning` seja igual a 0(zero), poderá ser passado um valor para o\r\n   * atributo `p-blocked-url` e o usuário será redirecionado para uma tela de bloqueio.\r\n   *\r\n   * *Processo finalizado.*\r\n   *\r\n   * _______________\r\n   *\r\n   * #### Praticidade\r\n   * As informações do serviço de autenticação também podem ser transmitidas diretamente pelas configuraçãos de rota e, desta maneira,\r\n   * dispensa-se qualquer menção e/ou importação do componente `po-page-login` no restante da aplicação. O exemplo abaixo exemplifica\r\n   * a forma dinâmica com a qual o template de tela de login pode ser gerado ao navegar para rota `/login`, e também como ele se comunica\r\n   * com o serviço para efetuação do processo de autenticação do usuário e solicitação de nova senha.\r\n   * Basta definir nas configurações de rota:\r\n   *\r\n   *\r\n   * ```\r\n   *   import { PoPageLoginComponent, PoPageLoginAthenticationType } from '@po-ui/ng-templates';\r\n   *\r\n   *   ...\r\n   *   const routes: Routes = [\r\n   *     {\r\n   *       path: 'login', component: PoPageLoginComponent, data: {\r\n   *         serviceApi: 'https://po-ui.io/sample/api/users/authentication',\r\n   *         environment: 'development',\r\n   *         recovery: {\r\n   *           url: 'https://po-ui.io/sample/api/users',\r\n   *           type: PoModalPasswordRecoveryType.All,\r\n   *           contactMail: 'dev.po@po-ui.com',\r\n   *           phoneMask: '9-999-999-9999'\r\n   *         },\r\n   *         registerUrl: '/new-password',\r\n   *         authenticationType: PoPageLoginAthenticationType.Basic\r\n   *       }\r\n   *     }\r\n   *     ...\r\n   *   ];\r\n   *\r\n   *   @NgModule({\r\n   *     imports: [RouterModule.forRoot(routes)],\r\n   *     exports: [RouterModule]\r\n   *   })\r\n   *   export class AppRoutingModule { }\r\n   * ```\r\n   *\r\n   *\r\n   * O metadado `serviceApi` deve ser a **url** para requisição dos recursos de autenticação, o `environment` alimenta a propriedade\r\n   * `p-environment`, `recovery` é a interface `PoPageLoginRecovery` responsável pelas especificações contidas na modal de recuperação de\r\n   * senha, `registerUrl` alimenta a propriedade `p-register-url` e `authenticationType` que define a propriedade `p-authentication-type`.\r\n   *\r\n   * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\r\n   *\r\n   */\r\n  @Input('p-authentication-url') set authenticationUrl(value: string) {\r\n    this._authenticationUrl = isTypeof(value, 'string') ? value : undefined;\r\n  }\r\n\r\n  get authenticationUrl(): string {\r\n    return this._authenticationUrl;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caso o valor atribuído para `p-exceeded-attempts-warning` seja igual a 0(zero) e a aplicação tenha um link de bloqueio de usuário,\r\n   * informe uma url externa ou uma rota válida, dessa forma em caso de bloqueio o usuário será redirecionado.\r\n   */\r\n  @Input('p-blocked-url') set blockedUrl(value: string) {\r\n    this._blockedUrl = isTypeof(value, 'string') ? value : undefined;\r\n  }\r\n\r\n  get blockedUrl(): string {\r\n    return this._blockedUrl;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Exibe um botão para suporte.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   *\r\n   * - **String**: URL externa ou uma rota válida;\r\n   * - **Function**: Função a ser disparada ao clicar no botão de suporte;\r\n   * ```\r\n   * <po-page-login>\r\n   *   [p-support]=\"this.mySupport.bind(this)\">\r\n   * </po-page-login>\r\n   * ```\r\n   *\r\n   */\r\n  @Input('p-support') set support(value: string | Function) {\r\n    this._support = value;\r\n  }\r\n\r\n  get support() {\r\n    return this._support;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Coleção de idiomas que o componente irá tratar e disponibilizará para o usuário escolher.\r\n   *\r\n   * Caso essa propriedade não seja utilizada o componente mostrará no combo os idiomas que ele suporta por padrão.\r\n   *\r\n   * Caso a coleção tenha um idioma, a página estará nesse idioma e não mostrará o combo.\r\n   *\r\n   * Caso seja passado um array vazio, a página terá o idioma configurado no `i18n` e não mostrará o combo de seleção.\r\n   *\r\n   * > Se for passado um idioma não suportado, será preciso passar as literais pela propriedade `p-literals`.\r\n   *\r\n   *\r\n   */\r\n  @Input('p-languages') set languagesList(languagesList: Array<PoLanguage>) {\r\n    if (languagesList) {\r\n      if (languagesList.length) {\r\n        this._languagesList = languagesList;\r\n      } else {\r\n        this._languagesList = poLanguageDefault.filter(language => language.language === this.language);\r\n      }\r\n    }\r\n  }\r\n\r\n  get languagesList(): Array<PoLanguage> {\r\n    if (this._languagesList) {\r\n      return this._languagesList;\r\n    }\r\n    return poLanguageDefault;\r\n  }\r\n\r\n  get showLanguage() {\r\n    return this.languagesList.length > 1;\r\n  }\r\n\r\n  get language(): string {\r\n    return this.selectedLanguage || getShortBrowserLanguage();\r\n  }\r\n\r\n  get pageLoginLiterals(): PoPageLoginLiterals {\r\n    const loginHintWithContactEmail = this.contactEmail\r\n      ? this.concatenateLoginHintWithContactEmail(this.contactEmail)\r\n      : undefined;\r\n\r\n    return {\r\n      ...poPageLoginLiteralsDefault[poLocaleDefault],\r\n      ...poPageLoginLiteralsDefault[this.language],\r\n      ...loginHintWithContactEmail,\r\n      ...this.literals\r\n    };\r\n  }\r\n\r\n  constructor(\r\n    private loginService: PoPageLoginService,\r\n    public router: Router,\r\n    public poLanguageService: PoLanguageService\r\n  ) {\r\n    this.selectedLanguage = this.poLanguageService.getShortLanguage();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.loginSubscription) {\r\n      this.loginSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  closePopover() {\r\n    this.showExceededAttemptsWarning = false;\r\n  }\r\n\r\n  onLoginSubmit(): void {\r\n    const loginForm: PoPageLogin = {\r\n      login: this.login,\r\n      password: this.password,\r\n      rememberUser: this.rememberUser\r\n    };\r\n\r\n    if (this.customField) {\r\n      loginForm[this.customFieldObject.property] = this.customFieldObject.value;\r\n    }\r\n\r\n    if (this.authenticationUrl) {\r\n      this.loading = true;\r\n      this.loginSubscription = this.loginService\r\n        .onLogin(this.authenticationUrl, this.authenticationType, loginForm)\r\n        .subscribe(\r\n          data => {\r\n            this.setValuesToProperties();\r\n            sessionStorage.setItem('PO_USER_LOGIN', JSON.stringify(data));\r\n            this.openInternalLink('/');\r\n            this.loading = false;\r\n          },\r\n          error => {\r\n            if (error.error.code === '400' || error.error.code === '401') {\r\n              this.setValuesToProperties(error);\r\n              this.redirectBlockedUrl(this.exceededAttemptsWarning, this.blockedUrl);\r\n            }\r\n            this.loading = false;\r\n          }\r\n        );\r\n    } else {\r\n      this.loginSubmit.emit(loginForm);\r\n      this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;\r\n    }\r\n  }\r\n\r\n  private getDefaultCustomFieldObject(property): PoPageLoginCustomField {\r\n    return { property };\r\n  }\r\n\r\n  private openExternalLink(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  private openInternalLink(url: string) {\r\n    this.router.navigate([url]);\r\n  }\r\n\r\n  private redirectBlockedUrl(attempts: number, blockedUrl: string) {\r\n    if (attempts === 0 && blockedUrl) {\r\n      this.showExceededAttemptsWarning = false;\r\n      isExternalLink(blockedUrl) ? this.openExternalLink(blockedUrl) : this.openInternalLink(blockedUrl);\r\n    }\r\n  }\r\n\r\n  private setValuesToProperties(result?) {\r\n    if (result) {\r\n      this.exceededAttemptsWarning = result.error.maxAttemptsRemaining;\r\n      this.loginErrors = result.error.loginWarnings;\r\n      this.passwordErrors = result.error.passwordWarnings;\r\n      this.blockedUrl = result.error.blockedUrl;\r\n    } else {\r\n      this.exceededAttemptsWarning = 0;\r\n      this.loginErrors = [];\r\n      this.passwordErrors = [];\r\n      this.blockedUrl = '';\r\n    }\r\n  }\r\n\r\n  protected abstract concatenateLoginHintWithContactEmail(contactEmail: string);\r\n\r\n  protected abstract setLoginErrors(value: Array<string>): void;\r\n\r\n  protected abstract setPasswordErrors(value: Array<string>): void;\r\n}\r\n","<div class=\"po-page-login-popover-container\">\r\n  <div class=\"po-page-login-popover\">\r\n    <div class=\"po-page-login-popover-arrow\"></div>\r\n    <div class=\"po-page-login-popover-content\">\r\n      <p class=\"po-font-text-bold po-page-login-popover-title\">\r\n        {{ literals?.titlePopover }}\r\n      </p>\r\n      <p class=\"po-font-text\">\r\n        {{ literals?.forgotYourPassword }}\r\n      </p>\r\n      <p class=\"po-font-text\">\r\n        {{ literals?.ifYouTryHarder }}\r\n        <span class=\"po-font-text-bold po-page-login-popover-attempts\">\r\n          {{ literals?.attempts | poI18n: remainingAttempts }} </span\r\n        >{{ literals?.yourUserWillBeBlocked }}\r\n      </p>\r\n      <br />\r\n      <p class=\"po-font-text\">\r\n        {{ literals?.createANewPasswordNow }}\r\n      </p>\r\n      <div *ngIf=\"recovery\" class=\"po-font-text-bold po-mt-1 po-page-login-popover-link-container\">\r\n        <a *ngIf=\"recoveryType === 'internalLink'\" class=\"po-page-login-popover-link\" [routerLink]=\"recovery\">\r\n          {{ literals?.iForgotMyPassword }}\r\n        </a>\r\n        <a *ngIf=\"recoveryType === 'externalLink'\" class=\"po-page-login-popover-link\" [href]=\"recovery\" target=\"_blank\">\r\n          {{ literals?.iForgotMyPassword }}\r\n        </a>\r\n        <a *ngIf=\"!recoveryType\" class=\"po-page-login-popover-link\" (click)=\"onForgotPasswordClick(recovery)\">\r\n          {{ literals?.iForgotMyPassword }}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { isExternalLink, isTypeof } from '../../../utils/util';\r\n\r\nimport { PoPageLoginLiterals } from '../interfaces/po-page-login-literals.interface';\r\nimport { PoPageLoginRecovery } from '../interfaces/po-page-login-recovery.interface';\r\n\r\n@Component({\r\n  selector: 'po-page-login-popover',\r\n  templateUrl: './po-page-login-popover.component.html'\r\n})\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para definição da mensagem de aviso de bloqueio do `po-page-login`.\r\n */\r\nexport class PoPageLoginPopoverComponent {\r\n  @Input('p-literals') literals: PoPageLoginLiterals;\r\n\r\n  /** exibe o link de 'esqueci minha senha' e verifica se o valor é um link interno ou externo */\r\n  @Input('p-recovery') set recovery(value: string | Function | PoPageLoginRecovery) {\r\n    this._recovery = value;\r\n\r\n    if (isTypeof(value, 'string')) {\r\n      this.recoveryType = isExternalLink(value) ? 'externalLink' : 'internalLink';\r\n    }\r\n  }\r\n\r\n  get recovery() {\r\n    return this._recovery;\r\n  }\r\n\r\n  /** define se a mensagem deverá ser exibida caso seja maior que 0(zero) */\r\n  @Input('p-remaining-attempts') remainingAttempts: number;\r\n\r\n  /** se 'p-recovery' for do tipo Function ou PoPageLoginRecovery, emite para o método 'openUrl' do componente 'po-page-login' */\r\n  @Output('p-forgot-password') forgotPassword = new EventEmitter<any>();\r\n\r\n  recoveryType: string;\r\n\r\n  private _recovery: string | Function | PoPageLoginRecovery;\r\n\r\n  onForgotPasswordClick(recovery) {\r\n    this.forgotPassword.emit(recovery);\r\n  }\r\n}\r\n","<button class=\"po-page-login-support\" (click)=\"activateSupport()\" [hidden]=\"!support\">\r\n  <span class=\"po-icon po-icon-help\"></span>\r\n  {{ pageLoginLiterals?.support }}\r\n</button>\r\n\r\n<po-page-background\r\n  #pageLogin\r\n  [p-show-select-language]=\"showLanguage\"\r\n  [p-languages]=\"languagesList\"\r\n  [p-initial-language]=\"initialSelectLanguage\"\r\n  [p-background]=\"background\"\r\n  [p-highlight-info]=\"pageLoginLiterals.highlightInfo\"\r\n  [p-logo]=\"logo\"\r\n  [p-secondary-logo]=\"secondaryLogo\"\r\n  (p-selected-language)=\"onSelectedLanguage($event)\"\r\n>\r\n  <header class=\"po-page-login-header\">\r\n    <h1 class=\"po-mb-md-4 po-mb-sm-1\">\r\n      <div class=\"po-page-login-header-product-name\">{{ productName }}</div>\r\n      <po-tag *ngIf=\"environment\" p-type=\"warning\" [p-value]=\"environment\"> </po-tag>\r\n    </h1>\r\n    <div class=\"po-page-login-header-welcome po-mb-md-4 po-mb-sm-2\">{{ pageLoginLiterals.welcome }}</div>\r\n  </header>\r\n\r\n  <form #loginForm=\"ngForm\" class=\"po-page-login-form\">\r\n    <div class=\"po-row\">\r\n      <div class=\"po-lg-12\">\r\n        <div class=\"po-page-login-hint po-page-login-info-container\">\r\n          <po-login\r\n            class=\"po-page-login-info-field\"\r\n            [class.po-page-login-info-field-dynamic]=\"\r\n              !pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\r\n            \"\r\n            name=\"login\"\r\n            [(ngModel)]=\"login\"\r\n            p-auto-focus\r\n            p-required\r\n            [p-label]=\"pageLoginLiterals.loginLabel\"\r\n            [p-pattern]=\"loginPattern\"\r\n            [p-placeholder]=\"pageLoginLiterals.loginPlaceholder\"\r\n            (click)=\"closePopover()\"\r\n            (keyup.enter)=\"loginForm.valid && onLoginSubmit()\"\r\n            (p-change-model)=\"changeLoginModel()\"\r\n          >\r\n          </po-login>\r\n\r\n          <div\r\n            *ngIf=\"pageLoginLiterals.loginHint || pageLoginLiterals.rememberUserHint\"\r\n            class=\"po-page-login-info-icon-container\"\r\n            [class.po-page-login-info-icon-container-dynamic]=\"\r\n              !pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"pageLoginLiterals.loginHint\"\r\n              class=\"po-icon po-field-icon po-icon-info\"\r\n              p-tooltip-position=\"right\"\r\n              [p-tooltip]=\"pageLoginLiterals.loginHint\"\r\n            >\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"po-field-container-bottom po-field-container-error-container\">\r\n          <div\r\n            *ngFor=\"let error of allLoginErrors\"\r\n            class=\"po-field-container-bottom-text-error po-field-container-error-item\"\r\n          >\r\n            <span class=\"po-icon po-icon-exclamation\"></span>\r\n            <span class=\"po-field-container-error-text\">{{ error }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"po-lg-12\">\r\n        <div class=\"po-page-login-password-container\">\r\n          <po-password\r\n            class=\"po-page-login-field-size po-page-login-password-item\"\r\n            [class.po-page-login-field-size-dynamic]=\"\r\n              !pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\r\n            \"\r\n            name=\"password\"\r\n            [(ngModel)]=\"password\"\r\n            p-required\r\n            [p-label]=\"pageLoginLiterals.passwordLabel\"\r\n            [p-pattern]=\"passwordPattern\"\r\n            [p-placeholder]=\"pageLoginLiterals.passwordPlaceholder\"\r\n            (click)=\"closePopover()\"\r\n            (keyup.enter)=\"loginForm.valid && onLoginSubmit()\"\r\n            (p-change-model)=\"changePasswordModel()\"\r\n          >\r\n          </po-password>\r\n          <div\r\n            *ngIf=\"pageLoginLiterals.loginHint || pageLoginLiterals.rememberUserHint\"\r\n            class=\"po-page-login-password-item po-page-login-password-popover-container\"\r\n          >\r\n            <po-page-login-popover\r\n              *ngIf=\"showExceededAttemptsWarning && exceededAttemptsWarning\"\r\n              [p-literals]=\"pageLoginLiterals\"\r\n              [p-recovery]=\"recovery\"\r\n              [p-remaining-attempts]=\"exceededAttemptsWarning\"\r\n              (p-forgot-password)=\"openUrl($event)\"\r\n            >\r\n            </po-page-login-popover>\r\n          </div>\r\n        </div>\r\n        <div class=\"po-field-container-bottom po-field-container-error-container\">\r\n          <div\r\n            *ngFor=\"let error of allPasswordErrors\"\r\n            class=\"po-field-container-bottom-text-error po-field-container-error-item\"\r\n          >\r\n            <span class=\"po-icon po-icon-exclamation\"></span>\r\n            <span class=\"po-field-container-error-text\">{{ error }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <po-input\r\n        *ngIf=\"customField && customFieldType === 'input'\"\r\n        [class.po-page-login-field-size-dynamic]=\"!pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\"\r\n        class=\"po-page-login-field-size po-lg-12\"\r\n        name=\"customFieldInput\"\r\n        [(ngModel)]=\"customFieldObject.value\"\r\n        p-required\r\n        [p-error-pattern]=\"customFieldObject.errorPattern || pageLoginLiterals.customFieldErrorPattern\"\r\n        [p-pattern]=\"customFieldObject.pattern\"\r\n        [p-placeholder]=\"customFieldObject.placeholder || pageLoginLiterals.customFieldPlaceholder\"\r\n        (keyup.enter)=\"loginForm.valid && onLoginSubmit()\"\r\n      >\r\n      </po-input>\r\n\r\n      <po-combo\r\n        *ngIf=\"customField && customFieldType === 'combo'\"\r\n        [class.po-page-login-field-size-dynamic]=\"!pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\"\r\n        class=\"po-page-login-field-size po-lg-12\"\r\n        name=\"customFieldCombo\"\r\n        [(ngModel)]=\"customFieldObject.value\"\r\n        p-required\r\n        [p-field-value]=\"customFieldObject.fieldValue\"\r\n        [p-filter-service]=\"customFieldObject.url\"\r\n        [p-placeholder]=\"customFieldObject.placeholder || pageLoginLiterals.customFieldPlaceholder\"\r\n      >\r\n      </po-combo>\r\n\r\n      <po-select\r\n        *ngIf=\"customField && customFieldType === 'select'\"\r\n        [class.po-page-login-field-size-dynamic]=\"!pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\"\r\n        class=\"po-page-login-field-size po-lg-12\"\r\n        name=\"customFieldSelect\"\r\n        [(ngModel)]=\"customFieldObject.value\"\r\n        p-required\r\n        [p-placeholder]=\"customFieldObject.placeholder || pageLoginLiterals.customFieldPlaceholder\"\r\n        [p-options]=\"customFieldObject.options\"\r\n      >\r\n      </po-select>\r\n\r\n      <div class=\"po-lg-12\">\r\n        <div *ngIf=\"!hideRememberUser\" class=\"po-page-login-hint po-page-login-info-container\">\r\n          <po-switch\r\n            class=\"po-page-login-info-field po-lg-7 po-offset-lg-5 po-offset-xl-5\"\r\n            name=\"rememberUser\"\r\n            [(ngModel)]=\"rememberUser\"\r\n            p-label-position=\"1\"\r\n            [p-label-off]=\"pageLoginLiterals.rememberUser\"\r\n            [p-label-on]=\"pageLoginLiterals.rememberUser\"\r\n            (keyup.enter)=\"loginForm.valid && onLoginSubmit()\"\r\n          >\r\n          </po-switch>\r\n\r\n          <div\r\n            *ngIf=\"pageLoginLiterals.loginHint || pageLoginLiterals.rememberUserHint\"\r\n            class=\"po-page-login-info-icon-container po-page-login-info-icon-remember-user\"\r\n            [class.po-page-login-info-icon-container-dynamic]=\"!pageLoginLiterals.rememberUserHint\"\r\n          >\r\n            <span\r\n              *ngIf=\"pageLoginLiterals.rememberUserHint\"\r\n              class=\"po-icon po-field-icon po-icon-info\"\r\n              p-tooltip-position=\"right\"\r\n              [p-tooltip]=\"pageLoginLiterals.rememberUserHint\"\r\n            >\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <po-button\r\n        [class.po-page-login-button-dynamic]=\"!pageLoginLiterals.loginHint && !pageLoginLiterals.rememberUserHint\"\r\n        class=\"po-lg-12 po-page-login-button po-page-login-field-size\"\r\n        p-kind=\"primary\"\r\n        [p-disabled]=\"loginForm.invalid\"\r\n        [p-label]=\"loading ? pageLoginLiterals.submittedLabel : pageLoginLiterals.submitLabel\"\r\n        [p-loading]=\"loading\"\r\n        (p-click)=\"onLoginSubmit()\"\r\n      >\r\n      </po-button>\r\n\r\n      <div *ngIf=\"recovery\" class=\"po-page-login-recovery-link\">\r\n        <a class=\"po-font-text-large-bold\" (click)=\"openUrl(recovery)\">{{ pageLoginLiterals.forgotPassword }}</a>\r\n      </div>\r\n\r\n      <div *ngIf=\"registerUrl\" class=\"po-page-login-register-link\">\r\n        <a class=\"po-font-text-large-bold\" (click)=\"openUrl(registerUrl)\">{{ pageLoginLiterals.registerUrl }}</a>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</po-page-background>\r\n","import { AbstractControl, NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  AfterViewChecked,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentRef,\r\n  IterableDiffers,\r\n  OnInit,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { PoLanguageService } from '@po-ui/ng-components';\r\n\r\nimport { isExternalLink } from '../../utils/util';\r\nimport { PoComponentInjectorService } from '@po-ui/ng-components';\r\n\r\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\r\nimport { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\r\nimport {\r\n  PoPageLoginBaseComponent,\r\n  poPageLoginLiteralIn,\r\n  poPageLoginLiteralsDefault\r\n} from './po-page-login-base.component';\r\nimport { PoPageLoginRecovery } from './interfaces/po-page-login-recovery.interface';\r\nimport { PoPageLoginService } from './po-page-login.service';\r\n\r\n/**\r\n * @docsExtends PoPageLoginBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-login-basic\" title=\"PO Page Login Basic\">\r\n *  <file name=\"sample-po-page-login-basic/sample-po-page-login-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-login-basic/sample-po-page-login-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-login-labs\" title=\"PO Page Login Labs\">\r\n *  <file name=\"sample-po-page-login-labs/sample-po-page-login-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-page-login-labs/sample-po-page-login-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-login-human-resources\" title=\"PO Page Login - Human Resources\">\r\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.html\"> </file>\r\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.ts\"> </file>\r\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.module.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-login-automatic-service\" title=\"PO Page Login - Automatic Service\">\r\n *  <file name=\"sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.html\"> </file>\r\n *  <file name=\"sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.ts\"> </file>\r\n * </example>\r\n */\r\n\r\n@Component({\r\n  selector: 'po-page-login',\r\n  templateUrl: './po-page-login.component.html'\r\n})\r\nexport class PoPageLoginComponent extends PoPageLoginBaseComponent implements AfterViewChecked, OnInit {\r\n  @ViewChild('loginForm', { read: NgForm, static: true }) loginForm: NgForm;\r\n  @ViewChild('pageLogin', { read: ViewContainerRef, static: true }) pageLogin: ViewContainerRef;\r\n\r\n  initialSelectLanguage: string;\r\n\r\n  private componentRef: ComponentRef<any> = null;\r\n  private differ: any;\r\n  private readonly customPasswordError = { custom: false };\r\n\r\n  constructor(\r\n    public changeDetector: ChangeDetectorRef,\r\n    private activatedRoute: ActivatedRoute,\r\n    private poComponentInjector: PoComponentInjectorService,\r\n    differs: IterableDiffers,\r\n    loginService: PoPageLoginService,\r\n    router: Router,\r\n    poLanguageService: PoLanguageService\r\n  ) {\r\n    super(loginService, router, poLanguageService);\r\n    this.differ = differs.find([]).create(null);\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (this.differ) {\r\n      this.validateArrayChanges(this.differ, [\r\n        { array: this.loginErrors, callback: this.generateLoginError.bind(this) },\r\n        { array: this.passwordErrors, callback: this.generatePasswordError.bind(this) }\r\n      ]);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\r\n    this.selectedLanguage = this.initializeLanguage();\r\n    this.initialSelectLanguage = this.selectedLanguage;\r\n  }\r\n\r\n  activateSupport() {\r\n    switch (typeof this.support) {\r\n      case 'string': {\r\n        this.setUrlRedirect(this.support);\r\n        break;\r\n      }\r\n      case 'function': {\r\n        this.support();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  changeLoginModel() {\r\n    if (this.authenticationUrl) {\r\n      this.loginErrors = [];\r\n    } else {\r\n      this.setLoginErrors(this.loginErrors);\r\n      this.loginChange.emit(this.login);\r\n    }\r\n  }\r\n\r\n  changePasswordModel() {\r\n    if (this.authenticationUrl) {\r\n      this.passwordErrors = [];\r\n    } else {\r\n      this.setPasswordErrors(this.passwordErrors);\r\n      this.passwordChange.emit(this.password);\r\n    }\r\n  }\r\n\r\n  onSelectedLanguage(language: string) {\r\n    this.languageChange.emit(this.languagesList.find(languageItem => languageItem.language === language));\r\n    this.selectedLanguage = language;\r\n  }\r\n\r\n  openUrl(recovery: any): void {\r\n    switch (typeof recovery) {\r\n      case 'string': {\r\n        this.setUrlRedirect(recovery);\r\n        break;\r\n      }\r\n      case 'function': {\r\n        recovery();\r\n        break;\r\n      }\r\n      case 'object': {\r\n        this.createModalPasswordRecoveryComponent(recovery);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  protected concatenateLoginHintWithContactEmail(contactEmail: string) {\r\n    const defaultLoginHintLiteral = poPageLoginLiteralsDefault[this.language].loginHint;\r\n    const prepositionLiteral = poPageLoginLiteralIn[this.language];\r\n\r\n    return this.concatenateLiteral(contactEmail, 'loginHint', defaultLoginHintLiteral, prepositionLiteral);\r\n  }\r\n\r\n  protected setLoginErrors(errors: Array<string>) {\r\n    const control = this.loginForm.form.controls['login'];\r\n    this.setControlErrors('allLoginErrors', control, errors, this.pageLoginLiterals.loginErrorPattern);\r\n  }\r\n\r\n  protected setPasswordErrors(errors: Array<string>) {\r\n    const control = this.loginForm.form.controls['password'];\r\n    this.setControlErrors('allPasswordErrors', control, errors, this.pageLoginLiterals.passwordErrorPattern);\r\n  }\r\n\r\n  private checkingForMetadataProperty(object, property) {\r\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\r\n      return object[property];\r\n    }\r\n  }\r\n\r\n  private checkingForRouteMetadata(data) {\r\n    if (Object.keys(data).length !== 0) {\r\n      this.authenticationUrl = this.checkingForMetadataProperty(data, 'serviceApi') || this.authenticationUrl;\r\n      this.authenticationType = this.checkingForMetadataProperty(data, 'authenticationType') || this.authenticationType;\r\n      this.environment = this.checkingForMetadataProperty(data, 'environment') || this.environment;\r\n      this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;\r\n      this.registerUrl = this.checkingForMetadataProperty(data, 'registerUrl') || this.registerUrl;\r\n    }\r\n  }\r\n\r\n  private concatenate(defaultLiteral: string, prefixLiteral: string, value: string) {\r\n    return `${defaultLiteral} ${prefixLiteral} ${value}`;\r\n  }\r\n\r\n  private concatenateLiteral(value: string, literal: string, defaultLiteral: string, prepositionLiteral: string) {\r\n    return { [literal]: this.concatenate(defaultLiteral, prepositionLiteral, value) };\r\n  }\r\n\r\n  private createModalPasswordRecoveryComponent(poPageLoginRecovery: PoPageLoginRecovery) {\r\n    if (this.componentRef) {\r\n      this.poComponentInjector.destroyComponentInApplication(this.componentRef);\r\n    }\r\n\r\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);\r\n    this.componentRef.instance.urlRecovery = poPageLoginRecovery.url;\r\n    this.componentRef.instance.contactEmail = poPageLoginRecovery.contactMail;\r\n    this.componentRef.instance.phoneMask = poPageLoginRecovery.phoneMask;\r\n    this.componentRef.instance.type = poPageLoginRecovery.type || PoModalPasswordRecoveryType.Email;\r\n    this.componentRef.changeDetectorRef.detectChanges();\r\n    setTimeout(() => {\r\n      this.componentRef.instance.open();\r\n    });\r\n  }\r\n\r\n  private generateLoginError() {\r\n    if (this.loginErrors && this.loginErrors.length) {\r\n      this.setLoginErrors(this.loginErrors);\r\n    } else {\r\n      const control = this.loginForm.form.controls['login'];\r\n      if (control) {\r\n        this.resetControl(control);\r\n      }\r\n    }\r\n  }\r\n\r\n  private generatePasswordError() {\r\n    if (this.passwordErrors && this.passwordErrors.length) {\r\n      this.setPasswordErrors(this.passwordErrors);\r\n    } else {\r\n      const control = this.loginForm.form.controls['password'];\r\n\r\n      if (control) {\r\n        this.resetControl(control);\r\n      }\r\n    }\r\n  }\r\n\r\n  private resetControl(control: AbstractControl) {\r\n    control.markAsPristine();\r\n    control.markAsUntouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n  private setControlErrors(allErrors: string, control: AbstractControl, errors: Array<string>, patternError: string) {\r\n    if (control) {\r\n      this[allErrors] = control.hasError('pattern') ? [...errors, ...[patternError]] : [...errors];\r\n\r\n      if (errors && errors.length && (control.valid || control.pristine)) {\r\n        control.markAsTouched();\r\n        control.markAsDirty();\r\n        control.setErrors(this.customPasswordError);\r\n      }\r\n    }\r\n  }\r\n\r\n  private setUrlRedirect(url) {\r\n    isExternalLink(url) ? window.open(url, '_blank') : this.router.navigate([url]);\r\n  }\r\n\r\n  private validateArrayChanges(differ: any, array: Array<{ array: Array<any>; callback: any }>) {\r\n    array.forEach(element => {\r\n      const changes = differ.diff(element.array);\r\n      if (changes) {\r\n        element.callback();\r\n        this.changeDetector.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  private initializeLanguage() {\r\n    const language = this.languagesList.find(languageItem => languageItem.language === this.language);\r\n    return language?.language || this.languagesList[0].language;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoModule } from '@po-ui/ng-components';\r\n\r\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\r\nimport { PoPageBackgroundModule } from '../po-page-background/index';\r\nimport { PoPageLoginComponent } from './po-page-login.component';\r\nimport { PoPageLoginPopoverComponent } from './po-page-login-popover/po-page-login-popover.component';\r\nimport { PoPageLoginService } from './po-page-login.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do template do po-page-login.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, RouterModule, PoPageBackgroundModule, PoModule],\r\n  declarations: [PoPageLoginComponent, PoPageLoginPopoverComponent],\r\n  exports: [PoPageLoginComponent],\r\n  providers: [PoPageLoginService]\r\n})\r\nexport class PoPageLoginModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoModalPasswordRecoveryModule } from './po-modal-password-recovery/po-modal-password-recovery.module';\r\nimport { PoPageBackgroundModule } from './po-page-background/po-page-background.module';\r\nimport { PoPageBlockedUserModule } from './po-page-blocked-user/po-page-blocked-user.module';\r\nimport { PoPageChangePasswordModule } from './po-page-change-password/po-page-change-password.module';\r\nimport { PoPageDynamicDetailModule } from './po-page-dynamic-detail/po-page-dynamic-detail.module';\r\nimport { PoPageDynamicEditModule } from './po-page-dynamic-edit/po-page-dynamic-edit.module';\r\nimport { PoPageDynamicSearchModule } from './po-page-dynamic-search/po-page-dynamic-search.module';\r\nimport { PoPageDynamicTableModule } from './po-page-dynamic-table/po-page-dynamic-table.module';\r\nimport { PoPageJobSchedulerModule } from './po-page-job-scheduler/po-page-job-scheduler.module';\r\nimport { PoPageLoginModule } from './po-page-login/po-page-login.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    PoModalPasswordRecoveryModule,\r\n    PoPageBackgroundModule,\r\n    PoPageBlockedUserModule,\r\n    PoPageChangePasswordModule,\r\n    PoPageDynamicDetailModule,\r\n    PoPageDynamicEditModule,\r\n    PoPageDynamicSearchModule,\r\n    PoPageDynamicTableModule,\r\n    PoPageJobSchedulerModule,\r\n    PoPageLoginModule\r\n  ],\r\n  exports: [\r\n    PoModalPasswordRecoveryModule,\r\n    PoPageBackgroundModule,\r\n    PoPageBlockedUserModule,\r\n    PoPageChangePasswordModule,\r\n    PoPageDynamicDetailModule,\r\n    PoPageDynamicEditModule,\r\n    PoPageDynamicSearchModule,\r\n    PoPageDynamicTableModule,\r\n    PoPageJobSchedulerModule,\r\n    PoPageLoginModule\r\n  ]\r\n})\r\nexport class PoComponentsModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoPageCustomizationModule } from './po-page-customization/po-page-customization.module';\r\nimport { PoPageDynamicModule } from './po-page-dynamic/po-page-dynamic.module';\r\n\r\n@NgModule({\r\n  imports: [PoPageCustomizationModule, PoPageDynamicModule],\r\n  exports: [PoPageCustomizationModule, PoPageDynamicModule]\r\n})\r\nexport class PoServicesModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoComponentsModule } from './components/components.module';\r\nimport { PoServicesModule } from './services/services.module';\r\n\r\n@NgModule({\r\n  imports: [PoComponentsModule, PoServicesModule],\r\n  exports: [PoComponentsModule, PoServicesModule]\r\n})\r\nexport class PoTemplatesModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i3.PoModalPasswordRecoveryService","_c0","i2.PoPageChangePasswordService","i3","_c2","i3.PoPageDynamicService","i4.PoPageDynamicDetailActionsService","i5.PoPageCustomizationService","i4.PoPageCustomizationService","i5.PoPageDynamicEditActionsService","i2.PoPageCustomizationService","util.convertToInt","util.mapObjectByProperties","util.valuesFromObject","util.removeKeysProperties","util.mapArrayByProperties","i5.PoPageDynamicTableActionsService","i1.PoPageJobSchedulerService","i2.PoPageJobSchedulerLookupService","i1.PoPageJobSchedulerLookupService","i2","i4.PoPageJobSchedulerService","i1.PoPageLoginService","i3.PoPageLoginService"],"mappings":"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"}