export function getGridColumnsClasses(gridColumns, offsetColumns, grid, offset, pull) {
    const systemGrid = {
        gridSm: grid?.smGrid || gridColumns || 12,
        gridMd: grid?.mdGrid || gridColumns || 6,
        gridLg: grid?.lgGrid || gridColumns || 4,
        gridXl: grid?.xlGrid || gridColumns || 3,
        offsetSm: offset?.smOffset || offsetColumns || 0,
        offsetMd: offset?.mdOffset || offsetColumns || 0,
        offsetLg: offset?.lgOffset || offsetColumns || 0,
        offsetXl: offset?.xlOffset || offsetColumns || 0,
        pullSm: pull?.smPull || 0,
        pullMd: pull?.mdPull || 0,
        pullLg: pull?.lgPull || 0,
        pullXl: pull?.xlPull || 0
    };
    return (`po-sm-${systemGrid.gridSm} po-offset-sm-${systemGrid.offsetSm} po-pull-sm-${systemGrid.pullSm} ` +
        `po-md-${systemGrid.gridMd} po-offset-md-${systemGrid.offsetMd} po-pull-md-${systemGrid.pullMd} ` +
        `po-lg-${systemGrid.gridLg} po-offset-lg-${systemGrid.offsetLg} po-pull-lg-${systemGrid.pullLg} ` +
        `po-xl-${systemGrid.gridXl} po-offset-xl-${systemGrid.offsetXl} po-pull-xl-${systemGrid.pullXl}`);
}
export function isVisibleField(field) {
    const containsVisible = 'visible' in field;
    return containsVisible ? field.visible : true;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHluYW1pYy51dGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWR5bmFtaWMvcG8tZHluYW1pYy51dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sVUFBVSxxQkFBcUIsQ0FBQyxXQUFXLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSTtJQUNsRixNQUFNLFVBQVUsR0FBRztRQUNqQixNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sSUFBSSxXQUFXLElBQUksRUFBRTtRQUN6QyxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sSUFBSSxXQUFXLElBQUksQ0FBQztRQUN4QyxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sSUFBSSxXQUFXLElBQUksQ0FBQztRQUN4QyxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sSUFBSSxXQUFXLElBQUksQ0FBQztRQUN4QyxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsSUFBSSxhQUFhLElBQUksQ0FBQztRQUNoRCxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsSUFBSSxhQUFhLElBQUksQ0FBQztRQUNoRCxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsSUFBSSxhQUFhLElBQUksQ0FBQztRQUNoRCxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsSUFBSSxhQUFhLElBQUksQ0FBQztRQUNoRCxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sSUFBSSxDQUFDO1FBQ3pCLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSxJQUFJLENBQUM7UUFDekIsTUFBTSxFQUFFLElBQUksRUFBRSxNQUFNLElBQUksQ0FBQztRQUN6QixNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sSUFBSSxDQUFDO0tBQzFCLENBQUM7SUFFRixPQUFPLENBQ0wsU0FBUyxVQUFVLENBQUMsTUFBTSxpQkFBaUIsVUFBVSxDQUFDLFFBQVEsZUFBZSxVQUFVLENBQUMsTUFBTSxHQUFHO1FBQ2pHLFNBQVMsVUFBVSxDQUFDLE1BQU0saUJBQWlCLFVBQVUsQ0FBQyxRQUFRLGVBQWUsVUFBVSxDQUFDLE1BQU0sR0FBRztRQUNqRyxTQUFTLFVBQVUsQ0FBQyxNQUFNLGlCQUFpQixVQUFVLENBQUMsUUFBUSxlQUFlLFVBQVUsQ0FBQyxNQUFNLEdBQUc7UUFDakcsU0FBUyxVQUFVLENBQUMsTUFBTSxpQkFBaUIsVUFBVSxDQUFDLFFBQVEsZUFBZSxVQUFVLENBQUMsTUFBTSxFQUFFLENBQ2pHLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxLQUE0QjtJQUN6RCxNQUFNLGVBQWUsR0FBRyxTQUFTLElBQUksS0FBSyxDQUFDO0lBRTNDLE9BQU8sZUFBZSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFDaEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvRHluYW1pY1ZpZXdGaWVsZCB9IGZyb20gJy4vcG8tZHluYW1pYy12aWV3L3BvLWR5bmFtaWMtdmlldy1maWVsZC5pbnRlcmZhY2UnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEdyaWRDb2x1bW5zQ2xhc3NlcyhncmlkQ29sdW1ucywgb2Zmc2V0Q29sdW1ucywgZ3JpZCwgb2Zmc2V0LCBwdWxsKSB7XHJcbiAgY29uc3Qgc3lzdGVtR3JpZCA9IHtcclxuICAgIGdyaWRTbTogZ3JpZD8uc21HcmlkIHx8IGdyaWRDb2x1bW5zIHx8IDEyLFxyXG4gICAgZ3JpZE1kOiBncmlkPy5tZEdyaWQgfHwgZ3JpZENvbHVtbnMgfHwgNixcclxuICAgIGdyaWRMZzogZ3JpZD8ubGdHcmlkIHx8IGdyaWRDb2x1bW5zIHx8IDQsXHJcbiAgICBncmlkWGw6IGdyaWQ/LnhsR3JpZCB8fCBncmlkQ29sdW1ucyB8fCAzLFxyXG4gICAgb2Zmc2V0U206IG9mZnNldD8uc21PZmZzZXQgfHwgb2Zmc2V0Q29sdW1ucyB8fCAwLFxyXG4gICAgb2Zmc2V0TWQ6IG9mZnNldD8ubWRPZmZzZXQgfHwgb2Zmc2V0Q29sdW1ucyB8fCAwLFxyXG4gICAgb2Zmc2V0TGc6IG9mZnNldD8ubGdPZmZzZXQgfHwgb2Zmc2V0Q29sdW1ucyB8fCAwLFxyXG4gICAgb2Zmc2V0WGw6IG9mZnNldD8ueGxPZmZzZXQgfHwgb2Zmc2V0Q29sdW1ucyB8fCAwLFxyXG4gICAgcHVsbFNtOiBwdWxsPy5zbVB1bGwgfHwgMCxcclxuICAgIHB1bGxNZDogcHVsbD8ubWRQdWxsIHx8IDAsXHJcbiAgICBwdWxsTGc6IHB1bGw/LmxnUHVsbCB8fCAwLFxyXG4gICAgcHVsbFhsOiBwdWxsPy54bFB1bGwgfHwgMFxyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICBgcG8tc20tJHtzeXN0ZW1HcmlkLmdyaWRTbX0gcG8tb2Zmc2V0LXNtLSR7c3lzdGVtR3JpZC5vZmZzZXRTbX0gcG8tcHVsbC1zbS0ke3N5c3RlbUdyaWQucHVsbFNtfSBgICtcclxuICAgIGBwby1tZC0ke3N5c3RlbUdyaWQuZ3JpZE1kfSBwby1vZmZzZXQtbWQtJHtzeXN0ZW1HcmlkLm9mZnNldE1kfSBwby1wdWxsLW1kLSR7c3lzdGVtR3JpZC5wdWxsTWR9IGAgK1xyXG4gICAgYHBvLWxnLSR7c3lzdGVtR3JpZC5ncmlkTGd9IHBvLW9mZnNldC1sZy0ke3N5c3RlbUdyaWQub2Zmc2V0TGd9IHBvLXB1bGwtbGctJHtzeXN0ZW1HcmlkLnB1bGxMZ30gYCArXHJcbiAgICBgcG8teGwtJHtzeXN0ZW1HcmlkLmdyaWRYbH0gcG8tb2Zmc2V0LXhsLSR7c3lzdGVtR3JpZC5vZmZzZXRYbH0gcG8tcHVsbC14bC0ke3N5c3RlbUdyaWQucHVsbFhsfWBcclxuICApO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNWaXNpYmxlRmllbGQoZmllbGQ6IHsgdmlzaWJsZT86IGJvb2xlYW4gfSk6IGJvb2xlYW4ge1xyXG4gIGNvbnN0IGNvbnRhaW5zVmlzaWJsZSA9ICd2aXNpYmxlJyBpbiBmaWVsZDtcclxuXHJcbiAgcmV0dXJuIGNvbnRhaW5zVmlzaWJsZSA/IGZpZWxkLnZpc2libGUgOiB0cnVlO1xyXG59XHJcbiJdfQ==